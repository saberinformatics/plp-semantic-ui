<?xml version="1.0" encoding="UTF-8"?>
<sci:data xmlns:sci="http://www.SciTegic.com/" object="SciTegic.Protocol.1" format="8.0.0">
	<sci:dbitem>
		<sci:component name="Chemistry Sketcher Example" version="2">
			<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;/p&gt;

&lt;p&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
			</sci:arg>
			<sci:arg name="Protocol Form" type="ProtocolType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;The path to a protocol that will render an HTML user interface for this protocol.  This optional parameter is used by Web Port to provide a custom user interface for a protocol.&lt;/p&gt;</sci:help>
			</sci:arg>
			<sci:arg name="Advanced Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false" uimpl="true">
				<sci:member>__PoolID</sci:member>
				<sci:member>Http Cookie Handling</sci:member>
				<sci:member>__NotificationProtocol</sci:member>
			</sci:arg>
			<sci:arg name="__PoolID" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;&lt;i&gt;__PoolID&lt;/i&gt; is a case insensitive string that can optionally be set to optimize the speed of execution for quick running protocols.  Multiple protocols with the same value for &lt;i&gt;__PoolID&lt;/i&gt; can share expensive resources such as database connections, Java VMs, memory, etc. reducing the execution time by 1 to 2 seconds per run.  This can give a large speed improvement to protocols that run in a few seconds such as web applications and interactive reports.  Longer running protocols will not see much benefit.  Generally, it is a good idea to use the same &lt;i&gt;__PoolID&lt;/i&gt; for all protocols within a single application such as an interactive report since many of the components, databases, and data structures will be similar.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;__PoolID&lt;/i&gt; can also be specified by the client when the protocol is launched.  If &lt;i&gt;__PoolID&lt;/i&gt; is specified both as a parameter by the client and as a parameter stored within the protocol, the client&apos;s value overrides the stored value.&lt;/p&gt;

&lt;p&gt;To disable pooling entirely for this particular protocol, set &lt;i&gt;__PoolID&lt;/i&gt; to &lt;b&gt;&amp;lt;Disable&amp;gt;&lt;/b&gt;&lt;/p&gt;</sci:help>
			</sci:arg>
			<sci:arg name="Http Cookie Handling" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;&lt;i&gt;Http Cookie Handling&lt;/i&gt; provides a mechanism to control the handling of Http cookies within components that access remote resources via Http and Https.  These include the &lt;a href=&quot;javascript:DoLink(&apos;{8A25024A-C274-485B-BB99-8570DCC4C075}&apos;)&quot;&gt;HTTP Connector&lt;/a&gt;, Data readers such as &lt;a href=&quot;javascript:DoLink(&apos;{8056E8AD-33EA-42BB-9099-EAB24C3D08E6}&apos;)&quot;&gt;Text Reader&lt;/a&gt;, &lt;a href=&quot;javascript:DoLink(&apos;{93C4D73F-0B4D-03F4-B0E3-D82C4FE04C6F}&apos;)&quot;&gt;XML Reader (Generic)&lt;/a&gt;, etc., and custom Java, Perl, and .Net components that use the available APIs for accessing remote servers.  By default, New Protocols will have this setting enabled and set to &quot;Protocol Scope&quot;.  This means that Http cookies obtained from a remote server within any component in the protocol or any of its subprotocols will be parsed and appropriately sent back on subsequent requests from the same component or any other component.   The handling of the cookies is based on the IETF standard as specified in &lt;a href=&quot;javascript:DoLink(&apos;http://tools.ietf.org/html/rfc6265&apos;)&quot;&gt;http://tools.ietf.org/html/rfc6265&lt;/a&gt;.  Setting the parameter to Disabled will prevent components from parsing and returning cookies to the remote servers.&lt;/p&gt;

&lt;p&gt;Persistence of cookies is not supported, so scoping of Http cookies is entirely within the context of a single protocol execution.&lt;/p&gt;

&lt;p&gt;Older protocols that do not have the &lt;i&gt;Http Cookie Handling&lt;/i&gt; parameter will behave as though it had been set to &quot;Disabled&quot;.  To enable cookie handling in these protocols, copy this parameter from a New Protocol to the older protocol and set the parameter as desired.&lt;/p&gt;</sci:help>
				<sci:legalval selected="true">Protocol Scoped</sci:legalval>
				<sci:legalval>Disabled</sci:legalval>
			</sci:arg>
			<sci:arg name="__NotificationProtocol" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;&lt;i&gt;__NotificationProtocol&lt;/i&gt; specifies the name or component ID (guid) of a protocol stored in the server&apos;s protocol database that will be executed when the current job completes. If your administrator has enabled notification protocols and depending on his or her preference, the notify protocol will either run as the anonymous user or as an admin specified user. The notification protocol receives several parameters that contain information about the original job:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;Notify_JobID&lt;/i&gt;: The job id of the execution
&lt;li&gt;&lt;i&gt;Notify_JobStatus&lt;/i&gt;: 
A description of the result of the job execution
&lt;li&gt;&lt;i&gt;Notify_JobStatusCode&lt;/i&gt;: The 
status code that for the result of the job execution.
	&lt;ul style=&quot;list-style-type:circle&quot;&gt;
	
&lt;li&gt;&lt;i&gt;5&lt;/i&gt;: Job was stopped by the client or administrator.
	&lt;li&gt;&lt;i&gt;6&lt;/i&gt;: 
Job completed normally with success.
	&lt;li&gt;&lt;i&gt;7&lt;/i&gt;: Job completed with an error.
	&lt;li&gt;&lt;i&gt;8&lt;/i&gt;: 
The process ID associated with the running job crashed or otherwise disappeared.
	&lt;li&gt;&lt;i&gt;9&lt;/i&gt;: 
Job failed to start.
	&lt;/ul&gt;
&lt;li&gt;&lt;i&gt;Notify_ProtocolName&lt;/i&gt;: The name of the protocol
&lt;li&gt;&lt;i&gt;Notify_ProtocolPath&lt;/i&gt;: 
The path of the protocol in the DB.  This field can be blank for protocols that were launched without 
saving to the database.
&lt;li&gt;&lt;i&gt;Notify_ProtocolLogName&lt;/i&gt;: The log name of the protocol.  
Is usually the same as ProtocolName, however this can be set by the client to a different name than the 
protocol.
&lt;li&gt;&lt;i&gt;Notify_RunHost&lt;/i&gt;: The name of the node where the protocol executed.
&lt;li&gt;&lt;i&gt;Notify_Username&lt;/i&gt;: 
The user that ran the job
&lt;/ul&gt;</sci:help>
			</sci:arg>
			<sci:arg name="Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>The Run On Grid parameter tells the server to run the protocol on the grid engine if the Pipeline Pilot server is configured to run with grid integration.</sci:help>
				<sci:member>Queue Name</sci:member>
				<sci:member>Grid Options</sci:member>
				<sci:legalval>True</sci:legalval>
				<sci:legalval selected="true">False</sci:legalval>
			</sci:arg>
			<sci:arg name="Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
				<sci:help>The Queue Name allows you to specify the name of the queue on the grid engine to submit the job to. Leave blank to specify the default queue.</sci:help>
				<sci:enabledscript>parameter(&apos;Run On Grid&apos;);</sci:enabledscript>
			</sci:arg>
			<sci:arg name="Grid Options" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
				<sci:help>Grid Options allows you to specify options to the grid engine submit command. Leave blank to specify the default options.</sci:help>
				<sci:enabledscript>parameter(&apos;Run On Grid&apos;);</sci:enabledscript>
			</sci:arg>
			<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
				<sci:help>Component Attributes</sci:help>
				<sci:legalval>ComponentTakesInput</sci:legalval>
				<sci:legalval>ComponentReturnsPass</sci:legalval>
				<sci:legalval>ComponentReturnsFail</sci:legalval>
				<sci:legalval>ComponentRunsLocal</sci:legalval>
			</sci:arg>
			<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
				<sci:legalval selected="true">Halt</sci:legalval>
				<sci:legalval>Fail</sci:legalval>
				<sci:legalval>Pass</sci:legalval>
			</sci:arg>
			<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
				<sci:legalval selected="true">Halt</sci:legalval>
				<sci:legalval>Fail</sci:legalval>
				<sci:legalval>Pass</sci:legalval>
			</sci:arg>
			<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
			<sci:arg name="WebExports" type="StringType" required="false" visibility="nevershow" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;A comma delimited list of global properties which will be automatically 
exported if this protocol is published as a web service.&lt;/p&gt;

&lt;p&gt;Each global property in the list is created with an empty value at the start of the protocol run.&lt;/p&gt;</sci:help>
			</sci:arg>
			<sci:arg name="Keep Alive" type="BoolType" required="false" visibility="nevershow" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;Specifies if the process where this protocol is run should stay around for later use.&lt;/p&gt;</sci:help>
				<sci:legalval selected="true">True</sci:legalval>
				<sci:legalval>False</sci:legalval>
			</sci:arg>
			<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>The user who registered this component.</sci:help>
				<sci:value>dbondarev</sci:value>
			</sci:arg>
			<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>The date this component was registered.</sci:help>
				<sci:value>Sat Apr 07 23:24:10 2018</sci:value>
			</sci:arg>
			<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>The server version when this component was registered</sci:help>
				<sci:value>16.1.0.1140</sci:value>
			</sci:arg>
			<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:value>BIOVIA chemistry sketcher in Semantic</sci:value>
			</sci:arg>
			<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
				<sci:help>Protocol AutoLayout</sci:help>
				<sci:value>0</sci:value>
			</sci:arg>
			<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
				<sci:value>PROTOCOLNODE</sci:value>
			</sci:arg>
			<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
				<sci:help>Component Revision</sci:help>
				<sci:value>790</sci:value>
			</sci:arg>
			<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:value>{24E93A7E-E3D7-405A-AAEA-7DDE2FF25835}</sci:value>
			</sci:arg>
			<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
				<sci:help>By Ref</sci:help>
				<sci:value>0</sci:value>
			</sci:arg>
			<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
				<sci:value>100</sci:value>
				<sci:value>Chemistry Sketcher Example.</sci:value>
				<sci:value>An example showing the BIOVIA chemistry sketcher with Semantic UI components.</sci:value>
				<sci:value>None</sci:value>
				<sci:value/>
				<sci:value>None</sci:value>
				<sci:value/>
				<sci:value>None</sci:value>
				<sci:value/>
			</sci:arg>
			<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
			<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
				<sci:help>Protocol Scale</sci:help>
				<sci:value>100</sci:value>
			</sci:arg>
			<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>Protocol Sticky Notes</sci:help>
			</sci:arg>
			<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>Protocol Options</sci:help>
				<sci:legalval>Owner Access Only</sci:legalval>
			</sci:arg>
			<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
				<sci:value>0</sci:value>
			</sci:arg>
			<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
				<sci:help>Local Component Identifier</sci:help>
				<sci:value>-1</sci:value>
			</sci:arg>
			<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:value>50 -50</sci:value>
			</sci:arg>
			<sci:arg name="OriginalPackage" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>OriginalPackage</sci:help>
				<sci:value>scitegic/coreutils</sci:value>
			</sci:arg>
			<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>The original path within the database of this component.</sci:help>
				<sci:value>Protocols\Examples\Semantic UI\Interactive\Chemistry Sketcher Example</sci:value>
			</sci:arg>
		</sci:component>
		<sci:protocol>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="Text Header (Semantic UI)" version="2">
					<sci:arg name="Header Text" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>The text in the header.</sci:help>
						<sci:value>Example of a BIOVIA chemistry sketcher in a semantic ui page</sci:value>
					</sci:arg>
					<sci:arg name="Appearance" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:help>Appearance</sci:help>
						<sci:member>Colored</sci:member>
						<sci:member>Block</sci:member>
						<sci:member>Inverted</sci:member>
						<sci:member>Dividing</sci:member>
						<sci:member>Size</sci:member>
					</sci:arg>
					<sci:arg name="Size" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>A header can have small or large font.</sci:help>
						<sci:legalval selected="true">h1</sci:legalval>
						<sci:legalval>h2</sci:legalval>
						<sci:legalval>h3</sci:legalval>
						<sci:legalval>h4</sci:legalval>
						<sci:legalval>h5</sci:legalval>
					</sci:arg>
					<sci:arg name="Dividing" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>A header can be formatted to divide itself from the content below it.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Colored" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>A header can be given a color to distinguish it from other headers. &lt;p&gt;These colors can be Inverted to become background colors.&lt;/p&gt;</sci:help>
						<sci:legalval/>
						<sci:legalval>red</sci:legalval>
						<sci:legalval>orange</sci:legalval>
						<sci:legalval>yellow</sci:legalval>
						<sci:legalval>olive</sci:legalval>
						<sci:legalval>green</sci:legalval>
						<sci:legalval>teal</sci:legalval>
						<sci:legalval>blue</sci:legalval>
						<sci:legalval>violet</sci:legalval>
						<sci:legalval>purple</sci:legalval>
						<sci:legalval>pink</sci:legalval>
						<sci:legalval>brown</sci:legalval>
						<sci:legalval selected="true">grey</sci:legalval>
						<sci:legalval>black</sci:legalval>
					</sci:arg>
					<sci:arg name="Block" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>A header can be formatted to appear inside a content block.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Inverted" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>A header&apos;s colors can be inverted.</sci:help>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable &apos;.ParameterName().&apos;, set Block to &quot;True&quot;&apos;);
Parameter(&apos;Block&apos;);</sci:enabledscript>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
						<sci:value>classes_, h_</sci:value>
					</sci:arg>
					<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
						<sci:member>RunToCompletion Categorize Using</sci:member>
						<sci:legalval selected="true">False</sci:legalval>
						<sci:legalval>True - For Each Data Record</sci:legalval>
						<sci:legalval>True - For Each Category</sci:legalval>
					</sci:arg>
					<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
						<sci:member>Parallel Processing Options Batch Size</sci:member>
						<sci:member>Parallel Processing Options Server</sci:member>
						<sci:member>Parallel Processing Options Preserve Order</sci:member>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
						<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
#rtcForEachCategory := (Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
elsif (#rtcForEachCategory) then
	SetDisabledDetails(&quot;This parameter is not applicable when &apos;RunToCompletion&apos; is set to &apos;True - For Each Category&apos;&quot;);
end if;
#parallel and not #rtcForEachCategory;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
						<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
						<sci:member>Parallel Processing Options Server Processes</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
						<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Run subprotocol on grid engine if available.</sci:help>
						<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid Grid Options</sci:member>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
						<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Grid Options" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Use this to specify grid engine specific command line parameters to the job submission command. Leave blank to use defaults.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval>ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="Popup" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
							<sci:propval name="SCI_InitializeUsingOrigType">GroupType</sci:propval>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup displays additional information in a temporary message.</sci:help>
						<sci:member>Popup Content</sci:member>
						<sci:member>Basic Popup</sci:member>
						<sci:member>Popup Appearance</sci:member>
						<sci:member>Behavior</sci:member>
					</sci:arg>
					<sci:arg name="Popup Content" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Popup Content</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>Popup content. (HTML is allowed).</sci:help>
					</sci:arg>
					<sci:arg name="Basic Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Basic Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can provide basic or extended formatting.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Popup Appearance" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Popup Appearance</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>Appearance</sci:help>
						<sci:member>Popup Width</sci:member>
						<sci:member>Fluid Popup</sci:member>
						<sci:member>Popup Size</sci:member>
						<sci:member>Flowing Popup</sci:member>
						<sci:member>Inverted Popup</sci:member>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable &apos;.ParameterName().&apos;, set Basic Popup to False&apos;);
not Parameter(&apos;Basic Popup&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Popup Width" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Popup Width</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can be wide or very wide to allow for longer content.</sci:help>
						<sci:legalval/>
						<sci:legalval>wide</sci:legalval>
						<sci:legalval>very wide</sci:legalval>
					</sci:arg>
					<sci:arg name="Fluid Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Fluid Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A fluid popup will take up the entire width of its  container.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Popup Size" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Popup Size</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can vary in font size.</sci:help>
						<sci:legalval/>
						<sci:legalval>mini</sci:legalval>
						<sci:legalval>tiny</sci:legalval>
						<sci:legalval>small</sci:legalval>
						<sci:legalval>large</sci:legalval>
						<sci:legalval>huge</sci:legalval>
					</sci:arg>
					<sci:arg name="Flowing Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Flowing Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can have no maximum width and continue to flow to fit its content.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Inverted Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Inverted Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can have its colors inverted.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Behavior" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Behavior</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>Behavior</sci:help>
						<sci:member>Show On</sci:member>
					</sci:arg>
					<sci:arg name="Show On" type="StringType" required="true" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Show On</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>When to show the popup. Hover (mouseover), click, focus (when a form element such as a text box is in focus).</sci:help>
						<sci:legalval selected="true">hover</sci:legalval>
						<sci:legalval>click</sci:legalval>
						<sci:legalval>focus</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Text Header (Semantic UI)</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>ReportTextNode</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>790</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{E3C33187-BDCE-4E6B-A065-7AC26F529BE3}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>666 -95</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Text Header (Semantic UI).</sci:value>
						<sci:value>&lt;p&gt;A header provides a short summary of content. You may use HTML in the header text if you wish.&lt;/p&gt;</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
						<sci:value>None</sci:value>
						<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>16.1.0.1140</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval>Owner Access Only</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>bondadx2</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Tue Jun 14 10:56:02 2016</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>7</sci:value>
					</sci:arg>
					<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Processing Order</sci:help>
						<sci:value>DrainTopDown</sci:value>
					</sci:arg>
					<sci:arg name="OriginalPackage" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>OriginalPackage</sci:help>
						<sci:value>scitegic/coreutils</sci:value>
					</sci:arg>
					<sci:arg name="OriginalComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>OriginalComponentGUID</sci:help>
						<sci:value>{7DB736DB-2B9F-43E6-9B58-2DDD938BF8D3}</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Semantic UI\Page\Text Header (Semantic UI)</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol/>
			</sci:data>
			<sci:data object="SciTegic.MDLSDReader.1">
				<sci:component name="Asinex Reader" version="2">
					<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false" expanded="true">
						<sci:help>The file or URL source to read</sci:help>
						<sci:member>Maximum</sci:member>
						<sci:member>SourceTag</sci:member>
						<sci:member>Keep Properties</sci:member>
						<sci:value>data\Asinex\asinex_sd.zip</sci:value>
					</sci:arg>
					<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
						<sci:help>The maximum number of data records to read (all if value is empty)</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="SourceTag" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;The type of tag to create to identify the source of data records. A property called 

&lt;b&gt;SourceTag&lt;/b&gt; is created and holds the value indicated.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;None&lt;/b&gt;: 

No SourceTag property is created and any existing ones are removed.&lt;/li&gt;&lt;li&gt;&lt;b&gt;Filename&lt;/b&gt;: 

The name of the file read.&lt;/li&gt;&lt;li&gt;&lt;b&gt;FilenameAndExtension&lt;/b&gt;: The name of 
the 
file read with its file extension.&lt;/li&gt;&lt;li&gt;&lt;b&gt;FullFilename&lt;/b&gt;: The name 
of the 
file read, including the directory path.&lt;/li&gt;&lt;li&gt;&lt;b&gt;ZipFilename&lt;/b&gt;: 
When reading 
a compressed zip file, the filename within the compressed archive.&lt;/li&gt;&lt;li&gt;&lt;b&gt;Number&lt;/b&gt;: 

When multiple files are read in this component, they are numbered 1,2,3...&lt;/li&gt;&lt;li&gt;&lt;b&gt;Letter&lt;/b&gt;: 

When multiple files are read in this component, they are lettered A, B, C...&lt;/li&gt;&lt;li&gt;&lt;b&gt;KeepCurrent&lt;/b&gt;: 

Keeps the current value of SourceTag.&lt;/li&gt;&lt;/ul&gt;</sci:help>
						<sci:legalval selected="true">None</sci:legalval>
						<sci:legalval>Filename</sci:legalval>
						<sci:legalval>FilenameAndExtension</sci:legalval>
						<sci:legalval>FullFilename</sci:legalval>
						<sci:legalval>ZipFilename</sci:legalval>
						<sci:legalval>Number</sci:legalval>
						<sci:legalval>Letter</sci:legalval>
						<sci:legalval>KeepCurrent</sci:legalval>
					</sci:arg>
					<sci:arg name="Keep Properties" type="PropertyPreviewType" required="false" visibility="visible" multi="false">
						<sci:help>A list of properties the reader should retain for each data record that is output. If a value is not defined, retains all properties. If the parameter contains the value &quot;-&quot; (minus sign), properties are not retained.</sci:help>
					</sci:arg>
					<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
						<sci:help>Contains less commonly used parameters</sci:help>
						<sci:member>ReadProperties</sci:member>
						<sci:member>PutNameInProperty</sci:member>
						<sci:member>ReadQueryInfo</sci:member>
						<sci:member>PutCommentInProperty</sci:member>
						<sci:member>SD Format Options</sci:member>
						<sci:member>Global Templates</sci:member>
					</sci:arg>
					<sci:arg name="SD Format Options" type="StringType" required="false" visibility="visible" multi="true">
						<sci:help>&lt;p&gt;Options available for the SD Reader:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Properties 
Can Contain $$$$:&lt;/b&gt;  By the CTFile standard, a property can contain a &apos;$$$$&apos;-line.  

Properties or data field values are terminated by a blank line.  Only then will the &apos;$$$$&apos;-line 

terminate the full data block.  Setting this option off will terminate the data block upon any read 
of 
a &apos;$$$$&apos;-line.  This option is available to provide compatibility with some 3rd Party SD 
files.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;One-space Lines Terminate Properties:&lt;/b&gt;  By the CTFile 
standard, properties or data fields values are 
terminated by a blank line. Selecting this option will 
terminate the data block when encountering a line 
containing a space as the only character in the line.  
This option is available to provide compatibility 
with some 3rd Party SD files.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Unwrap 
Long Property Lines:&lt;/b&gt;  By the CTFile standard, lines in property fields cannot exceed 200 
characters.  When this option is selected and a property line of exactly 200 characters is found, the 
newline character will be ignored and property string will continue on the next line.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Read 
Unknown Stereo Parity:&lt;/b&gt;  When selected, the SD Reader will use the &apos;Atom Parity&apos; value 
(parity of 
&apos;3&apos;) to mark unknown stereo centers in 3D mol files.  This will leave these atoms 
marked as 
&apos;unknown stereo&apos; and will not calculate the stereo from the coordinates.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Process 
Complex Data Header Lines:&lt;/b&gt; Data header lines are the lines in the SD format that precede 
the actual data. They can contain the data field name (enclosed in angular brackets &lt;&gt;), the data 
field number (as DTn), the external registry number (enclosed in parentheses), and other optional information. 
When this parameter is set to False, only the data field name is parsed and used to set the corresponding 
property name. All the other information in the line is ignored. When the parameter is set to true, all 
the information is parsed. The property name is set from either the field name in &lt;&gt; or the DTn. 
If both are present the field name takes priority and the DTn number is saved as an additional property 
named &lt;b&gt;FieldName#DTn&lt;/b&gt;. The external registry number is saved as &lt;b&gt;FieldName#ExtRegNum&lt;/b&gt; 
and any other information is saved as &lt;b&gt;FieldName#OtherDataFieldInfo&lt;/b&gt;. When the molecules 
are written to an SD file, the data header lines are reconstructed from these properties. The default 
state of this parameter is False, as parsing, preserving, and eventually writing all the information 
in the data header lines can be costly, specially for SD files with many data fields.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Convert 
From H2 And H+ Atom Types:&lt;/b&gt; &apos;H2&apos; and &apos;H+&apos; are two non-standard element types 
that can be assigned to atoms by the BIOVIA Draw sketcher. They represent unattached Hydrogen (a Hydrogen molecule) 
and charged Hydrogen (a proton), respectively. When this parameter is selected, these atom types are 
converted to standard hydrogen atoms upon reading, with charges of 0 for H2 and +1 for H+. Otherwise, 
these atoms are read and perceived as unknown atom types, with &apos;H2&apos; and &apos;H+&apos; as the 
atom labels.&lt;/li&gt; 
&lt;/ul&gt;</sci:help>
						<sci:legalval selected="true">Properties Can Contain $$$$</sci:legalval>
						<sci:legalval>One-space Lines Terminate Properties</sci:legalval>
						<sci:legalval selected="true">Unwrap Long Property Lines</sci:legalval>
						<sci:legalval>Read Unknown Stereo Parity</sci:legalval>
						<sci:legalval>Process Complex Data Header Lines</sci:legalval>
						<sci:legalval selected="true">Convert From H2 And H+ Atom Types</sci:legalval>
					</sci:arg>
					<sci:arg name="ReadProperties" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>Select True to read the properties for each molecule (in addition to the structures)</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="ReadQueryInfo" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>If properties starting with &quot;QueryInfo&quot; are present, use them to set up query information on the atoms and bonds. (This is how, for example, SMARTS query information can be preserved when writing to an SD format file.) This information only contains information that cannot be written out in MOL/SD format.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="PutNameInProperty" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>What to call the property that holds the name of each molecule</sci:help>
						<sci:value>Name</sci:value>
					</sci:arg>
					<sci:arg name="PutCommentInProperty" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>What to call the property that holds the comment associated with each molecule</sci:help>
					</sci:arg>
					<sci:arg name="Global Templates" type="URLType" required="false" visibility="visible" multi="false">
						<sci:help>V3000 SD or MOL files containing template definitions for amino acid, nucleic acid or other residues or monomers. These templates can then be refered to by molecules read by the SD reader.&lt;p&gt;
The default template file included in the Chemistry collection, &lt;i&gt;data\Direct\Direct_templates.mol&lt;/i&gt; contains definitions for 22 amino acids and 8 DNA and RNA templates.</sci:help>
						<sci:value>data\Direct\Direct_templates.mol</sci:value>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval>ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="AllowUnknownDoubleBondsFromCoordinates" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>According to the CTfile specifications, the cis/trans character of double bonds with bond stereo set to zero is determined from the coordinates. This parameter controls whether or not to assign unknown bond stereo to double bonds for which the stereo could not be determined from the coordinates, either because there are no coordinates or because of colinearity issues.  When the parameter is set to False and the stereo could not be determined, no specific stereo configuration is assigned to the double bond, but it is not marked as unknown stereo.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/chemistry</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Tue Oct 07 13:40:58 2014</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Asinex Reader</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>DOCUMENTNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{6719DB99-1BD7-4B22-8FF8-B06F469B1A5C}</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>SD Reader</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>90 -395</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Loads 137,000 compounds from the Asinex vendor catalog</sci:value>
						<sci:value>&lt;p&gt;Reads molecules and property data from a zipped SD file containing approximately 137,000 compounds from Asinex.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;p&gt;
&lt;ul&gt;
&lt;li&gt;This is a specific instance of the &lt;a href=&quot;javascript:DoLink(&apos;{CA65B896-4FE6-4E3A-B884-DC16B53B8D26}&apos;)&quot;&gt;SD Reader&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>Molecule</sci:value>
						<sci:value>Data fields in the SD file will be added to the property fields</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>9.5.0.606</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>8</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Chemistry\Utilities\Demo Sources\Asinex Reader</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.ComponentJavaPlugin.1">
				<sci:component name="Chemistry Sketcher" version="2">
					<sci:arg name="Parameter to Map" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;The name of a parameter on the target protocol that this molecule&apos;s CTAB value should be mapped to.&lt;/p&gt;

&lt;p&gt;If you&apos;re using this component in a report (as opposed to a form protocol), enter &quot;xxx&quot; (without the quotes) or any other text for &lt;i&gt;Parameter to Map&lt;/i&gt;.&lt;/p&gt;

&lt;p&gt;The molecule is also available in the format that is native to the sketcher used. This will be passed in a parameter called &quot;__&amp;lt;ptm&amp;gt;__&amp;lt;suffix&amp;gt;&quot;, where there are two underscores preceding &amp;lt;ptm&amp;gt; and between &amp;lt;ptm&amp;gt; and &amp;lt;suffix&amp;gt;, &amp;lt;ptm&amp;gt; is the value of this parameter, and &amp;lt;suffix&amp;gt; is the file suffix appropriate for the native data format, as shown below:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;BIOVIA Draw - skc&lt;/li&gt;
	&lt;li&gt;ChemDraw - cdx&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The skc and cdx data are Base64-encoded to ensure reliable submission using HTTP. These parameters need to be decoded using the &lt;code&gt;convertfrombase64()&lt;/code&gt; PilotScript function before they can be converted to a molecule.&lt;/p&gt;</sci:help>
						<sci:value>mol</sci:value>
					</sci:arg>
					<sci:arg name="Sketch Tool" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;The sketcher application to launch when the user double clicks on the molecule.&lt;/p&gt;

&lt;p&gt;Users with the BIOVIA Draw sketcher installed should run it from the desktop at least once before the plugin can properly launch it to display a molecule.&lt;/p&gt;</sci:help>
						<sci:legalval selected="true">BIOVIA Draw</sci:legalval>
						<sci:legalval>ChemDraw</sci:legalval>
					</sci:arg>
					<sci:arg name="Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Specifies formatting to be applied to this element. Editing this parameter opens the Format Dialog.&lt;/p&gt;

&lt;p&gt;Depending on what this Format is being applied to, options may include:
&lt;ul&gt;&lt;li&gt;Font settings (e.g., Color, Size, Bold, Italic, Underline)&lt;/li&gt;
&lt;li&gt;Border settings (e.g., Color, Style, Width)&lt;/li&gt;
&lt;li&gt;Background settings (Color, Image)&lt;/li&gt;
&lt;li&gt;Alignment settings&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Only options that are relevant for this specific Format parameter will be displayed.&lt;/li&gt;
&lt;li&gt;Background Image: Allows you to select a background image for the reporting element. This image must be accessible to the Pipeline Pilot server. For example, there are some example images in the apps\scitegic\generic\dataroot\data\Images folder in your Pipeline Pilot installation (shortcut is &quot;generic\Images&quot; folder). To use your own images, you need to upload them to a location such as your userdir or jobdir. An easy way to do this is to use the Binary Reader component to read the file, and the Binary Writer component to save it to the chosen location. Supported image types include .gif, .jpg, .png, and .bmp.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
						<sci:value>700</sci:value>
						<sci:value>Borders</sci:value>
						<sci:value>Top,Right,Bottom,Left</sci:value>
						<sci:value/>
						<sci:value>Background Color</sci:value>
						<sci:value>Seashell</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="Position" type="PositionType" required="false" visibility="visible" multi="false">
						<sci:help>Specifies how this element is positioned. Editing this parameter opens the Position dialog, which enables you to change margins, paddings, width, and height.</sci:help>
						<sci:value>600</sci:value>
						<sci:value>Width</sci:value>
						<sci:value>400.0</sci:value>
						<sci:value>Pixels</sci:value>
						<sci:value>Height</sci:value>
						<sci:value>400.0</sci:value>
						<sci:value>Pixels</sci:value>
						<sci:value>Margin Top</sci:value>
						<sci:value>10.0</sci:value>
						<sci:value>Pixels</sci:value>
					</sci:arg>
					<sci:arg name="Links and Actions" type="GroupType" required="false" visibility="visible" multi="false">
						<sci:help>Links and actions to be applied to the report element produced by this component.</sci:help>
						<sci:member>Link Target</sci:member>
						<sci:member>HTML Attributes</sci:member>
						<sci:member>Initialization Callback</sci:member>
					</sci:arg>
					<sci:arg name="Link Target" type="ExpressionType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Sets this element as the destination for links from other elements in the report. The value of &lt;i&gt;Link Target&lt;/i&gt; can be text or a property name, and should match the value of &lt;i&gt;Link&lt;/i&gt; in another report component.  In the resulting report, when the element with &lt;i&gt;Link&lt;/i&gt; is clicked, the element with the matching &lt;i&gt;Link Target&lt;/i&gt; is brought to the top of the report page.</sci:help>
					</sci:arg>
					<sci:arg name="HTML Attributes" type="HTMLAttributesType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;Can be used to set the ID of the sketcher for the purposes of obtaining references to it using the chemistry sketcher API. The ID will be applied to the form element (a hidden &amp;lt;input&amp;gt;) which holds the CTAB associated with the sketcher. No other HTML attributes are supported on this component.&lt;/p&gt;</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="Initialization Callback" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;A JavaScript function to be called when the chemistry sketcher instance is initialized and ready to be interacted with. The function will be called with a single argument, the ID of the chemistry sketcher (which may be specified using the &lt;em&gt;HTML Attributes&lt;/em&gt; parameter).&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Column Settings" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Column settings control how the element appears when it is used inside a table.</sci:help>
						<sci:member>Column Settings Header Text</sci:member>
						<sci:member>Column Settings Header Format</sci:member>
						<sci:member>Column Settings Header Position</sci:member>
						<sci:member>Column Settings Cell Format</sci:member>
						<sci:member>Column Settings Cell Position</sci:member>
					</sci:arg>
					<sci:arg name="Column Settings Header Text" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>When the element is used within a Table component, this parameter sets the text displayed at the top of its column.</sci:help>
					</sci:arg>
					<sci:arg name="Column Settings Header Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>&lt;p&gt;When used in a table, this parameter sets the format of the text displayed 
at the top of its column.
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Font Size: Sets font size&lt;/li&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:value>700</sci:value>
					</sci:arg>
					<sci:arg name="Column Settings Header Position" type="PositionType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>When the element is used within a Table component, this parameter sets the position of the text displayed at the top of its column.</sci:help>
					</sci:arg>
					<sci:arg name="Column Settings Cell Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>When used in a table, this parameter sets the format of the cells in the column.
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Font Size: Sets font size&lt;/li&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:value>700</sci:value>
					</sci:arg>
					<sci:arg name="Column Settings Cell Position" type="PositionType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>When the element is used within a Table component, this parameter sets the position of the cells in the column.</sci:help>
					</sci:arg>
					<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;Parameters configuring complex component behavior. These wil typically not need to be modified.&lt;/p&gt;</sci:help>
						<sci:member>Use Sketch Tool CTAB</sci:member>
						<sci:member>Alternate Sketch Converter URL</sci:member>
						<sci:member>Read Only</sci:member>
						<sci:member>Do Not Add MDLSK to Clipboard</sci:member>
					</sci:arg>
					<sci:arg name="Use Sketch Tool CTAB" type="BoolType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;If true, put the CTAB provided by the sketch tool into the form directly, instead of converting from native format using Pipeline Pilot. This ensures the accurate transfer of abbreviations and templates from BIOVIA Draw to Pipeline Pilot.&lt;/p&gt;

&lt;p&gt;If false, take the molecular data from the sketch tool in native format and use Pipeline Pilot to convert it into CTAB.&lt;/p&gt;</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Read Only" type="BoolType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;Set to true to prevent the initially displayed chemistry from being updated by changes made in the sketcher. The chemistry can still be changed via the JavaScript API. This may be useful if the purpose of the sketcher is to make live chemistry available, but to keep tight control over the molecules submitted in a form submission.&lt;/p&gt;</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Do Not Add MDLSK to Clipboard" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>Suppress the addition of the MDLSK data (Draw&apos;s native SKC format) to the clipboard upon a copy sketch command.  This is useful when copying from the sketcher into Draw as it force Draw to use the MDLCT (binary CTAB format) when accepting a paste.  The MDLCT format is better supported by Pipeline Pilot.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Depiction Options" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Options that control the molecular depictions</sci:help>
						<sci:member>Atoms</sci:member>
						<sci:member>Bonds</sci:member>
						<sci:member>Colors</sci:member>
						<sci:member>Fonts</sci:member>
						<sci:member>General</sci:member>
						<sci:member>Haptic/Markush</sci:member>
						<sci:member>Reactions</sci:member>
						<sci:member>Rgroups</sci:member>
						<sci:member>Sequences</sci:member>
						<sci:member>Sgroups</sci:member>
						<sci:member>Stereochemistry</sci:member>
						<sci:member>Zero Order Bonds</sci:member>
						<sci:member>Caption Property</sci:member>
						<sci:member>AtomAttributeProperty</sci:member>
						<sci:enabledscript>parameter(&quot;Use Global Depiction Settings&quot;) eq false</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Caption Property" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>The property used to display a caption for the picture. If this parameter is 
not defined, a caption is not displayed. </sci:help>
					</sci:arg>
					<sci:arg name="AtomAttributeProperty" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>The name of the atom attribute that contains a value for display</sci:help>
						<sci:value>Label</sci:value>
					</sci:arg>
					<sci:arg name="Atoms" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Depiction options that control the drawing of atoms and atom labels</sci:help>
						<sci:member>AtomLabelsScaleFactor</sci:member>
						<sci:member>DisplayHighlightedAtomsAs</sci:member>
						<sci:member>DrawImplicitHydrogens</sci:member>
						<sci:member>AtomLabelPadding</sci:member>
						<sci:member>Display Charge</sci:member>
						<sci:member>Display Valence</sci:member>
						<sci:member>Display Star Atoms As</sci:member>
						<sci:member>Display &apos;Pol&apos; Atoms As Circles</sci:member>
						<sci:member>Display Hydrogen Isotopes as 2H and 3H</sci:member>
					</sci:arg>
					<sci:arg name="AtomLabelsScaleFactor" type="DoubleType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>Factor to scale the size of the atom labels (atom type, atom number, valence, value, charge). Set this factor to the default value of 1.0 to use the font size determined internally by PipelinePilot. Values greater than 1.0 will increase the font size. Values smaller than 1.0 will decrease the font size.  </sci:help>
						<sci:value>1.0</sci:value>
					</sci:arg>
					<sci:arg name="DisplayHighlightedAtomsAs" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Select how to highlight selected atoms.
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;ColoredBlocks:&lt;/b&gt;  Display a colored block superimposed on all the selected atoms.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;ColoredLabels:&lt;/b&gt;  Color all the selected atom labels with the same highlight color.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:legalval>ColoredBlocks</sci:legalval>
						<sci:legalval selected="true">ColoredLabels</sci:legalval>
					</sci:arg>
					<sci:arg name="DrawImplicitHydrogens" type="StringType" required="false" visibility="visible" multi="true" uimpl="false">
						<sci:help>Defines which implicit Hydrogen atoms to draw:
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;AllHydrogens:&lt;/b&gt;  Displays all implicit Hydrogen atoms (this option overrides the other options).&lt;/li&gt;
&lt;li&gt;&lt;b&gt;HeteroHydrogens:&lt;/b&gt;  Displays implicit Hydrogen atoms on heteroatoms.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;TerminalCarbonHydrogens:&lt;/b&gt;  Displays implicit Hydrogen atoms on terminal Carbon atoms.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:legalval>AllHydrogens</sci:legalval>
						<sci:legalval selected="true">HeteroHydrogens</sci:legalval>
						<sci:legalval>TerminalCarbonHydrogens</sci:legalval>
					</sci:arg>
					<sci:arg name="AtomLabelPadding" type="LongType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Padding size, in percentage of the average bond length, to use around atom type labels in the molecular image. This parameter controls how much white space to leave between atom type labels and the lines representing bonds.</sci:help>
						<sci:value>8</sci:value>
					</sci:arg>
					<sci:arg name="Display Charge" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Specify whether or not to display non-zero atom charges</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Display Valence" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Specify whether or not to display non-standard atom valences</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Display Star Atoms As" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>How to display unknown star (*) atoms
&lt;ul&gt;
&lt;li&gt;As a star (*).&lt;/li&gt;
&lt;li&gt;As a zigzag line.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:legalval>Zigzag Line</sci:legalval>
						<sci:legalval selected="true">Star (*)</sci:legalval>
					</sci:arg>
					<sci:arg name="Display &apos;Pol&apos; Atoms As Circles" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Whether or not to display &apos;Pol&apos; atom types as a circle. When set to False, these atoms are displayed using a &apos;Pol&apos; label.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Display Hydrogen Isotopes as 2H and 3H" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>When set to True, Hydrogen isotopes are displayed as &apos;2H&apos; and &apos;3H&apos; instead of &apos;D&apos; and &apos;T&apos;</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Bonds" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Depiction options that control the drawing of bonds and bond labels</sci:help>
						<sci:member>DrawAromaticRings</sci:member>
						<sci:member>DisplayHighlightedBondsAs</sci:member>
						<sci:member>Draw Bond Query Labels</sci:member>
						<sci:member>Position of Bond Labels</sci:member>
						<sci:member>Bond Thickness</sci:member>
						<sci:member>Double Bond Width</sci:member>
						<sci:member>Wedge Bond Width</sci:member>
						<sci:member>Spacing of Down Bond Hashes</sci:member>
						<sci:member>DrawUnknownDoubleBonds</sci:member>
					</sci:arg>
					<sci:arg name="DrawAromaticRings" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>How to draw aromatic rings.
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;UsingSingleDoubleBonds:&lt;/b&gt;  A kekule representation using alternating single and double bonds.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;AsSolidCircles:&lt;/b&gt;  A solid circle is drawn inside the aromatic ring.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:legalval selected="true">UsingSingleDoubleBonds</sci:legalval>
						<sci:legalval>AsSolidCircles</sci:legalval>
					</sci:arg>
					<sci:arg name="DisplayHighlightedBondsAs" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>
        Select how to highlight selected bonds.
        &lt;ul&gt;
        &lt;li&gt;&lt;b&gt;ColoredLines:&lt;/b&gt;  Color all the selected bonds with the specified highlight color.&lt;/li&gt;
        &lt;li&gt;&lt;b&gt;ThickLines:&lt;/b&gt;  Use a thicker line to draw the selected bonds.&lt;/li&gt;
        &lt;li&gt;&lt;b&gt;ThickColoredLines:&lt;/b&gt;  Use a thicker line and the highlight color to draw the selected bonds.&lt;/li&gt;
        &lt;/ul&gt;
      </sci:help>
						<sci:legalval selected="true">ColoredLines</sci:legalval>
						<sci:legalval>ThickLines</sci:legalval>
						<sci:legalval>ThickColoredLines</sci:legalval>
					</sci:arg>
					<sci:arg name="Draw Bond Query Labels" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Whether or not to draw labels indicating the bond query types (s/d, s/a, d/a, ...)</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Position of Bond Labels" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Specifies the position of bond labels, such as query bond types (any, s/d, s/a, d/a), topologies (Ch, Rn), or bond numbers. The labels are placed either at one side of the bond or on top of the bond.</sci:help>
						<sci:legalval>At One Side of the Bond</sci:legalval>
						<sci:legalval selected="true">On Top of the Bond</sci:legalval>
					</sci:arg>
					<sci:arg name="Bond Thickness" type="DoubleType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Specify the thickness of the lines used to represent bonds</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="Double Bond Width" type="DoubleType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Specifies the width of double bonds, as a fraction of the bond length</sci:help>
						<sci:value>0.2</sci:value>
					</sci:arg>
					<sci:arg name="Wedge Bond Width" type="DoubleType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Specifies the width of stereo bond wedges, as a fraction of the bond length (including Either bonds)</sci:help>
						<sci:value>0.08</sci:value>
					</sci:arg>
					<sci:arg name="Spacing of Down Bond Hashes" type="DoubleType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>Specifies the spacing between the lines of down bond wedges</sci:help>
						<sci:value>4.0</sci:value>
					</sci:arg>
					<sci:arg name="DrawUnknownDoubleBonds" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>How to draw double bonds with unknown stereochemistry (such as in molecules read from SMILES); 
either &lt;b&gt;AsStandardDoubleBond&lt;/b&gt; or &lt;b&gt;AsCrossedLines&lt;/b&gt;.</sci:help>
						<sci:member>Include Double Bonds in Small Rings</sci:member>
						<sci:legalval>AsStandardDoubleBond</sci:legalval>
						<sci:legalval selected="true">AsCrossedLines</sci:legalval>
					</sci:arg>
					<sci:arg name="Include Double Bonds in Small Rings" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>If &lt;i&gt;False&lt;/i&gt; (the default), double bonds in small rings (size 7 or less) are never displayed as cross lines even if they are marked as unknown cis/trans stereo.</sci:help>
						<sci:enabledscript>parameter(&apos;DrawUnknownDoubleBonds&apos;) eq &apos;AsCrossedLines&apos;</sci:enabledscript>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Colors" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Depiction options that control the selection of colors to draw the structures</sci:help>
						<sci:member>UseColor</sci:member>
						<sci:member>Background Color</sci:member>
						<sci:member>Foreground Color</sci:member>
						<sci:member>Elements</sci:member>
					</sci:arg>
					<sci:arg name="UseColor" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>If set to true, the molecular image will be colored according to atom types.  If false, the image will be black and white only.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Background Color" type="ColorType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Specify the background color to use to draw the image.
&lt;br&gt;
&lt;i&gt;Transparent&lt;/i&gt; should be set to &apos;False&apos; for this parameter to be active.</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>White</sci:value>
					</sci:arg>
					<sci:arg name="Foreground Color" type="ColorType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Specify the foreground color to use to draw the image.</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) eq true</sci:enabledscript>
						<sci:value>Black</sci:value>
					</sci:arg>
					<sci:arg name="Elements" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:member>H</sci:member>
						<sci:member>Li</sci:member>
						<sci:member>B</sci:member>
						<sci:member>C</sci:member>
						<sci:member>N</sci:member>
						<sci:member>O</sci:member>
						<sci:member>F</sci:member>
						<sci:member>Na</sci:member>
						<sci:member>Mg</sci:member>
						<sci:member>Al</sci:member>
						<sci:member>Si</sci:member>
						<sci:member>P</sci:member>
						<sci:member>S</sci:member>
						<sci:member>Cl</sci:member>
						<sci:member>K</sci:member>
						<sci:member>Ca</sci:member>
						<sci:member>Se</sci:member>
						<sci:member>Br</sci:member>
						<sci:member>Sn</sci:member>
						<sci:member>I</sci:member>
						<sci:member>Fe</sci:member>
						<sci:member>Cu</sci:member>
						<sci:member>Ag</sci:member>
						<sci:member>Cd</sci:member>
						<sci:member>Au</sci:member>
						<sci:member>Hg</sci:member>
						<sci:member>Other</sci:member>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) eq true</sci:enabledscript>
					</sci:arg>
					<sci:arg name="H" type="ColorType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Color to use to draw H atoms.</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>#00006E</sci:value>
					</sci:arg>
					<sci:arg name="Li" type="ColorType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Color to use to draw Li atoms.</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>#C87DF5</sci:value>
					</sci:arg>
					<sci:arg name="B" type="ColorType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Color to use to draw B atoms.</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>#F0AA6E</sci:value>
					</sci:arg>
					<sci:arg name="C" type="ColorType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Color to use to draw C atoms.</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>#6E6E6E</sci:value>
					</sci:arg>
					<sci:arg name="N" type="ColorType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Color to use to draw N atoms.</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>#3250FF</sci:value>
					</sci:arg>
					<sci:arg name="O" type="ColorType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Color to use to draw O atoms.</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>#F00A0A</sci:value>
					</sci:arg>
					<sci:arg name="F" type="ColorType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Color to use to draw F atoms.</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>#8CD24B</sci:value>
					</sci:arg>
					<sci:arg name="Na" type="ColorType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Color to use to draw Na atoms.</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>#A050DC</sci:value>
					</sci:arg>
					<sci:arg name="Mg" type="ColorType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Color to use to draw Mg atoms.</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>#87FA00</sci:value>
					</sci:arg>
					<sci:arg name="Al" type="ColorType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Color to use to draw Al atoms.</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>#AF96A0</sci:value>
					</sci:arg>
					<sci:arg name="Si" type="ColorType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Color to use to draw Si atoms.</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>#F0C8A0</sci:value>
					</sci:arg>
					<sci:arg name="P" type="ColorType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Color to use to draw P atoms.</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>#E67800</sci:value>
					</sci:arg>
					<sci:arg name="S" type="ColorType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Color to use to draw S atoms.</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>#FFAF00</sci:value>
					</sci:arg>
					<sci:arg name="Cl" type="ColorType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Color to use to draw Cl atoms.</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>#1EE11E</sci:value>
					</sci:arg>
					<sci:arg name="K" type="ColorType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Color to use to draw K atoms.</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>#9646D2</sci:value>
					</sci:arg>
					<sci:arg name="Ca" type="ColorType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Color to use to draw Ca atoms.</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>#32DC00</sci:value>
					</sci:arg>
					<sci:arg name="Se" type="ColorType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Color to use to draw Se atoms.</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>#FFAF28</sci:value>
					</sci:arg>
					<sci:arg name="Br" type="ColorType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Color to use to draw Br atoms.</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>#A02828</sci:value>
					</sci:arg>
					<sci:arg name="Sn" type="ColorType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Color to use to draw Sn atoms.</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>#5A6E6E</sci:value>
					</sci:arg>
					<sci:arg name="I" type="ColorType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Color to use to draw I atoms.</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>#960096</sci:value>
					</sci:arg>
					<sci:arg name="Fe" type="ColorType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Color to use to draw Fe atoms.</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>#AF5A00</sci:value>
					</sci:arg>
					<sci:arg name="Cu" type="ColorType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Color to use to draw Cu atoms.</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>#C8823C</sci:value>
					</sci:arg>
					<sci:arg name="Ag" type="ColorType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Color to use to draw Ag atoms.</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>#B9B9B9</sci:value>
					</sci:arg>
					<sci:arg name="Cd" type="ColorType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Color to use to draw Cd atoms.</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>#FAD28C</sci:value>
					</sci:arg>
					<sci:arg name="Au" type="ColorType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Color to use to draw Au atoms.</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>#F0C81E</sci:value>
					</sci:arg>
					<sci:arg name="Hg" type="ColorType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Color to use to draw Hg atoms.</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>#AFAFC8</sci:value>
					</sci:arg>
					<sci:arg name="Other" type="ColorType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Color to use to draw all other atoms.</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>Black</sci:value>
					</sci:arg>
					<sci:arg name="Fonts" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Depiction options that control the selection of fonts to draw the structures</sci:help>
						<sci:member>TrueType Font File</sci:member>
						<sci:member>SVG Font</sci:member>
						<sci:member>FixedFontSizeToDrawLabels</sci:member>
						<sci:member>MinimumFontSizeToDrawLabels</sci:member>
						<sci:member>Caption Font Size</sci:member>
						<sci:member>Chemistry Labels Font</sci:member>
						<sci:member>Captions Font</sci:member>
						<sci:member>Stereo Configuration Font</sci:member>
						<sci:member>Sequence Label Font</sci:member>
					</sci:arg>
					<sci:arg name="TrueType Font File" type="URLType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Path of the TrueType font to use to display the labels in the picture. Leave empty to use the default font.</sci:help>
					</sci:arg>
					<sci:arg name="SVG Font" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Font family to use to draw text in SVG images.
&lt;br&gt;
Enter any valid SVG font-family specification.
&lt;br&gt;
Leave empty to use default font (Arial, Helvetica)</sci:help>
					</sci:arg>
					<sci:arg name="FixedFontSizeToDrawLabels" type="DoubleType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Specify a fixed font size to be used to draw the text labels in the molecular image. Text labels include atom labels (atom type, charge, isotope, implicit hydrogens, query features and custom labels and numbers), bond labels (query features, custom labels and numbers), molecule caption, chiral flag and custom labels.
&lt;p&gt;
If a fixed font size is specified, the labels are always drawn with the same size, irrespective of the molecule size.
&lt;p&gt;
Leave blank to scale the font size based on the size of the molecule. </sci:help>
					</sci:arg>
					<sci:arg name="MinimumFontSizeToDrawLabels" type="DoubleType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Specifies the minimum font size required to draw text labels for atoms, bonds and for the entire molecule (caption, chiral flag, etc). The font size used to draw these labels is calculated based on the size of the molecule. If it is smaller than the value of this parameter, labels are not drawn and heteroatoms are represented by circles with the color of the corresponding atom.
&lt;p&gt;
Leave blank to force the drawing of the text labels, even at very small font sizes.</sci:help>
						<sci:enabledscript>parameter(&apos;FixedFontSizeToDrawLabels&apos;) &lt;= 0</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Caption Font Size" type="DoubleType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Font size to use to draw the captions.
&lt;p&gt;
Leave blank to calculate the size automatically based on the image size and the length of the caption</sci:help>
					</sci:arg>
					<sci:arg name="Chemistry Labels Font" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Font to use to draw the structure labels for atoms, bonds, abbreviations and Sgroup data.
&lt;p&gt;
&lt;strong&gt;Note:&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;On Windows systems, text labels are drawn differently for each of the fonts in the dropdown list. On Linux systems, the same font family is used for groups of fonts:
&lt;ul&gt;
&lt;li&gt;Arial&lt;/li&gt;
&lt;li&gt;Bookman Old Style&lt;/li&gt;
&lt;li&gt;Calibri, Cambria, Century Schoolbook, Garamond, Goudy Old Style, Lucida Console, MS Sans Serif, System, Tahoma, Verdana&lt;/li&gt;
&lt;li&gt;Courier New&lt;/li&gt;
&lt;li&gt;Times New Roman&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;</sci:help>
						<sci:legalval selected="true">Arial</sci:legalval>
						<sci:legalval>Bookman Old Style</sci:legalval>
						<sci:legalval>Calibri</sci:legalval>
						<sci:legalval>Cambria</sci:legalval>
						<sci:legalval>Century Schoolbook</sci:legalval>
						<sci:legalval>Courier New</sci:legalval>
						<sci:legalval>Garamond</sci:legalval>
						<sci:legalval>Goudy Old Style</sci:legalval>
						<sci:legalval>Lucida Console</sci:legalval>
						<sci:legalval>MS Sans Serif</sci:legalval>
						<sci:legalval>System</sci:legalval>
						<sci:legalval>Tahoma</sci:legalval>
						<sci:legalval>Times New Roman</sci:legalval>
						<sci:legalval>Verdana</sci:legalval>
					</sci:arg>
					<sci:arg name="Captions Font" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Font to use to draw the caption label
&lt;p&gt;
&lt;strong&gt;Note:&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;On Windows systems, text labels are drawn differently for each of the fonts in the dropdown list. On Linux systems, the same font family is used for groups of fonts:
&lt;ul&gt;
&lt;li&gt;Arial&lt;/li&gt;
&lt;li&gt;Bookman Old Style&lt;/li&gt;
&lt;li&gt;Calibri, Cambria, Century Schoolbook, Garamond, Goudy Old Style, Lucida Console, MS Sans Serif, System, Tahoma, Verdana&lt;/li&gt;
&lt;li&gt;Courier New&lt;/li&gt;
&lt;li&gt;Times New Roman&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;</sci:help>
						<sci:legalval selected="true">Arial</sci:legalval>
						<sci:legalval>Bookman Old Style</sci:legalval>
						<sci:legalval>Calibri</sci:legalval>
						<sci:legalval>Cambria</sci:legalval>
						<sci:legalval>Century Schoolbook</sci:legalval>
						<sci:legalval>Courier New</sci:legalval>
						<sci:legalval>Garamond</sci:legalval>
						<sci:legalval>Goudy Old Style</sci:legalval>
						<sci:legalval>Lucida Console</sci:legalval>
						<sci:legalval>MS Sans Serif</sci:legalval>
						<sci:legalval>System</sci:legalval>
						<sci:legalval>Tahoma</sci:legalval>
						<sci:legalval>Times New Roman</sci:legalval>
						<sci:legalval>Verdana</sci:legalval>
					</sci:arg>
					<sci:arg name="Stereo Configuration Font" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Font to use to draw the stereochemistry labels
&lt;p&gt;
&lt;strong&gt;Note:&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;On Windows systems, text labels are drawn differently for each of the fonts in the dropdown list. On Linux systems, the same font family is used for groups of fonts:
&lt;ul&gt;
&lt;li&gt;Arial&lt;/li&gt;
&lt;li&gt;Bookman Old Style&lt;/li&gt;
&lt;li&gt;Calibri, Cambria, Century Schoolbook, Garamond, Goudy Old Style, Lucida Console, MS Sans Serif, System, Tahoma, Verdana&lt;/li&gt;
&lt;li&gt;Courier New&lt;/li&gt;
&lt;li&gt;Times New Roman&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;</sci:help>
						<sci:legalval selected="true">Arial</sci:legalval>
						<sci:legalval>Bookman Old Style</sci:legalval>
						<sci:legalval>Calibri</sci:legalval>
						<sci:legalval>Cambria</sci:legalval>
						<sci:legalval>Century Schoolbook</sci:legalval>
						<sci:legalval>Courier New</sci:legalval>
						<sci:legalval>Garamond</sci:legalval>
						<sci:legalval>Goudy Old Style</sci:legalval>
						<sci:legalval>Lucida Console</sci:legalval>
						<sci:legalval>MS Sans Serif</sci:legalval>
						<sci:legalval>System</sci:legalval>
						<sci:legalval>Tahoma</sci:legalval>
						<sci:legalval>Times New Roman</sci:legalval>
						<sci:legalval>Verdana</sci:legalval>
					</sci:arg>
					<sci:arg name="Sequence Label Font" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Font to use to draw the sequence labels
&lt;p&gt;
&lt;strong&gt;Note:&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;On Windows systems, text labels are drawn differently for each of the fonts in the dropdown list. On Linux systems, the same font family is used for groups of fonts:
&lt;ul&gt;
&lt;li&gt;Arial&lt;/li&gt;
&lt;li&gt;Bookman Old Style&lt;/li&gt;
&lt;li&gt;Calibri, Cambria, Century Schoolbook, Garamond, Goudy Old Style, Lucida Console, MS Sans Serif, System, Tahoma, Verdana&lt;/li&gt;
&lt;li&gt;Courier New&lt;/li&gt;
&lt;li&gt;Times New Roman&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;</sci:help>
						<sci:legalval>Arial</sci:legalval>
						<sci:legalval>Bookman Old Style</sci:legalval>
						<sci:legalval>Calibri</sci:legalval>
						<sci:legalval>Cambria</sci:legalval>
						<sci:legalval>Century Schoolbook</sci:legalval>
						<sci:legalval selected="true">Courier New</sci:legalval>
						<sci:legalval>Garamond</sci:legalval>
						<sci:legalval>Goudy Old Style</sci:legalval>
						<sci:legalval>Lucida Console</sci:legalval>
						<sci:legalval>MS Sans Serif</sci:legalval>
						<sci:legalval>System</sci:legalval>
						<sci:legalval>Tahoma</sci:legalval>
						<sci:legalval>Times New Roman</sci:legalval>
						<sci:legalval>Verdana</sci:legalval>
					</sci:arg>
					<sci:arg name="General" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Depiction options that control general image settings</sci:help>
						<sci:member>Transparent</sci:member>
						<sci:member>Antialiasing</sci:member>
					</sci:arg>
					<sci:arg name="Transparent" type="BoolType" required="true" visibility="visible" multi="false" uimpl="false">
						<sci:help>If set to true, the image will be transparent. If false, the image will have a white background.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Antialiasing" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Whether or not to use antialiasing when drawing graphic objects in the molecular image</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Haptic/Markush" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Depiction options that control the drawing of Markush bonds and Pi systems</sci:help>
						<sci:member>Haptic Bond Display</sci:member>
						<sci:member>Markush Attachment Point Shape</sci:member>
						<sci:member>Markush Color1</sci:member>
						<sci:member>Markush Color2</sci:member>
						<sci:member>Markush Color3</sci:member>
						<sci:member>Markush Color4</sci:member>
					</sci:arg>
					<sci:arg name="Haptic Bond Display" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Type of line to use to display Pi systems
&lt;ul&gt;
&lt;li&gt;Solid line.&lt;/li&gt;
&lt;li&gt;Dotted line.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:legalval selected="true">Solid Line</sci:legalval>
						<sci:legalval>Dotted Line</sci:legalval>
					</sci:arg>
					<sci:arg name="Markush Attachment Point Shape" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Type of symbol to use to display the atoms representing Markush attachment points
&lt;ul&gt;
&lt;li&gt;Circle&lt;/li&gt;
&lt;li&gt;Square&lt;/li&gt;
&lt;li&gt;Star (*)&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:legalval selected="true">Circle</sci:legalval>
						<sci:legalval>Square</sci:legalval>
						<sci:legalval>Star (*)</sci:legalval>
					</sci:arg>
					<sci:arg name="Markush Color1" type="ColorType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Specifies the color to use for the atoms that would be attached to the first Markush bond (will cycle after the fourth Markush bond)</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>Red</sci:value>
					</sci:arg>
					<sci:arg name="Markush Color2" type="ColorType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Specifies the color to use for the atoms that would be attached to the second Markush bond (will cycle after the fourth Markush bond)</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>Blue</sci:value>
					</sci:arg>
					<sci:arg name="Markush Color3" type="ColorType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Specifies the color to use for the atoms that would be attached to the third Markush bond (will cycle after the fourth Markush bond)</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>Green</sci:value>
					</sci:arg>
					<sci:arg name="Markush Color4" type="ColorType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Specifies the color to use for the atoms that would be attached to the fourth Markush bond (will cycle after the fourth Markush bond)</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>Orange</sci:value>
					</sci:arg>
					<sci:arg name="Reactions" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Depiction options that control the drawing of reactions</sci:help>
						<sci:member>Display Atom-Atom Mapping</sci:member>
						<sci:member>Display Reacting Center Marks</sci:member>
						<sci:member>Display Stereo Markers</sci:member>
					</sci:arg>
					<sci:arg name="Display Atom-Atom Mapping" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Specifies whether or not to display the atom-atom mappings when depicting reactions</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Display Reacting Center Marks" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Specifies how to display the reacting center marks of reactants and products when depicting reactions
&lt;ul&gt;
&lt;li&gt;Hash Marks (For Change)&lt;/li&gt;
&lt;li&gt;Color (For Change)&lt;/li&gt;
&lt;li&gt;Thicker (For Change)&lt;/li&gt;
&lt;li&gt;All Marks&lt;/li&gt;
&lt;li&gt;Off&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:legalval selected="true">Hash Marks (For Change)</sci:legalval>
						<sci:legalval>Color (For Change)</sci:legalval>
						<sci:legalval>Thicker (For Change)</sci:legalval>
						<sci:legalval>All Marks</sci:legalval>
						<sci:legalval>Off</sci:legalval>
					</sci:arg>
					<sci:arg name="Display Stereo Markers" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Specifies whether or not to display the stereo inversion and/or retention marks when depicting reactions</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Rgroups" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Depiction options that control the drawing of Rgroups</sci:help>
						<sci:member>Display Attachment Points As</sci:member>
						<sci:member>Maximum Number of Members to Display</sci:member>
					</sci:arg>
					<sci:arg name="Display Attachment Points As" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Specifies how to display the attachment points in Rgroup fragments
&lt;ul&gt;
&lt;li&gt;Template (Z) Atoms&lt;/li&gt;
&lt;li&gt;Arrow and Star (*)&lt;/li&gt;
&lt;li&gt;Line and Zigzag line&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:legalval selected="true">Template (Z) Atoms</sci:legalval>
						<sci:legalval>Arrow and Star (*)</sci:legalval>
						<sci:legalval>Line and Zigzag Line</sci:legalval>
					</sci:arg>
					<sci:arg name="Maximum Number of Members to Display" type="LongType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Specifies maximum number of Rgroup members to be defined. If the RG structure includes more members, it will simply display numbers of members.</sci:help>
						<sci:value>20</sci:value>
					</sci:arg>
					<sci:arg name="Sequences" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Depiction options that control the drawing of biological sequences</sci:help>
						<sci:member>Show Sequence View</sci:member>
						<sci:member>Show Expanded Sequence Structure</sci:member>
						<sci:member>Chain Color - First</sci:member>
						<sci:member>Chain Color - Second</sci:member>
						<sci:member>Chain Color - Other</sci:member>
						<sci:member>Mutations Color</sci:member>
						<sci:member>Modifications Color</sci:member>
						<sci:member>Crosslinks Color - Default</sci:member>
						<sci:member>Crosslinks Color - Disulfide</sci:member>
						<sci:member>Crosslinks Color - Lactam</sci:member>
						<sci:member>Crosslinks Color - Lactone</sci:member>
						<sci:member>Sequence Block Size</sci:member>
						<sci:member>Sequence Wrap Length</sci:member>
						<sci:member>Spacing between Sequence Labels</sci:member>
						<sci:member>Spacing between Sequence Blocks</sci:member>
						<sci:member>Spacing between Sequence Lines</sci:member>
						<sci:member>Display Sequence Block Numbers</sci:member>
						<sci:member>Display Sequence Line Numbers</sci:member>
					</sci:arg>
					<sci:arg name="Show Sequence View" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Shows sequence structure in the sequence view</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Show Expanded Sequence Structure" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>If this setting is true, expanded sequence residue shows its explicit structure instead of label.</sci:help>
						<sci:enabledscript>parameter(&quot;Show Sequence View&quot;) eq true</sci:enabledscript>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Chain Color - First" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Color of the chain in Sequence</sci:help>
						<sci:enabledscript>parameter(&quot;Show Sequence View&quot;) eq true</sci:enabledscript>
						<sci:value>144,238,144</sci:value>
					</sci:arg>
					<sci:arg name="Chain Color - Second" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Alternate color of the chain in Sequence</sci:help>
						<sci:enabledscript>parameter(&quot;Show Sequence View&quot;) eq true</sci:enabledscript>
						<sci:value>173,216,230</sci:value>
					</sci:arg>
					<sci:arg name="Chain Color - Other" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Color of other chain types like Signal Peptides in Sequence</sci:help>
						<sci:enabledscript>parameter(&quot;Show Sequence View&quot;) eq true</sci:enabledscript>
						<sci:value>245,222,179</sci:value>
					</sci:arg>
					<sci:arg name="Mutations Color" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Color to use to draw mutated residues in the biopolymer sequence.
&lt;br&gt;
The color can be defined as a string with three comma-separated integers between 0 and 255 representing the RGB numbers (example: 200,0,0) or as one of the predefined color names (Red, Green, Blue, Yellow, Cyan, Magenta, Black).</sci:help>
						<sci:enabledscript>parameter(&quot;Show Sequence View&quot;) eq true</sci:enabledscript>
						<sci:value>0,0,255</sci:value>
					</sci:arg>
					<sci:arg name="Modifications Color" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Color to use to draw modified residues in the biopolymer sequence.
&lt;br&gt;
The color can be defined as a string with three comma-separated integers between 0 and 255 representing the RGB numbers (example: 200,0,0) or as one of the predefined color names (Red, Green, Blue, Yellow, Cyan, Magenta, Black).</sci:help>
						<sci:enabledscript>parameter(&quot;Show Sequence View&quot;) eq true</sci:enabledscript>
						<sci:value>255,0,0</sci:value>
					</sci:arg>
					<sci:arg name="Crosslinks Color - Default" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Color of the crosslink in sequence</sci:help>
						<sci:enabledscript>parameter(&quot;Show Sequence View&quot;) eq true</sci:enabledscript>
						<sci:value>0,0,0</sci:value>
					</sci:arg>
					<sci:arg name="Crosslinks Color - Disulfide" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Color of the disulfide bridges in the sequence
&lt;br&gt;
The color can be defined as a string with three comma-separated integers between 0 and 255 representing the RGB numbers (example: 200,0,0) or as one of the predefined color names (Red, Green, Blue, Yellow, Cyan, Magenta, Black).</sci:help>
						<sci:enabledscript>parameter(&quot;Show Sequence View&quot;) eq true</sci:enabledscript>
						<sci:value>255,0,0</sci:value>
					</sci:arg>
					<sci:arg name="Crosslinks Color - Lactam" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Color of the crosslink that forms lactam bridge in sequence</sci:help>
						<sci:enabledscript>parameter(&quot;Show Sequence View&quot;) eq true</sci:enabledscript>
						<sci:value>0,0,255</sci:value>
					</sci:arg>
					<sci:arg name="Crosslinks Color - Lactone" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Color of the crosslink that forms lactone bridge in sequence</sci:help>
						<sci:enabledscript>parameter(&quot;Show Sequence View&quot;) eq true</sci:enabledscript>
						<sci:value>0,255,0</sci:value>
					</sci:arg>
					<sci:arg name="Sequence Block Size" type="LongType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>If this value is greater than 0, sequence structure will be displayed as the sequence labels blocked in this size. &apos;0&apos; means no blocking.</sci:help>
						<sci:enabledscript>parameter(&quot;Show Sequence View&quot;) eq true</sci:enabledscript>
						<sci:value>10</sci:value>
					</sci:arg>
					<sci:arg name="Sequence Wrap Length" type="LongType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>If this value is greater than 0, the sequence wraps to the next line after this number of sequence labels. &apos;0&apos; means no wrapping. </sci:help>
						<sci:enabledscript>parameter(&quot;Show Sequence View&quot;) eq true</sci:enabledscript>
						<sci:value>40</sci:value>
					</sci:arg>
					<sci:arg name="Spacing between Sequence Labels" type="DoubleType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>Specifies spacing between sequence labels.</sci:help>
						<sci:enabledscript>parameter(&quot;Show Sequence View&quot;) eq true</sci:enabledscript>
						<sci:value>12.0</sci:value>
					</sci:arg>
					<sci:arg name="Spacing between Sequence Blocks" type="DoubleType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Specifies spacing between sequence blocks.</sci:help>
						<sci:enabledscript>parameter(&quot;Show Sequence View&quot;) eq true</sci:enabledscript>
						<sci:value>20.0</sci:value>
					</sci:arg>
					<sci:arg name="Spacing between Sequence Lines" type="DoubleType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Specifies spacing between sequence lines.</sci:help>
						<sci:enabledscript>parameter(&quot;Show Sequence View&quot;) eq true</sci:enabledscript>
						<sci:value>24.0</sci:value>
					</sci:arg>
					<sci:arg name="Display Sequence Block Numbers" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>If this setting is true and there is sequence block size set, colume number at the end of each block is displayed at the top of the sequence.</sci:help>
						<sci:enabledscript>parameter(&quot;Show Sequence View&quot;) eq true</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Display Sequence Line Numbers" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>If this setting is true, multiple line Sequence is displayed with starting number at the beginning of each row of sequences. </sci:help>
						<sci:enabledscript>parameter(&quot;Show Sequence View&quot;) eq true</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Sgroups" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Depiction options that control the drawing of Sgroups</sci:help>
						<sci:member>DrawFunctionalGroups</sci:member>
						<sci:member>FunctionalGroupsQueries</sci:member>
					</sci:arg>
					<sci:arg name="DrawFunctionalGroups" type="BoolType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>&lt;p&gt;Draw specific functional groups as text instead of the actual atoms and bonds.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The functional groups to draw are defined using substructure searching with queries contained in the directory specified by &lt;i&gt;FunctionalGroupsQueries&lt;/i&gt;. The default location of the functional group queries is /data/Queries/FunctionalGroups.&lt;/li&gt;
&lt;li&gt;Each functional group query mol file must define the text to be drawn, the text color, and the core atom that connects the functional group to the rest of the molecule. Only functional groups with a single core atom are allowed.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="FunctionalGroupsQueries" type="URLType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Location of the functional group queries. </sci:help>
						<sci:value>data\Queries\FunctionalGroups\*.mol</sci:value>
					</sci:arg>
					<sci:arg name="Stereochemistry" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Depiction options that control the drawing of stereochemistry labels</sci:help>
						<sci:member>Chirality Label Options</sci:member>
						<sci:member>Chirality Labels</sci:member>
						<sci:member>Color of Absolute Centers</sci:member>
						<sci:member>Color of AND Centers</sci:member>
						<sci:member>Color of OR Centers</sci:member>
						<sci:member>Display Labels for Stereogenic Centers</sci:member>
						<sci:member>Display Labels for Absolute Centers</sci:member>
						<sci:member>Color Stereogenic Centers</sci:member>
						<sci:member>Stereo Label for R at Absolute Centers</sci:member>
						<sci:member>Stereo Label for R at AND Centers</sci:member>
						<sci:member>Stereo Label for R at OR Centers</sci:member>
						<sci:member>Stereo Label for S at Absolute Centers</sci:member>
						<sci:member>Stereo Label for S at AND Centers</sci:member>
						<sci:member>Stereo Label for S at OR Centers</sci:member>
					</sci:arg>
					<sci:arg name="Chirality Label Options" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>
        Specify the labels to use to identify the stereo configuration of the molecule. The chirality label is drawn at the top of the molecular image.
        &lt;ul&gt;
        &lt;li&gt;&lt;b&gt;Pipeline Pilot Defaults&lt;/b&gt;
        &lt;ul&gt;
        &lt;li&gt;All marked centers in one AND Enantiomer group: &apos;&apos; (no label).&lt;/li&gt;
        &lt;li&gt;All marked centers in one absolute group: &apos;Chiral&apos;.&lt;/li&gt;
        &lt;li&gt;All marked centers in one OR Enantiomer group: &apos;Chiral Unknown&apos;.&lt;/li&gt;
        &lt;li&gt;Marked centers in more than one stereogroup type: &apos;Relative&apos;.&lt;/li&gt;
        &lt;/ul&gt;
        &lt;/li&gt;
        &lt;li&gt;&lt;b&gt;BIOVIA Draw Defaults&lt;/b&gt;
        &lt;ul&gt;
        &lt;li&gt;All marked centers in one AND Enantiomer group: &apos;AND Enantiomer&apos;.&lt;/li&gt;
        &lt;li&gt;All marked centers in one absolute group: &apos;&apos; (no label).&lt;/li&gt;
        &lt;li&gt;All marked centers in one OR Enantiomer group: &apos;OR Enantiomer&apos;.&lt;/li&gt;
        &lt;li&gt;Marked centers in more than one stereogroup type: &apos;Mixed&apos;.&lt;/li&gt;
        &lt;/ul&gt;
        &lt;/li&gt;
        &lt;li&gt;&lt;b&gt;Custom Labels&lt;/b&gt;
        &lt;br&gt;
        Comma-separated strings with the labels to use to identify the chiral state of molecule. Four strings should be defined, with labels corresponding to the chiral states described above for the Pipeline Pilot and BIOVIA Draw defaults.
        &lt;ul&gt;
      </sci:help>
						<sci:legalval>Pipeline Pilot Defaults</sci:legalval>
						<sci:legalval selected="true">BIOVIA Draw Defaults</sci:legalval>
						<sci:legalval>Custom Labels</sci:legalval>
					</sci:arg>
					<sci:arg name="Chirality Labels" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>
        Comma-separated strings with the labels to use to identify the chiral state of molecule. Four strings should be defined, with labels corresponding to the following chiral states:
        &lt;ul&gt;
        &lt;li&gt;All marked centers in one AND Enantiomer group.&lt;/li&gt;
        &lt;li&gt;All marked centers in one absolute group.&lt;/li&gt;
        &lt;li&gt;All marked centers in one OR Enantiomer group.&lt;/li&gt;
        &lt;li&gt;Marked centers in more than one stereogroup type.&lt;/li&gt;
        &lt;/ul&gt;

      </sci:help>
						<sci:validscript>#n := 0;
        #s := parameter();
        #len := stringlen(#s);
        for #i in 1 .. #len loop
        if substring(#s, #i, 1) eq &apos;,&apos; then
        #n++;
        end if;
        end loop;

        SetInvalidDetails(&apos;Must define four labels separated by commas&apos;);

        parameter(&apos;Chirality Label Options&apos;) eq &apos;Custom Labels&apos; and (#n eq 3)</sci:validscript>
						<sci:enabledscript>parameter(&apos;Chirality Label Options&apos;) eq &apos;Custom Labels&apos;</sci:enabledscript>
						<sci:value>AND Enantiomer,,OR Enantiomer, Mixed</sci:value>
					</sci:arg>
					<sci:arg name="Color of Absolute Centers" type="ColorType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false" uimpl="false">
						<sci:help>Specifies the color in which the stereo bonds, the stereo group labels or both are displayed at absolute stereogenic centers</sci:help>
						<sci:value>Red</sci:value>
					</sci:arg>
					<sci:arg name="Color of AND Centers" type="ColorType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Specifies the color in which the stereo bonds, the stereo group labels or both are displayed at AND stereogenic centers</sci:help>
						<sci:value>MediumBlue</sci:value>
					</sci:arg>
					<sci:arg name="Color of OR Centers" type="ColorType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Specifies the color in which the stereo bonds, the stereo group labels or both are displayed at OR stereogenic centers</sci:help>
						<sci:value>ForestGreen</sci:value>
					</sci:arg>
					<sci:arg name="Display Labels for Stereogenic Centers" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Specify whether or not to display labels for the stereogenic centers (Abs, AND, OR)</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Display Labels for Absolute Centers" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Specify whether or not to display labels for the absolute stereogenic centers (Abs).
&lt;p&gt;
This parameter controls the display of Abs labels only. Use &lt;i&gt;Display Labels for Stereogenic Centers&lt;/&gt; to control the display of all labels (Abs, AND, OR)</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Color Stereogenic Centers" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Specify how to color the stereogenic centers with the colors specified by &lt;i&gt;Color of Absolute Centers&lt;/i&gt;, &lt;i&gt;Color of AND Centers&lt;/i&gt;, &lt;i&gt;Color of OR Centers&lt;/i&gt;
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Labels Only:&lt;/b&gt; color only the atom labels (Abs, AND, OR)&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Bonds Only:&lt;/b&gt; color only the stereo bonds&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Labels and Bonds:&lt;/b&gt; color both atom labels and stereo bonds&lt;/li&gt;
&lt;li&gt;&lt;b&gt;No Color:&lt;/b&gt; don&apos;t color the stereogenic centers&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:legalval selected="true">Labels Only</sci:legalval>
						<sci:legalval>Bonds Only</sci:legalval>
						<sci:legalval>Labels and Bonds</sci:legalval>
						<sci:legalval>No Color</sci:legalval>
					</sci:arg>
					<sci:arg name="Stereo Label for R at Absolute Centers" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Label to use for R Chirality at absolute stereogenic centers</sci:help>
						<sci:value>R</sci:value>
					</sci:arg>
					<sci:arg name="Stereo Label for R at AND Centers" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Label to use for R Chirality at AND stereogenic centers</sci:help>
						<sci:value>R*</sci:value>
					</sci:arg>
					<sci:arg name="Stereo Label for R at OR Centers" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Label to use for R Chirality at OR stereogenic centers</sci:help>
						<sci:value>(R)</sci:value>
					</sci:arg>
					<sci:arg name="Stereo Label for S at Absolute Centers" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Label to use for S Chirality at absolute stereogenic centers</sci:help>
						<sci:value>S</sci:value>
					</sci:arg>
					<sci:arg name="Stereo Label for S at AND Centers" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Label to use for S Chirality at AND stereogenic centers</sci:help>
						<sci:value>S*</sci:value>
					</sci:arg>
					<sci:arg name="Stereo Label for S at OR Centers" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Label to use for S Chirality at OR stereogenic centers</sci:help>
						<sci:value>(S)</sci:value>
					</sci:arg>
					<sci:arg name="Zero Order Bonds" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Depiction options that control the drawing of zero-order bonds (hydrogen and dative bonds)</sci:help>
						<sci:member>Hydrogen Bonds Color</sci:member>
						<sci:member>Dative Bonds Color</sci:member>
					</sci:arg>
					<sci:arg name="Hydrogen Bonds Color" type="ColorType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Specifies the color to use to draw the lines that represent Hydrogen bonds</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) eq true</sci:enabledscript>
						<sci:value>Black</sci:value>
					</sci:arg>
					<sci:arg name="Dative Bonds Color" type="ColorType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Specifies the color to use to draw the lines that represent Dative bonds</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) eq true</sci:enabledscript>
						<sci:value>Black</sci:value>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:value>ComponentReturnsPass</sci:value>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval>ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Alternate Sketch Converter URL" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>&lt;p&gt;The chemistry sketcher runs a Pipeline Pilot protocol to convert the chemistry data provided by the sketch tool into an image and other data formats (such as SMILES and CTAB). Use this parameter to replace the conversion protocol with another service.&lt;p&gt;

&lt;p&gt;The service will receive a form-URL-encoded POST request with the following parameters:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;b&gt;SessionID:&lt;/b&gt; The Pipeline Pilot session ID.&lt;/li&gt;
  &lt;li&gt;&lt;b&gt;MolFormat:&lt;/b&gt; The format of the incoming data, which will be one of &quot;ISIS/Draw&quot;, &quot;ChemDraw&quot;, or &quot;SMILES&quot;.&lt;/li&gt;
  &lt;li&gt;&lt;b&gt;SketchData:&lt;/b&gt; The molecule data to convert. For BIOVIA Draw and ChemDraw data, this will be base-64 encoded binary. SMILES will be sent as text.&lt;/li&gt;
  &lt;li&gt;&lt;b&gt;Width:&lt;/b&gt; The width of the image to generate.&lt;/li&gt;
  &lt;li&gt;&lt;b&gt;Height:&lt;/b&gt; The height of the image to generate.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The service should return a single string with five parts, each base-64 encoded, separated by asterisks (*). The parts are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The image.&lt;/li&gt;
  &lt;li&gt;The molecule data in CTAB format.&lt;/li&gt;
  &lt;li&gt;The molecule in SMILES format (may be the input data).&lt;/li&gt;
  &lt;li&gt;The molecule in ISIS/Draw format (may be the input data).&lt;/li&gt;
  &lt;li&gt;The molecule in ChemDraw format (may be the input data).&lt;/li&gt;
&lt;/ul&gt;</sci:help>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Fri Nov 20 09:29:32 2015</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{7415B28B-1606-4F6A-88B4-4BD4F5B1E1AD}</sci:value>
					</sci:arg>
					<sci:arg name="JavaClass" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>com.scitegic.report.component.ChemistrySketcherComponent</sci:value>
					</sci:arg>
					<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>DrainTopDown</sci:value>
					</sci:arg>
					<sci:arg name="CaptureStdoutStderr" type="BoolType" required="true" visibility="nevershow" multi="false">
						<sci:help>CaptureStdoutStderr</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Chemistry Sketcher</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>378 -395</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>REPORTNODE</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Plug In</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Creates and shows an editable molecule in a report or input form, using BIOVIA Draw or ChemDraw format</sci:value>
						<sci:value>&lt;p&gt;Adds an editable molecule object to a report (which could be an input form) using javascript.  By default, no molecule is shown when the report is created.  To create a molecule, double-click the sketcher instance in the browser to launch either BIOVIA Draw or ChemDraw&amp;#8212;depending on which sketcher is selected in &lt;i&gt;Sketch Tool&lt;/i&gt;&amp;#8212;and create a molecule.&lt;/p&gt;

&lt;p&gt;To have a molecule already present in the report when it is created, add an input port on the component and pass in a molecular data record.  You can double-click the window to edit the molecule.&lt;/p&gt;

&lt;p&gt;When you are done editing, click on the icon on the upper left of the sketcher, or close the sketcher.  You will be prompted to update the content of the sketcher instance in the report.&lt;/p&gt;

&lt;p&gt;You can right-click on the sketcher window to display a menu with options to copy the current molecule to the clipboard, or to paste molecules from the clipboard. Pasting SMILES strings is supported. You can also change the sketcher that will be launched when you double-click.&lt;/p&gt;

&lt;p&gt;The sketcher instance can be embedded in an HTML report (PDF reports are not supported).  Whichever chemistry sketcher you are using (BIOVIA Draw or ChemDraw) must be installed on the client machine in order to edit the molecule.&lt;/p&gt;

&lt;p&gt;When used in a form, the control will submit two values: the current molecule represented as both CTAB and the native format for the selected sketch tool. See the help for the &lt;i&gt;Parameter To Map&lt;/i&gt; parameter for more information.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;This component requires the Chemistry Collection to be installed.&lt;/li&gt;
	&lt;li&gt;Users with the BIOVIA Draw sketcher installed should run it from the desktop at least once before the plugin can properly launch it to display a molecule.&lt;/li&gt;
	&lt;li&gt;To create live, embedded chemistry in Office documents, use &lt;a href=&quot;javascript:DoLink(&apos;{DAA51EC2-CF25-48EA-A905-4004BE152BA1}&apos;)&quot;&gt;Office Chemistry Sketcher&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/docs/web/docs/user/intro/using_sketcher.htm&apos;)&quot;&gt;Chemistry Sketcher and the BIOVIA Plugin&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/reportadv/docs/chem_sketcher/index.html&apos;)&quot;&gt;Chemistry Sketcher Scripting&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/report/docs/reporting_basic.pdf&apos;)&quot;&gt;Report Design Essentials&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/reportadv/docs/reportadv_interactive.pdf&apos;)&quot;&gt;Interactive Reporting and Form Design&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
						<sci:value>None</sci:value>
						<sci:value>If molecule data is present, it will be used as the initial data in the chemistry sketcher.</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>A reporting object representing the chemistry sketcher will be added to the data record.</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>%VERSION 3%</sci:value>
						<sci:value>242 -220 355 134</sci:value>
						<sci:value>255 255 0</sci:value>
						<sci:value>size works</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>16.1.0.1122</sci:value>
					</sci:arg>
					<sci:arg name="Link Options Mapping" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Mapping of the Format parameter name to the Link Options parameter name.</sci:help>
					</sci:arg>
					<sci:arg name="Use Package" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>scitegic/report</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Office Output" type="BoolType" required="true" visibility="nevershow" multi="false">
						<sci:help>Differentiates &quot;Chemistry Sketcher&quot; from &quot;Embedded Chemistry Sketcher&quot; -- the component generates different properties depending on whether we&apos;ll be outputting office or html output.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="IsMolecule" type="ExpressionType" required="false" visibility="nevershow" multi="false">
						<sci:value>isupports(&apos;IMolecule&apos;);</sci:value>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/chemistry</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Chemistry\Data Access and Manipulation\Viewers\Reporting Tools\Chemistry Sketcher</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="Input Form (Semantic UI)" version="2">
					<sci:arg name="Work Protocol" type="WorkProtocolType" required="true" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;Path to the work protocol that should be executed when you click the submit button.  However, if the submit button itself specifies a different work protocol, that protocol will be executed instead.&lt;/p&gt;
			
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;&lt;li&gt;If the form is submitted using the keyboard (e.g., you hit Enter in a textbox), then this protocol will be run, but without the additional parameters from any of the submit buttons.&lt;/li&gt;
&lt;li&gt;Parameter validation can be implemented by calling a JavaScript function from an onsubmit attribute.&lt;/li&gt;&lt;/ul&gt;</sci:help>
						<sci:member>Display Results As</sci:member>
						<sci:value>500</sci:value>
						<sci:value>aaaaaaa</sci:value>
						<sci:value>False</sci:value>
						<sci:value>UGxlYXNlIHdhaXQgd2hpbGUgdGhlIGRvY3VtZW50IGxvYWRz</sci:value>
						<sci:value>Current</sci:value>
					</sci:arg>
					<sci:arg name="Display Results As" type="LinkOptionsType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;Describes where to display the result of the work protocol. Options such as &quot;New Web Port tab&quot; and &quot;Left Web Port pane&quot; are only applicable if the protocol is run through Web Port.  If the protocol is run outside of Web Port, such options are ignored (default to &quot;Same Window&quot;).&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Name" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;The optional name of a form.  If you have a submit button that exists outside of the form, it can refer to this form by the name supplied in this parameter.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Additional Data to Pass" type="GroupType" required="false" visibility="visible" multi="false">
						<sci:help>Any additional name/value pairs that should be sent to the work protocol but which should have no visual representation in this report.  Typically these are global variables that are needed in the work protocol.

Any number of additional name/value pairs can be supplied.  To create new entries, you may add new parameters with the names &quot;Additional Parameter X&quot; and &quot;Additional Value X&quot; where X is the next integer in the series.</sci:help>
						<sci:member>Additional Parameter 1</sci:member>
						<sci:member>Additional Value 1</sci:member>
						<sci:member>Additional Parameter 2</sci:member>
						<sci:member>Additional Value 2</sci:member>
						<sci:member>Additional Parameter 3</sci:member>
						<sci:member>Additional Value 3</sci:member>
						<sci:member>Additional Parameter 4</sci:member>
						<sci:member>Additional Value 4</sci:member>
					</sci:arg>
					<sci:arg name="Additional Parameter 1" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;The name of a parameter to be passed to the work protocol.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Additional Value 1" type="ExpressionType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;The value of a parameter to be passed to the work protocol.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Additional Parameter 2" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;The name of a parameter to be passed to the work protocol.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Additional Value 2" type="ExpressionType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;The value of a parameter to be passed to the work protocol.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Additional Parameter 3" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;The name of a parameter to be passed to the work protocol.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Additional Value 3" type="ExpressionType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;The value of a parameter to be passed to the work protocol.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Additional Parameter 4" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;The name of a parameter to be passed to the work protocol.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Additional Value 4" type="ExpressionType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;The value of a parameter to be passed to the work protocol.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Custom Form Classes" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>Additional (if any) CSS classes to be added to the form element in HTML.</sci:help>
					</sci:arg>
					<sci:arg name="Advanced Validation" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>&lt;p&gt;These parameters define group validations.&lt;/p&gt; &lt;p&gt;For example, only one of the two listboxes must be non-empty but not both. Or all textboxes in a group must have non-empty values.&lt;/p&gt;</sci:help>
						<sci:member>ALL (Group 4)</sci:member>
						<sci:member>ANY (Group 1)</sci:member>
						<sci:member>ANY (Group 2)</sci:member>
						<sci:member>ALL (Group 3)</sci:member>
						<sci:member>ONE (Group 5)</sci:member>
						<sci:member>ONE (Group 6)</sci:member>
					</sci:arg>
					<sci:arg name="ANY (Group 1)" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;Provide a comma-separated list of names. The input form will not allow users to submit until at least one of the elements in this group has a non-empty value.&lt;/p&gt;
&lt;p&gt;Each name must be the value of the &lt;strong&gt;Parameter to Map&lt;/strong&gt; on a Text Box, List Box, Date Box, File Chooser, or Checkbox.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="ANY (Group 2)" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>&lt;p&gt;Provide a comma-separated list of names. The input form will not allow users to submit until at least one of the elements in this group has a non-empty value.&lt;/p&gt;
&lt;p&gt;Each name must be the value of the &lt;strong&gt;Parameter to Map&lt;/strong&gt; on a Text Box, List Box, Date Box, File Chooser, or Checkbox.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="ALL (Group 3)" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;Provide a comma-separated list of names. The input form will not allow users to submit until all elements in this group have a non-empty value.&lt;/p&gt;
&lt;p&gt;Each name must be the value of the &lt;strong&gt;Parameter to Map&lt;/strong&gt; on a Text Box, List Box, Date Box, File Chooser, or Checkbox.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="ALL (Group 4)" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;Provide a comma-separated list of names. The input form will not allow users to submit until all elements in this group have a non-empty value.&lt;/p&gt;
&lt;p&gt;Each name must be the value of the &lt;strong&gt;Parameter to Map&lt;/strong&gt; on a Text Box, List Box, Date Box, File Chooser, or Checkbox.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="ONE (Group 5)" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;Provide a comma-separated list of names. The input form will not allow users to submit unless exactly one element in this group has a non-empty value.&lt;/p&gt;
&lt;p&gt;Each name must be the value of the &lt;strong&gt;Parameter to Map&lt;/strong&gt; on a Text Box, List Box, Date Box, File Chooser, or Checkbox.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="ONE (Group 6)" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;Provide a comma-separated list of names. The input form will not allow users to submit unless exactly one element in this group has a non-empty value.&lt;/p&gt;
&lt;p&gt;Each name must be the value of the &lt;strong&gt;Parameter to Map&lt;/strong&gt; on a Text Box, List Box, Date Box, File Chooser, or Checkbox.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
						<sci:value>guid</sci:value>
					</sci:arg>
					<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
						<sci:member>RunToCompletion Categorize Using</sci:member>
						<sci:legalval selected="true">False</sci:legalval>
						<sci:legalval>True - For Each Data Record</sci:legalval>
						<sci:legalval>True - For Each Category</sci:legalval>
					</sci:arg>
					<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
						<sci:member>Parallel Processing Options Batch Size</sci:member>
						<sci:member>Parallel Processing Options Server</sci:member>
						<sci:member>Parallel Processing Options Preserve Order</sci:member>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
						<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
#rtcForEachCategory := (Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
elsif (#rtcForEachCategory) then
	SetDisabledDetails(&quot;This parameter is not applicable when &apos;RunToCompletion&apos; is set to &apos;True - For Each Category&apos;&quot;);
end if;
#parallel and not #rtcForEachCategory;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
						<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
						<sci:member>Parallel Processing Options Server Processes</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
						<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Run subprotocol on grid engine if available.</sci:help>
						<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
						<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Validation Pause ms" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
						<sci:help>When remote validation of textboxes is enabled, how many milliseconds to wait after the user finished typing in the box, before validating their input?

This helps fast typers who would be annoyed by intrusive validation.</sci:help>
						<sci:legalval selected="true">300</sci:legalval>
						<sci:legalval>500</sci:legalval>
						<sci:legalval>700</sci:legalval>
						<sci:legalval>1000</sci:legalval>
						<sci:legalval>1500</sci:legalval>
						<sci:legalval>2000</sci:legalval>
					</sci:arg>
					<sci:arg name="Constant GUID" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Override an automatically set GUID inside the component with this value.&lt;/p&gt; &lt;p&gt;If set, HTML element(s) will have their IDs set using this value instead of a randomly generated one.&lt;/p&gt;&lt;p&gt;Spaces or special characters are not allowed, only alphanumeric. The ID is case-sensitive.&lt;/p&gt;
</sci:help>
						<sci:validscript>SetInvalidDetails(ParameterName() . &apos; must be alphanumeric. Spaces or special characters are not allowed.&apos;);
numValues(rMatch(Parameter(), &apos;[^a-zA-Z0-9]+&apos;, &apos;ig&apos;)) == 0;</sci:validscript>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Input Form (Semantic UI)</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>ReportSubProtocolNode</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>790</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{5C3525D9-B2E9-49AB-BD21-08E1C2A65AB3}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>666 -395</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Input Form (Semantic UI) with validation capabilities.</sci:value>
						<sci:value>&lt;p&gt;An input form with added capabilities such as validation, form layout, and optional custom CSS classes.&lt;/p&gt;</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
						<sci:value>None</sci:value>
						<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>16.1.0.1140</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval>Owner Access Only</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>bondadx2</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Tue Jun 28 10:59:03 2016</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>5</sci:value>
					</sci:arg>
					<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Processing Order</sci:help>
						<sci:value>DrainTopDown</sci:value>
					</sci:arg>
					<sci:arg name="OriginalPackage" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>OriginalPackage</sci:help>
						<sci:value>scitegic/coreutils</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Semantic UI\Forms\Input Form (Semantic UI)</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol/>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="HTML Report Viewer (Semantic UI)" version="2">
					<sci:arg name="Title" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;The optional title of the HTML document. The title is also used as part of the report&apos;s file name.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Permanent URL" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>Display this protocol&apos;s starter URL in the browser address bar. Users will be able to bookmark the start protocol page that way. &lt;p&gt;&lt;strong&gt;Note: the protocol must be saved in Pipeline Pilot for this to work.&lt;/strong&gt;&lt;/p&gt;</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Advanced Options" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>Advanced Options</sci:help>
						<sci:member>Include Format and Position CSS</sci:member>
						<sci:member>Animate Link Underlines</sci:member>
						<sci:member>Theme</sci:member>
						<sci:member>Web Browser</sci:member>
					</sci:arg>
					<sci:arg name="Theme" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;Choose a visual theme for the content.&lt;/p&gt;
&lt;p&gt;&lt;ul&gt;
&lt;li&gt;2.2.1: released 06/2016&lt;/li&gt;
&lt;li&gt;Default (v 2.1.8): released 02/2016&lt;/li&gt;
&lt;/ul&gt;
Semantic UI release history with detailed notes:
&lt;a href=&quot;https://github.com/Semantic-Org/Semantic-UI/releases&quot;&gt;https://github.com/Semantic-Org/Semantic-UI/releases&lt;a&gt;
&lt;/p&gt;
&lt;p&gt;When the component collection is updated with a new Semantic UI release, the components in unmodified existing protocols will continue to point to a set release version. You can also point this parameter to a newer release if you wish by right-clicking the component and Replace with Latest Version then selecting a newer semantic theme release.&lt;/p&gt;
To add a new custom theme (e.g. developed in-house): do not change this component. Just add a new subfolder to the &lt;code&gt;ScitegicRoot\apps\saber\semantic\dataroot\data\assets\semantic\&lt;/code&gt; file folder. The subfolder should contain a compiled customized copy of the Semantic UI distribution. &lt;strong&gt;The name of the subfolder should be alphanumeric and it cannot contain spaces or special characters.&lt;/strong&gt;</sci:help>
						<sci:legalvalscript>//SetLegalValues(&apos;Default&apos;);
SetLegalValues(RunProtocol(&apos;{4460A9EB-E8FA-42F0-A0ED-D35964047B39}&apos;));</sci:legalvalscript>
						<sci:value>2.3.1</sci:value>
					</sci:arg>
					<sci:arg name="Include Format and Position CSS" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>If set to &lt;strong&gt;True&lt;/strong&gt;, all native Pipeline Pilot format and position settings will be included in the output document. Otherwise all native Pipeline Pilot formatting will be ignored.</sci:help>
						<sci:member>Add Page Margins</sci:member>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Add Page Margins" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>When not using native Scitegic CSS, add page margins. This will add small margins on each side of the page. Scitegic styles already include this.</sci:help>
						<sci:enabledscript>not Parameter(&apos;Include Format and Position CSS&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Animate Link Underlines" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>When hovering over a link, the link&apos;s underline is revealed by animating it out from the center.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Web Browser" type="StringType" required="true" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Web Browser</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>&lt;p&gt;
This parameter is only relevant when running the protocol in the Pipeline Pilot Professional Client. When running the protocol from a web hyperlink or a URL the value of this parameter is ignored.
&lt;/p&gt;
&lt;p&gt;
The value specifies which web browser to open on your desktop to view the report.
&lt;/p&gt;</sci:help>
						<sci:legalval selected="true">Default</sci:legalval>
						<sci:legalval>Internet Explorer</sci:legalval>
						<sci:legalval>Chrome</sci:legalval>
						<sci:legalval>Firefox</sci:legalval>
					</sci:arg>
					<sci:arg name="Output Mode" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Allows some alternative formatting and position settings to be used that may cause the HTML report output to behave and look more like the HTML generated with previous versions of Pipeline Pilot. This parameter is intended to be set on writers in protocols developed with previous versions of Pipeline Pilot where the output looks or behaves differently when run with the current version.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Always use the value of &quot;Default&quot; for new protocols or protocols under active development. The latest Reporting components may not behave correctly in HTML reports written with a non-default mode.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When set to &quot;Pipeline Pilot 7.5&quot;, this parameter rolls back some of the improvements made in the name of standards compliance and formatting consistency, including:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;The report will not include the HTML 4.01 Doctype declaration, which will cause Internet Explorer to render the report using quirks mode.&lt;/li&gt;
	&lt;li&gt;Position rules will not be strictly enforced, so Internet Explorer 6 will render borders and padding outside the specified width.&lt;/li&gt;
	&lt;li&gt;Horizontal alignment of block objects will not be supported, so you will not be able to, for example, center-align a table.&lt;/li&gt;
	&lt;li&gt;The page margins will not be set.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
						<sci:legalval selected="true">Default</sci:legalval>
						<sci:legalval>Pipeline Pilot 7.5</sci:legalval>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
						<sci:help>Lists the set of temporary files which will be converted by the network to true temporary file names</sci:help>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
						<sci:help>Lists a set of properties (without the @) to be created on the property list for this protocol.
Other properties are created on the global property list
and so are accessible from all protocols.</sci:help>
						<sci:value>ServerFilePath, ServerFilePathZIP, ServerFilePathForwardSlashes</sci:value>
					</sci:arg>
					<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
						<sci:help>When the network is run, whether we process once or until done for each process call</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Accept Bootstrap" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
						<sci:help>Allow the use of Web Design (Bootstrap) collection components with the Semantic UI viewer? Generally speaking, this parameter should always be set to False to prevent the inadvertent mixing of the two frameworks.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Web Browsers" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false" uimpl="true">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Web Browsers</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:member>Chrome</sci:member>
						<sci:member>Firefox</sci:member>
						<sci:member>Internet Explorer</sci:member>
						<sci:member>Set IE Compatibility</sci:member>
					</sci:arg>
					<sci:arg name="Set IE Compatibility" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Set IE Compatibility</sci:value>
								<sci:value>Set IE Compatibility</sci:value>
								<sci:value>Set IE Compatibility</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>&lt;p&gt;When this flag is set to True (default), IE compatibility in the report is set to IE 10 (the minimum support level for Pipeline Pilot). For most users of IE, this should provide a stable environment to view Pipeline Pilot reports.
&lt;/p&gt;
&lt;/p&gt;Switch off this setting, if necessary, to allow Internet Explorer to display content in the highest mode available. This is only required for users who view the report in Internet Explorer 11 or above and who need to enable facilities not available in IE 10 mode, such as WebGL and some HTML5/CSS features.
&lt;/p&gt;
&lt;p&gt;Note that even if you are viewing the report in another browser, other users may subsequently run the protocol or view the report in Internet Explorer, and so you may still need to set this IE Compatibility setting - but only in the rare case that your report requires something beyond the default IE 10 compatibility.
&lt;/p&gt;</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Internet Explorer" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Internet Explorer</sci:value>
								<sci:value>Internet Explorer</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>The location for Internet Explorer</sci:help>
						<sci:value>iexplore</sci:value>
					</sci:arg>
					<sci:arg name="Chrome" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Chrome</sci:value>
								<sci:value>Chrome</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>The location for Chrome</sci:help>
						<sci:value>chrome</sci:value>
					</sci:arg>
					<sci:arg name="Firefox" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Firefox</sci:value>
								<sci:value>Firefox</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>The location for Firefox</sci:help>
						<sci:value>firefox</sci:value>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval>ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>DrainTopDown</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>
						<sci:legalval>Owner Access Only</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>dbondarev</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Sat Apr 07 23:20:34 2018</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>HTML Report Viewer (Semantic UI)</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>ReportViewerNode</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>SubProtocol</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{185627DA-2D3A-41F3-BC57-ABDB16E41D1A}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>954 -395</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Displays the results of a reporting protocol in HTML5 format</sci:value>
						<sci:value>&lt;p&gt;This component accepts reporting objects as input (e.g., tables, text and images), and displays the output as an HTML file in Internet Explorer.&lt;/p&gt;</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>This component accepts reporting objects as input.</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>%VERSION 3%</sci:value>
						<sci:value>1273 -420 587 177</sci:value>
						<sci:value>255 255 0</sci:value>
						<sci:value>disabled &quot;relative URLs to absolute&quot; inside</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>16.1.0.1140</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="OriginalPackage" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>OriginalPackage</sci:help>
						<sci:value>scitegic/report</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Modified</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Semantic UI\Viewers and Writers\HTML Report Viewer (Semantic UI)</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol/>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="Form Submit Button (Semantic UI)" version="2">
					<sci:arg name="Work Protocol" type="WorkProtocolType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Work Protocol</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>&lt;p&gt;The protocol that should be run when this submit button is clicked.  If this is specified, it will override the protocol specified in the parent Input Form component.&lt;/p&gt;</sci:help>
						<sci:member>Display Results As</sci:member>
					</sci:arg>
					<sci:arg name="Display Results As" type="LinkOptionsType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Display Results As</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>&lt;p&gt;Describes where to display the result of the work protocol when this button is clicked, allowing the value specified in the parent input form to be overridden.  Options such as &quot;New Web Port tab&quot; and &quot;Left Web Port pane&quot; are only applicable if the protocol is run through Web Port.  If the protocol is run outside of Web Port, such options are ignored (default to &quot;Same Window&quot;).&lt;/p&gt;

&lt;p&gt;When the value is not set or &quot;Inherit From Parent&quot;, the value specified on the parent input form will be used.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Text" type="ExpressionType" required="true" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Text</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>&lt;p&gt;The text to be shown on the button.&lt;/p&gt;</sci:help>
						<sci:value>&apos;Submit&apos;</sci:value>
					</sci:arg>
					<sci:arg name="Parameter to Map" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Parameter to Map</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>&lt;p&gt;The name of a parameter on the target protocol that this button&apos;s value should be mapped to. The value of the mapped parameter will be the &lt;i&gt;Text&lt;/i&gt; on the button.  If blank, the submit button does not correspond to any parameter.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Form Name" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Form Name</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>&lt;p&gt;The name of an input form component in the report.  If specified, this submit button will submit the form by this name when the button is clicked.  If not specified, the button will submit the form in which the button is contained.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Additional Data to Pass" type="GroupType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Additional Data to Pass</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>Any additional name/value pairs that should be sent to the work protocol but which should have no visual representation in this report.  Typically these are global variables that are needed in the work protocol.

Any number of additional name/value pairs can be supplied.  To create new entries, you may add new parameters with the names &quot;Additional Parameter X&quot; and &quot;Additional Value X&quot; where X is the next integer in the series.</sci:help>
						<sci:member>Additional Parameter 1</sci:member>
						<sci:member>Additional Value 1</sci:member>
						<sci:member>Additional Value 2</sci:member>
						<sci:member>Additional Parameter 2</sci:member>
						<sci:member>Additional Value 3</sci:member>
						<sci:member>Additional Parameter 3</sci:member>
						<sci:member>Additional Parameter 4</sci:member>
						<sci:member>Additional Value 4</sci:member>
					</sci:arg>
					<sci:arg name="Additional Parameter 1" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Additional Parameter 1</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>&lt;p&gt;The name of the parameter that should be sent to the work protocol.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Additional Value 1" type="ExpressionType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Additional Value 1</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>&lt;p&gt;The value of the additional information that should be sent to the work protocol.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Additional Parameter 2" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Additional Parameter 2</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>&lt;p&gt;The name of the parameter that should be sent to the work protocol.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Additional Value 2" type="ExpressionType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Additional Value 2</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>&lt;p&gt;The value of the additional information that should be sent to the work protocol.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Additional Parameter 3" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Additional Parameter 3</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>&lt;p&gt;The name of the parameter that should be sent to the work protocol.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Additional Value 3" type="ExpressionType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Additional Value 3</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>&lt;p&gt;The value of the additional information that should be sent to the work protocol.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Additional Parameter 4" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Additional Parameter 4</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>&lt;p&gt;The name of the parameter that should be sent to the work protocol.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Additional Value 4" type="ExpressionType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Additional Value 4</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>&lt;p&gt;The value of the additional information that should be sent to the work protocol.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Appearance" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>Button appearance</sci:help>
						<sci:member>Size</sci:member>
						<sci:member>Color</sci:member>
						<sci:member>Shape</sci:member>
						<sci:member>Basic</sci:member>
					</sci:arg>
					<sci:arg name="Size" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>Size</sci:help>
						<sci:legalval/>
						<sci:legalval>mini</sci:legalval>
						<sci:legalval>tiny</sci:legalval>
						<sci:legalval>small</sci:legalval>
						<sci:legalval>medium</sci:legalval>
						<sci:legalval>large</sci:legalval>
						<sci:legalval>big</sci:legalval>
						<sci:legalval>huge</sci:legalval>
					</sci:arg>
					<sci:arg name="Color" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>Default color is grey.</sci:help>
						<sci:legalval selected="true">grey</sci:legalval>
						<sci:legalval>positive</sci:legalval>
						<sci:legalval>negative</sci:legalval>
						<sci:legalval>black</sci:legalval>
						<sci:legalval>red</sci:legalval>
						<sci:legalval>orange</sci:legalval>
						<sci:legalval>yellow</sci:legalval>
						<sci:legalval>olive</sci:legalval>
						<sci:legalval>green</sci:legalval>
						<sci:legalval>teal</sci:legalval>
						<sci:legalval>blue</sci:legalval>
						<sci:legalval>violet</sci:legalval>
						<sci:legalval>purple</sci:legalval>
						<sci:legalval>pink</sci:legalval>
						<sci:legalval>brown</sci:legalval>
					</sci:arg>
					<sci:arg name="Shape" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>Shape</sci:help>
						<sci:legalval/>
						<sci:legalval>circular</sci:legalval>
					</sci:arg>
					<sci:arg name="Basic" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>A basic button is less pronounced. Just an outline and text inside it are visible.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Links and Actions" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Links and Actions</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>Links and actions to be applied to the report element produced by this component.</sci:help>
						<sci:member>Link Target</sci:member>
						<sci:member>HTML Attributes</sci:member>
						<sci:member>Tooltip</sci:member>
					</sci:arg>
					<sci:arg name="Link Target" type="ExpressionType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Link Target</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>Sets this element as the destination for links from other elements in the report. The value of &lt;i&gt;Link Target&lt;/i&gt; can be text or a property name, and should match the value of &lt;i&gt;Link&lt;/i&gt; in another report component.  In the resulting report, when the element with &lt;i&gt;Link&lt;/i&gt; is clicked, the element with the matching &lt;i&gt;Link Target&lt;/i&gt; is brought to the top of the report page.</sci:help>
					</sci:arg>
					<sci:arg name="Tooltip" type="ExpressionType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Tooltip</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>An optional tooltip for this reporting element.</sci:help>
					</sci:arg>
					<sci:arg name="HTML Attributes" type="HTMLAttributesType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>HTML Attributes</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>Defines attributes for the reporting element. These attributes can be used by JavaScript code that is &lt;a href=&quot;javascript:DoLink(&apos;{262A8E5D-BB8E-4dc4-A6F5-A61FC6047EC8}&apos;)&quot;&gt;embedded in&lt;/a&gt; or &lt;a href=&quot;javascript:DoLink(&apos;{6DF7D4FA-28BC-453b-8882-DE55C7CFFBF9}&apos;)&quot;&gt;included by&lt;/a&gt; the HTML report. One very common attribute is &quot;id&quot; which allows access to the element using the document.getElementById(id) method. Event handlers such as &quot;onclick&quot; and &quot;onmouseover&quot; are also common attributes.</sci:help>
						<sci:value>100</sci:value>
						<sci:value>class</sci:value>
						<sci:value>if @Basic is defined and @Basic then
	&quot;ui basic $(size) $(color) $(shape) button&quot;;
else
	&quot;ui $(size) $(color) $(shape) button&quot;;
end if;</sci:value>
					</sci:arg>
					<sci:arg name="Popup" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
							<sci:propval name="SCI_InitializeUsingOrigType">GroupType</sci:propval>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup displays additional information in a temporary message.</sci:help>
						<sci:member>Popup Content</sci:member>
						<sci:member>Basic Popup</sci:member>
						<sci:member>Popup Appearance</sci:member>
						<sci:member>Behavior</sci:member>
					</sci:arg>
					<sci:arg name="Popup Content" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Popup Content</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>Popup content. (HTML is allowed).</sci:help>
					</sci:arg>
					<sci:arg name="Basic Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Basic Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can provide basic or extended formatting.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Popup Appearance" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Popup Appearance</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>Appearance</sci:help>
						<sci:member>Popup Width</sci:member>
						<sci:member>Fluid Popup</sci:member>
						<sci:member>Popup Size</sci:member>
						<sci:member>Flowing Popup</sci:member>
						<sci:member>Inverted Popup</sci:member>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable &apos;.ParameterName().&apos;, set Basic Popup to False&apos;);
not Parameter(&apos;Basic Popup&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Popup Width" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Popup Width</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can be wide or very wide to allow for longer content.</sci:help>
						<sci:legalval/>
						<sci:legalval>wide</sci:legalval>
						<sci:legalval>very wide</sci:legalval>
					</sci:arg>
					<sci:arg name="Fluid Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Fluid Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A fluid popup will take up the entire width of its  container.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Popup Size" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Popup Size</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can vary in font size.</sci:help>
						<sci:legalval/>
						<sci:legalval>mini</sci:legalval>
						<sci:legalval>tiny</sci:legalval>
						<sci:legalval>small</sci:legalval>
						<sci:legalval>large</sci:legalval>
						<sci:legalval>huge</sci:legalval>
					</sci:arg>
					<sci:arg name="Flowing Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Flowing Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can have no maximum width and continue to flow to fit its content.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Inverted Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Inverted Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can have its colors inverted.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Behavior" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Behavior</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>Behavior</sci:help>
						<sci:member>Show On</sci:member>
					</sci:arg>
					<sci:arg name="Show On" type="StringType" required="true" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Show On</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>When to show the popup. Hover (mouseover), click, focus (when a form element such as a text box is in focus).</sci:help>
						<sci:legalval selected="true">hover</sci:legalval>
						<sci:legalval>click</sci:legalval>
						<sci:legalval>focus</sci:legalval>
					</sci:arg>
					<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
						<sci:member>RunToCompletion Categorize Using</sci:member>
						<sci:legalval selected="true">False</sci:legalval>
						<sci:legalval>True - For Each Data Record</sci:legalval>
						<sci:legalval>True - For Each Category</sci:legalval>
					</sci:arg>
					<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
						<sci:member>Parallel Processing Options Batch Size</sci:member>
						<sci:member>Parallel Processing Options Server</sci:member>
						<sci:member>Parallel Processing Options Preserve Order</sci:member>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
						<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
#rtcForEachCategory := (Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
elsif (#rtcForEachCategory) then
	SetDisabledDetails(&quot;This parameter is not applicable when &apos;RunToCompletion&apos; is set to &apos;True - For Each Category&apos;&quot;);
end if;
#parallel and not #rtcForEachCategory;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="false">
						<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
						<sci:member>Parallel Processing Options Server Processes</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
						<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Run subprotocol on grid engine if available.</sci:help>
						<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid Grid Options</sci:member>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Grid Options" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Use this to specify grid engine specific command line parameters to the job submission command. Leave blank to use defaults.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
						<sci:value>basic_</sci:value>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval>ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Form Submit Button (Semantic UI)</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>ReportNode</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>790</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{0AAC888A-BB35-43D5-B709-7143085ACB7F}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>426 -770</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Form Submit Button (Semantic UI).</sci:value>
						<sci:value>&lt;p&gt;Creates a submit button form element.  The submit button should be used in conjunction with an Input Form (Semantic UI) component.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/report/docs/reporting_basic.pdf&apos;)&quot;&gt;Report Design Essentials&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/reportadv/docs/reportadv_interactive.pdf&apos;)&quot;&gt;Interactive Reporting and Form Design&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
						<sci:value>None</sci:value>
						<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>16.1.0.1140</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval>Owner Access Only</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>bondadx2</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Mon Jul 18 11:59:27 2016</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>6</sci:value>
					</sci:arg>
					<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Processing Order</sci:help>
						<sci:value>DrainTopDown</sci:value>
					</sci:arg>
					<sci:arg name="OriginalPackage" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>OriginalPackage</sci:help>
						<sci:value>scitegic/coreutils</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Semantic UI\Forms\Functional Elements\Form Submit Button (Semantic UI)</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol/>
			</sci:data>
			<sci:connectid from="7" to="1" type="true"/>
			<sci:connectid from="8" to="0" type="true"/>
			<sci:connectid from="0" to="5" type="true"/>
			<sci:connectid from="5" to="1" type="true"/>
			<sci:connectid from="6" to="5" type="true"/>
			<sci:version iVal="1"/>
		</sci:protocol>
	</sci:dbitem>
<!-- Exported protocol -->
<sci:component name="8.0 Protocol Warning" version="2">
<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
<sci:help>Component Icon</sci:help>
<sci:value>PROTOCOLNODE</sci:value>
</sci:arg>
<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
<sci:help>Protocol Sticky Notes</sci:help>
<sci:value>%VERSION 3%</sci:value>
<sci:value>400 -219 1222 221</sci:value>
<sci:value>250 120 20</sci:value>
<sci:value>WARNING! This is a Pipeline Pilot protocol written in version 8.0 or later. It contains features that are not supported in earlier versions of Pipeline Pilot.</sci:value>
</sci:arg>
</sci:component>
</sci:data>

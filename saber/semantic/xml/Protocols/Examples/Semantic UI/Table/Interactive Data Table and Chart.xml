<?xml version="1.0" encoding="UTF-8"?>
<sci:data xmlns:sci="http://www.SciTegic.com/" object="SciTegic.Protocol.1" format="8.0.0">
	<sci:dbitem>
		<sci:component name="Interactive Data Table and Chart" version="2">
			<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;/p&gt;

&lt;p&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
			</sci:arg>
			<sci:arg name="Protocol Form" type="ProtocolType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;The path to a protocol that will render an HTML user interface for this protocol.  This optional parameter is used by Web Port to provide a custom user interface for a protocol.&lt;/p&gt;</sci:help>
			</sci:arg>
			<sci:arg name="Advanced Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false" uimpl="true">
				<sci:member>__PoolID</sci:member>
				<sci:member>Http Cookie Handling</sci:member>
				<sci:member>__NotificationProtocol</sci:member>
			</sci:arg>
			<sci:arg name="__PoolID" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;&lt;i&gt;__PoolID&lt;/i&gt; is a case insensitive string that can optionally be set to optimize the speed of execution for quick running protocols.  Multiple protocols with the same value for &lt;i&gt;__PoolID&lt;/i&gt; can share expensive resources such as database connections, Java VMs, memory, etc. reducing the execution time by 1 to 2 seconds per run.  This can give a large speed improvement to protocols that run in a few seconds such as web applications and interactive reports.  Longer running protocols will not see much benefit.  Generally, it is a good idea to use the same &lt;i&gt;__PoolID&lt;/i&gt; for all protocols within a single application such as an interactive report since many of the components, databases, and data structures will be similar.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;__PoolID&lt;/i&gt; can also be specified by the client when the protocol is launched.  If &lt;i&gt;__PoolID&lt;/i&gt; is specified both as a parameter by the client and as a parameter stored within the protocol, the client&apos;s value overrides the stored value.&lt;/p&gt;

&lt;p&gt;To disable pooling entirely for this particular protocol, set &lt;i&gt;__PoolID&lt;/i&gt; to &lt;b&gt;&amp;lt;Disable&amp;gt;&lt;/b&gt;&lt;/p&gt;</sci:help>
			</sci:arg>
			<sci:arg name="Http Cookie Handling" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;&lt;i&gt;Http Cookie Handling&lt;/i&gt; provides a mechanism to control the handling of Http cookies within components that access remote resources via Http and Https.  These include the &lt;a href=&quot;javascript:DoLink(&apos;{8A25024A-C274-485B-BB99-8570DCC4C075}&apos;)&quot;&gt;HTTP Connector&lt;/a&gt;, Data readers such as &lt;a href=&quot;javascript:DoLink(&apos;{8056E8AD-33EA-42BB-9099-EAB24C3D08E6}&apos;)&quot;&gt;Text Reader&lt;/a&gt;, &lt;a href=&quot;javascript:DoLink(&apos;{93C4D73F-0B4D-03F4-B0E3-D82C4FE04C6F}&apos;)&quot;&gt;XML Reader (Generic)&lt;/a&gt;, etc., and custom Java, Perl, and .Net components that use the available APIs for accessing remote servers.  By default, New Protocols will have this setting enabled and set to &quot;Protocol Scope&quot;.  This means that Http cookies obtained from a remote server within any component in the protocol or any of its subprotocols will be parsed and appropriately sent back on subsequent requests from the same component or any other component.   The handling of the cookies is based on the IETF standard as specified in &lt;a href=&quot;javascript:DoLink(&apos;http://tools.ietf.org/html/rfc6265&apos;)&quot;&gt;http://tools.ietf.org/html/rfc6265&lt;/a&gt;.  Setting the parameter to Disabled will prevent components from parsing and returning cookies to the remote servers.&lt;/p&gt;

&lt;p&gt;Persistence of cookies is not supported, so scoping of Http cookies is entirely within the context of a single protocol execution.&lt;/p&gt;

&lt;p&gt;Older protocols that do not have the &lt;i&gt;Http Cookie Handling&lt;/i&gt; parameter will behave as though it had been set to &quot;Disabled&quot;.  To enable cookie handling in these protocols, copy this parameter from a New Protocol to the older protocol and set the parameter as desired.&lt;/p&gt;</sci:help>
				<sci:legalval selected="true">Protocol Scoped</sci:legalval>
				<sci:legalval>Disabled</sci:legalval>
			</sci:arg>
			<sci:arg name="__NotificationProtocol" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;&lt;i&gt;__NotificationProtocol&lt;/i&gt; specifies the name or component ID (guid) of a protocol stored in the server&apos;s protocol database that will be executed when the current job completes. If your administrator has enabled notification protocols and depending on his or her preference, the notify protocol will either run as the anonymous user or as an admin specified user. The notification protocol receives several parameters that contain information about the original job:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;Notify_JobID&lt;/i&gt;: The job id of the execution
&lt;li&gt;&lt;i&gt;Notify_JobStatus&lt;/i&gt;: 
A description of the result of the job execution
&lt;li&gt;&lt;i&gt;Notify_JobStatusCode&lt;/i&gt;: The 
status code that for the result of the job execution.
	&lt;ul style=&quot;list-style-type:circle&quot;&gt;
	
&lt;li&gt;&lt;i&gt;5&lt;/i&gt;: Job was stopped by the client or administrator.
	&lt;li&gt;&lt;i&gt;6&lt;/i&gt;: 
Job completed normally with success.
	&lt;li&gt;&lt;i&gt;7&lt;/i&gt;: Job completed with an error.
	&lt;li&gt;&lt;i&gt;8&lt;/i&gt;: 
The process ID associated with the running job crashed or otherwise disappeared.
	&lt;li&gt;&lt;i&gt;9&lt;/i&gt;: 
Job failed to start.
	&lt;/ul&gt;
&lt;li&gt;&lt;i&gt;Notify_ProtocolName&lt;/i&gt;: The name of the protocol
&lt;li&gt;&lt;i&gt;Notify_ProtocolPath&lt;/i&gt;: 
The path of the protocol in the DB.  This field can be blank for protocols that were launched without 
saving to the database.
&lt;li&gt;&lt;i&gt;Notify_ProtocolLogName&lt;/i&gt;: The log name of the protocol.  
Is usually the same as ProtocolName, however this can be set by the client to a different name than the 
protocol.
&lt;li&gt;&lt;i&gt;Notify_RunHost&lt;/i&gt;: The name of the node where the protocol executed.
&lt;li&gt;&lt;i&gt;Notify_Username&lt;/i&gt;: 
The user that ran the job
&lt;/ul&gt;</sci:help>
			</sci:arg>
			<sci:arg name="Reporting" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
				<sci:help>This group contains parameters specific to protocols containing Reporting components.</sci:help>
				<sci:member>Reporting Stylesheet</sci:member>
				<sci:member>Reporting Chart Display Type</sci:member>
			</sci:arg>
			<sci:arg name="Reporting Stylesheet" type="StylesheetType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
				<sci:help>Specifies the name of a Stylesheet to be used by this protocol if any of the Reporting components have a Style selected in the &lt;i&gt;Format&lt;/i&gt; and &lt;i&gt;Position&lt;/i&gt; parameters.</sci:help>
				<sci:value>{44C6ECA7-D7C8-4BD8-A0C6-450FF605F58B}</sci:value>
			</sci:arg>
			<sci:arg name="Reporting Chart Display Type" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>Specifies the chart display format.  This can be either interactive or a static image. If the &lt;i&gt;Default&lt;/i&gt; option is selected then the server default setting as specified by the &lt;i&gt;DefaultChartDisplayType&lt;/i&gt; global in the Admin portal is used.
</sci:help>
				<sci:legalval selected="true">Default</sci:legalval>
				<sci:legalval>Interactive</sci:legalval>
				<sci:legalval>Image</sci:legalval>
			</sci:arg>
			<sci:arg name="Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>The Run On Grid parameter tells the server to run the protocol on the grid engine if the Pipeline Pilot server is configured to run with grid integration.</sci:help>
				<sci:member>Queue Name</sci:member>
				<sci:member>Grid Options</sci:member>
				<sci:legalval>True</sci:legalval>
				<sci:legalval selected="true">False</sci:legalval>
			</sci:arg>
			<sci:arg name="Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
				<sci:help>The Queue Name allows you to specify the name of the queue on the grid engine to submit the job to. Leave blank to specify the default queue.</sci:help>
				<sci:enabledscript>parameter(&apos;Run On Grid&apos;);</sci:enabledscript>
			</sci:arg>
			<sci:arg name="Grid Options" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
				<sci:help>Grid Options allows you to specify options to the grid engine submit command. Leave blank to specify the default options.</sci:help>
				<sci:enabledscript>parameter(&apos;Run On Grid&apos;);</sci:enabledscript>
			</sci:arg>
			<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
				<sci:help>Component Attributes</sci:help>
				<sci:legalval>ComponentTakesInput</sci:legalval>
				<sci:legalval>ComponentReturnsPass</sci:legalval>
				<sci:legalval>ComponentReturnsFail</sci:legalval>
				<sci:legalval>ComponentRunsLocal</sci:legalval>
			</sci:arg>
			<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
				<sci:legalval selected="true">Halt</sci:legalval>
				<sci:legalval>Fail</sci:legalval>
				<sci:legalval>Pass</sci:legalval>
			</sci:arg>
			<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
				<sci:legalval selected="true">Halt</sci:legalval>
				<sci:legalval>Fail</sci:legalval>
				<sci:legalval>Pass</sci:legalval>
			</sci:arg>
			<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
			<sci:arg name="WebExports" type="StringType" required="false" visibility="nevershow" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;A comma delimited list of global properties which will be automatically 
exported if this protocol is published as a web service.&lt;/p&gt;

&lt;p&gt;Each global property in the list is created with an empty value at the start of the protocol run.&lt;/p&gt;</sci:help>
			</sci:arg>
			<sci:arg name="Keep Alive" type="BoolType" required="false" visibility="nevershow" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;Specifies if the process where this protocol is run should stay around for later use.&lt;/p&gt;</sci:help>
				<sci:legalval selected="true">True</sci:legalval>
				<sci:legalval>False</sci:legalval>
			</sci:arg>
			<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>The user who registered this component.</sci:help>
				<sci:value>dbondarev</sci:value>
			</sci:arg>
			<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>The date this component was registered.</sci:help>
				<sci:value>Sat Apr 07 23:28:23 2018</sci:value>
			</sci:arg>
			<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>The server version when this component was registered</sci:help>
				<sci:value>16.1.0.1140</sci:value>
			</sci:arg>
			<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:value>Interactive Data Table</sci:value>
			</sci:arg>
			<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
				<sci:help>Protocol AutoLayout</sci:help>
				<sci:value>0</sci:value>
			</sci:arg>
			<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
				<sci:value>PROTOCOLNODE</sci:value>
			</sci:arg>
			<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
				<sci:help>Component Revision</sci:help>
				<sci:value>790</sci:value>
			</sci:arg>
			<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:value>{0B1F18C7-94C4-4A36-97CE-1EC73444D67B}</sci:value>
			</sci:arg>
			<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
				<sci:help>By Ref</sci:help>
				<sci:value>0</sci:value>
			</sci:arg>
			<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
				<sci:value>100</sci:value>
				<sci:value>Interactive Table linked to a Chart.</sci:value>
				<sci:value>An example of interactive data visualization.</sci:value>
				<sci:value>None</sci:value>
				<sci:value/>
				<sci:value>None</sci:value>
				<sci:value/>
				<sci:value>None</sci:value>
				<sci:value/>
			</sci:arg>
			<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
			<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
				<sci:help>Protocol Scale</sci:help>
				<sci:value>100</sci:value>
			</sci:arg>
			<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>Protocol Sticky Notes</sci:help>
			</sci:arg>
			<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>Protocol Options</sci:help>
				<sci:legalval>Owner Access Only</sci:legalval>
			</sci:arg>
			<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
				<sci:value>0</sci:value>
			</sci:arg>
			<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
				<sci:help>Local Component Identifier</sci:help>
				<sci:value>-1</sci:value>
			</sci:arg>
			<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:value>50 -50</sci:value>
			</sci:arg>
			<sci:arg name="OriginalPackage" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>OriginalPackage</sci:help>
				<sci:value>scitegic/coreutils</sci:value>
			</sci:arg>
			<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>The original path within the database of this component.</sci:help>
				<sci:value>Protocols\Examples\Semantic UI\Table\Interactive Data Table and Chart</sci:value>
			</sci:arg>
		</sci:component>
		<sci:protocol>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="Text Header (Semantic UI)" version="2">
					<sci:arg name="Header Text" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>The text in the header.</sci:help>
						<sci:value>Interactive data table linked with a chart. Select items to highlight them.</sci:value>
					</sci:arg>
					<sci:arg name="Appearance" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:member>Colored</sci:member>
						<sci:member>Block</sci:member>
						<sci:member>Inverted</sci:member>
						<sci:member>Dividing</sci:member>
						<sci:member>Size</sci:member>
					</sci:arg>
					<sci:arg name="Size" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>A header can have small or large font.</sci:help>
						<sci:legalval selected="true">h1</sci:legalval>
						<sci:legalval>h2</sci:legalval>
						<sci:legalval>h3</sci:legalval>
						<sci:legalval>h4</sci:legalval>
						<sci:legalval>h5</sci:legalval>
					</sci:arg>
					<sci:arg name="Dividing" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>A header can be formatted to divide itself from the content below it.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Colored" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>A header can be given a color to distinguish it from other headers. &lt;p&gt;These colors can be Inverted to become background colors.&lt;/p&gt;</sci:help>
						<sci:legalval/>
						<sci:legalval>red</sci:legalval>
						<sci:legalval>orange</sci:legalval>
						<sci:legalval>yellow</sci:legalval>
						<sci:legalval>olive</sci:legalval>
						<sci:legalval>green</sci:legalval>
						<sci:legalval>teal</sci:legalval>
						<sci:legalval>blue</sci:legalval>
						<sci:legalval>violet</sci:legalval>
						<sci:legalval>purple</sci:legalval>
						<sci:legalval>pink</sci:legalval>
						<sci:legalval>brown</sci:legalval>
						<sci:legalval>grey</sci:legalval>
						<sci:legalval>black</sci:legalval>
					</sci:arg>
					<sci:arg name="Block" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>A header can be formatted to appear inside a content block.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Inverted" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>A header&apos;s colors can be inverted.</sci:help>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable &apos;.ParameterName().&apos;, set Block to &quot;True&quot;&apos;);
Parameter(&apos;Block&apos;);</sci:enabledscript>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
						<sci:value>classes_, h_</sci:value>
					</sci:arg>
					<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
						<sci:member>RunToCompletion Categorize Using</sci:member>
						<sci:legalval selected="true">False</sci:legalval>
						<sci:legalval>True - For Each Data Record</sci:legalval>
						<sci:legalval>True - For Each Category</sci:legalval>
					</sci:arg>
					<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
						<sci:member>Parallel Processing Options Batch Size</sci:member>
						<sci:member>Parallel Processing Options Server</sci:member>
						<sci:member>Parallel Processing Options Preserve Order</sci:member>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
						<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
#rtcForEachCategory := (Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
elsif (#rtcForEachCategory) then
	SetDisabledDetails(&quot;This parameter is not applicable when &apos;RunToCompletion&apos; is set to &apos;True - For Each Category&apos;&quot;);
end if;
#parallel and not #rtcForEachCategory;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
						<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
						<sci:member>Parallel Processing Options Server Processes</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
						<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Run subprotocol on grid engine if available.</sci:help>
						<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid Grid Options</sci:member>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
						<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Grid Options" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Use this to specify grid engine specific command line parameters to the job submission command. Leave blank to use defaults.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval>ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="Popup" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
							<sci:propval name="SCI_InitializeUsingOrigType">GroupType</sci:propval>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup displays additional information in a temporary message.</sci:help>
						<sci:member>Popup Content</sci:member>
						<sci:member>Basic Popup</sci:member>
						<sci:member>Popup Appearance</sci:member>
						<sci:member>Behavior</sci:member>
					</sci:arg>
					<sci:arg name="Popup Content" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Popup Content</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>Popup content. (HTML is allowed).</sci:help>
					</sci:arg>
					<sci:arg name="Basic Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Basic Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can provide basic or extended formatting.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Popup Appearance" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Popup Appearance</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:member>Popup Width</sci:member>
						<sci:member>Fluid Popup</sci:member>
						<sci:member>Popup Size</sci:member>
						<sci:member>Flowing Popup</sci:member>
						<sci:member>Inverted Popup</sci:member>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable &apos;.ParameterName().&apos;, set Basic Popup to False&apos;);
not Parameter(&apos;Basic Popup&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Popup Width" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Popup Width</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can be wide or very wide to allow for longer content.</sci:help>
						<sci:legalval/>
						<sci:legalval>wide</sci:legalval>
						<sci:legalval>very wide</sci:legalval>
					</sci:arg>
					<sci:arg name="Fluid Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Fluid Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A fluid popup will take up the entire width of its  container.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Popup Size" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Popup Size</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can vary in font size.</sci:help>
						<sci:legalval/>
						<sci:legalval>mini</sci:legalval>
						<sci:legalval>tiny</sci:legalval>
						<sci:legalval>small</sci:legalval>
						<sci:legalval>large</sci:legalval>
						<sci:legalval>huge</sci:legalval>
					</sci:arg>
					<sci:arg name="Flowing Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Flowing Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can have no maximum width and continue to flow to fit its content.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Inverted Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Inverted Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can have its colors inverted.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Behavior" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Behavior</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:member>Show On</sci:member>
					</sci:arg>
					<sci:arg name="Show On" type="StringType" required="true" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Show On</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>When to show the popup. Hover (mouseover), click, focus (when a form element such as a text box is in focus).</sci:help>
						<sci:legalval selected="true">hover</sci:legalval>
						<sci:legalval>click</sci:legalval>
						<sci:legalval>focus</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Text Header (Semantic UI)</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>ReportTextNode</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>790</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{E3C33187-BDCE-4E6B-A065-7AC26F529BE3}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>690 -120</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Text Header (Semantic UI).</sci:value>
						<sci:value>&lt;p&gt;A header provides a short summary of content. You may use HTML in the header text if you wish.&lt;/p&gt;</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
						<sci:value>None</sci:value>
						<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>16.1.0.1140</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval>Owner Access Only</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>bondadx2</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Tue Jun 14 10:56:02 2016</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>4</sci:value>
					</sci:arg>
					<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Processing Order</sci:help>
						<sci:value>DrainTopDown</sci:value>
					</sci:arg>
					<sci:arg name="OriginalPackage" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>OriginalPackage</sci:help>
						<sci:value>scitegic/coreutils</sci:value>
					</sci:arg>
					<sci:arg name="OriginalComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>OriginalComponentGUID</sci:help>
						<sci:value>{7DB736DB-2B9F-43E6-9B58-2DDD938BF8D3}</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Semantic UI\Page\Text Header (Semantic UI)</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol/>
			</sci:data>
			<sci:data object="SciTegic.ComponentJavaPlugin.1">
				<sci:component name="XY Chart" version="2">
					<sci:arg name="Chart Data" type="GroupType" required="false" visibility="visible" multi="true" expanded="true">
						<sci:help>Defines groups of Data Series for the chart. There is no limit to the number of Data Series you can have. Use this parameter to add, remove and reorder data series in the chart.</sci:help>
						<sci:member>Data Series 1</sci:member>
					</sci:arg>
					<sci:arg name="Data Series 1" type="GroupType" required="false" visibility="visible" multi="false">
						<sci:help>Settings for the Data Series to be plotted. You can add additional Data Series using &lt;i&gt;Chart Data&lt;/i&gt;.</sci:help>
						<sci:member>Data Series 1 Links and Actions</sci:member>
						<sci:member>Data Series 1 X Property</sci:member>
						<sci:member>Data Series 1 Y Property</sci:member>
						<sci:member>Data Series 1 Symbols and Lines</sci:member>
						<sci:member>Data Series 1 Data Options</sci:member>
					</sci:arg>
					<sci:arg name="Data Series 1 X Property" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
						<sci:help>The name of a property on the data stream, or calculable property, to plot against the X axis.</sci:help>
						<sci:value>alcohol</sci:value>
					</sci:arg>
					<sci:arg name="Data Series 1 Y Property" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
						<sci:help>The name of a property on the data stream, or calculable property, to plot against the Y axis. Multiple Y properties can be supplied with a comma-delimited list of property names.</sci:help>
						<sci:value>calories</sci:value>
					</sci:arg>
					<sci:arg name="Data Series 1 Data Options" type="GroupType" required="false" visibility="visible" multi="false">
						<sci:help>Various data options for the data series.</sci:help>
						<sci:member>Data Series 1 Data Options Error Bar</sci:member>
						<sci:member>Data Series 1 Data Options Y Axis for Plot</sci:member>
						<sci:member>Data Series 1 Data Options Regression Line</sci:member>
						<sci:member>Data Series 1 Data Options Regression Line Expression</sci:member>
						<sci:member>Data Series 1 Data Options Label</sci:member>
						<sci:member>Data Series 1 Data Options Legend Text</sci:member>
					</sci:arg>
					<sci:arg name="Data Series 1 Data Options Error Bar" type="ExpressionType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Optional parameter that is a property, or a PilotScript expression, providing values that describe the magnitude of error bars shown on individual bars. Any calculable properties must be calculated upstream.

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;

&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
</sci:help>
					</sci:arg>
					<sci:arg name="Data Series 1 Data Options Y Axis for Plot" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>Select which Y axis to plot against (Y Axis or Second Y Axis).</sci:help>
						<sci:legalval selected="true">Y Axis</sci:legalval>
						<sci:legalval>Second Y Axis</sci:legalval>
					</sci:arg>
					<sci:arg name="Data Series 1 Data Options Regression Line" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;The type of regression line to draw in the chart.  If &quot;Custom&quot;, then the value of the &quot;Regression Line Expression&quot; parameter will be used to identify records whose values will be used to plot a regression line. If &quot;Power&quot;, then all data points need to have positive values, otherwise the regression line will not be drawn.</sci:help>
						<sci:legalval selected="true">None</sci:legalval>
						<sci:legalval>Linear</sci:legalval>
						<sci:legalval>Power</sci:legalval>
						<sci:legalval>Custom</sci:legalval>
					</sci:arg>
					<sci:arg name="Data Series 1 Data Options Regression Line Expression" type="ExpressionType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;A PilotScript expression that evaluates to True for any data points that should be counted as part of a custom regression line.  This parameter is ignored unless the Regression Line parameter&apos;s value is &quot;Custom.&quot;&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;

&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
</sci:help>
						<sci:validscript>regressionLineParameterName := StrReplace(ParameterName(), &quot;Regression Line Expression&quot;, &quot;Regression Line&quot;);
valid := Parameter(regressionLineParameterName) ne &apos;Custom&apos; OR Parameter() ne &apos;&apos;;
if (not valid) then
     SetInvalidDetails(&apos;This parameter is required when Regression Line is set to &quot;Custom&quot;&apos;);
End if;
valid;</sci:validscript>
						<sci:enabledscript>regressionLineParameterName := StrReplace(ParameterName(), &quot;Regression Line Expression&quot;, &quot;Regression Line&quot;);
enabled := Parameter(regressionLineParameterName) eq &apos;Custom&apos;;
if (not enabled) then
     SetDisabledDetails(&apos;This parameter is enabled only when Regression Line is set to &quot;Custom&quot;&apos;);
End if;
enabled;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Data Series 1 Data Options Label" type="ExpressionType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;The name of a property on the data stream, or a PilotScript expression, that will be displayed as a label next to each point in the chart.&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;

&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
</sci:help>
					</sci:arg>
					<sci:arg name="Data Series 1 Data Options Legend Text" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Text to be displayed in the legend. If &lt;i&gt;Y Property&lt;/i&gt; contains a single entry, then the specified string is used as the legend. If &lt;i&gt;Y Property&lt;/i&gt; contains multiple entries then this parameter should contain a comma-separated list of strings to be used as legends. If this parameter is left blank, or the number of comma-separated strings is less than the number of &lt;i&gt;Y Property&lt;/i&gt; entries then a default legend text will be supplied.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Data Series 1 Symbols and Lines" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>Symbol and line attributes for the data series.</sci:help>
						<sci:member>Data Series 1 Symbols and Lines Symbol Type</sci:member>
						<sci:member>Data Series 1 Symbols and Lines Symbol Size</sci:member>
						<sci:member>Data Series 1 Symbols and Lines Symbol Color</sci:member>
						<sci:member>Data Series 1 Symbols and Lines Symbol Fill Pattern</sci:member>
						<sci:member>Data Series 1 Symbols and Lines Line Type</sci:member>
						<sci:member>Data Series 1 Symbols and Lines Line Thickness</sci:member>
						<sci:member>Data Series 1 Symbols and Lines Line Color</sci:member>
					</sci:arg>
					<sci:arg name="Data Series 1 Symbols and Lines Symbol Type" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Specifies the symbol type to use.&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;
&lt;li&gt;You can assign a different symbol type for each data point by changing the parameter type to ExpressionType and setting its value to either the name of a property that holds a symbol type value or an expression defining a symbol type. A symbol type can be one of the predefined strings:
&lt;ul&gt;
&lt;li&gt;None&lt;/li&gt;
&lt;li&gt;Square&lt;/li&gt;
&lt;li&gt;Circle&lt;/li&gt;
&lt;li&gt;Triangle&lt;/li&gt;
&lt;li&gt;Inverted Triangle&lt;/li&gt;
&lt;li&gt;Diamond&lt;/li&gt;
&lt;li&gt;Cross&lt;/li&gt;
&lt;li&gt;Star&lt;/li&gt;
&lt;li&gt;Burst&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;

&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;

</sci:help>
						<sci:legalval>None</sci:legalval>
						<sci:legalval>Square</sci:legalval>
						<sci:legalval selected="true">Circle</sci:legalval>
						<sci:legalval>Triangle</sci:legalval>
						<sci:legalval>Inverted Triangle</sci:legalval>
						<sci:legalval>Diamond</sci:legalval>
						<sci:legalval>Cross</sci:legalval>
						<sci:legalval>Star</sci:legalval>
						<sci:legalval>Burst</sci:legalval>
					</sci:arg>
					<sci:arg name="Data Series 1 Symbols and Lines Symbol Size" type="DoubleType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Specifies the symbol size. The entered value will be used as the number of pixels in the radius of the symbol.  If the parameter is not specified the default symbol size of 6.0 is used. &lt;/p&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;
&lt;li&gt;You can create bubble charts where the size of each data point reflects a meaningful aspect of the data by changing the parameter type to ExpressionType and typing an expression evaluating to a double value. If the expression is evaluated to a negative value, a symbol size of zero is used (no symbol is drawn).&lt;/li&gt;

&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
</sci:help>
						<sci:value>12.0</sci:value>
					</sci:arg>
					<sci:arg name="Data Series 1 Symbols and Lines Symbol Color" type="ColorType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Specifies the symbol and error bar color.&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;
&lt;li&gt;You can assign a different color for each data point by changing the parameter type to ExpressionType and setting its value to either the name of a property that holds a color value or an expression defining a color.  There are three ways to specify colors for the property or expression:
&lt;ul&gt;&lt;li&gt;Strings, e.g., Red or Blue.&lt;/li&gt;
&lt;li&gt;RGB (reg-green-blue) color values (as hexadecimal values), prefixed with a &apos;#&apos; symbol.  For example, to specify the color Red, use &lt;code&gt;#FF0000&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Integer index values that correspond to the default order of colors from the &lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/report/docs/default_color_table.htm&apos;)&quot;&gt;Default Color Table&lt;/a&gt;. For example, to specify Yellow, use 4 (i.e., Yellow is the fourth entry in the table).&lt;/li&gt;&lt;/ul&gt;
&lt;/li&gt;

&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;

</sci:help>
					</sci:arg>
					<sci:arg name="Data Series 1 Symbols and Lines Symbol Fill Pattern" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;Specifies the symbol fill pattern to use.&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;
&lt;li&gt;You can assign a different symbol fill pattern for each data point by changing the parameter type to ExpressionType and setting its value to either the name of a property that holds a symbol fill pattern value or an expression defining a symbol fill pattern. A symbol fill pattern can be one of the predefined strings:
&lt;ul&gt;
&lt;li&gt;Gradient&lt;/li&gt;
&lt;li&gt;Solid&lt;/li&gt;
&lt;li&gt;Open&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;

&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
</sci:help>
						<sci:legalval>Solid</sci:legalval>
						<sci:legalval selected="true">Gradient</sci:legalval>
						<sci:legalval>Open</sci:legalval>
					</sci:arg>
					<sci:arg name="Data Series 1 Symbols and Lines Line Type" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Specifies the line type for the data.</sci:help>
						<sci:legalval selected="true">None</sci:legalval>
						<sci:legalval>Solid</sci:legalval>
						<sci:legalval>Dotted</sci:legalval>
						<sci:legalval>Dashed</sci:legalval>
						<sci:legalval>Dot-dash</sci:legalval>
					</sci:arg>
					<sci:arg name="Data Series 1 Symbols and Lines Line Thickness" type="LongType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Specifies the thickness of line.</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="Data Series 1 Symbols and Lines Line Color" type="ColorType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;specifies the color of the line.</sci:help>
					</sci:arg>
					<sci:arg name="Data Series 1 Links and Actions" type="GroupType" required="false" visibility="visible" multi="false">
						<sci:help>Links and Actions options for the data series.</sci:help>
						<sci:member>Data Series 1 Links and Actions Link</sci:member>
						<sci:member>Data Series 1 Links and Actions Protocol Link</sci:member>
						<sci:member>Data Series 1 Links and Actions HTML Attributes</sci:member>
						<sci:member>Data Series 1 Links and Actions Tooltip</sci:member>
						<sci:member>Data Series 1 Links and Actions Link Options</sci:member>
					</sci:arg>
					<sci:arg name="Data Series 1 Links and Actions Link" type="ExpressionType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;An optional PilotScript expression evaluating to a link for each data point on the chart. The &lt;i&gt;Link&lt;/i&gt; value can be an internal report link or an external URL.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Internal: A string that points to a &lt;i&gt;Link Target&lt;/i&gt; in the report. Both the &lt;i&gt;Link&lt;/i&gt; and &lt;i&gt;Link Target&lt;/i&gt; values need to match for an internal link to work.&lt;/li&gt;
&lt;li&gt;External: A string that points to an external URL such as &apos;http://www.sitename.com&apos;, &apos;ftp://www.sitename.com&apos;, or a file URL. A file URL can be in one of these forms:
	&lt;ul&gt;
	&lt;li&gt;&apos;file:///C:/.../scitegic root/.../document.pdf&apos; - when using an absolute path within the Pipeline Pilot installation folder&lt;/li&gt;
 	&lt;li&gt;&apos;file://///machine_name/C/.../document.pdf&apos; - when using a Windows UNC path visible to the Pipeline Pilot server&lt;/li&gt;
	&lt;li&gt;&apos;file:///relative_path/document.pdf&apos; - when using a path, relative to &lt;i&gt;@SciTegicRoot&lt;/i&gt;&lt;/li&gt;
	&lt;li&gt;&apos;file://machine_name.domain_name.com/C/.../document.pdf&apos; - when using a path with a fully qualified machine name&lt;/li&gt;
	&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;
&lt;li&gt;If &lt;i&gt;Y Property&lt;/i&gt; contains more than one entry, the same link will be assigned to relevant chart entries of all Y Properties.&lt;/li&gt;
&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
</sci:help>
						<sci:enabledscript>protocolLinkParameterName := StrReplace(ParameterName(), &quot;Actions Link&quot;, &quot;Actions Protocol Link&quot;);
enabled := Parameter(protocolLinkParameterName) eq &apos;&apos;;
if (not enabled) then
     SetDisabledDetails(&apos;This parameter is enabled only when Protocol Link is not set&apos;);
End if;
enabled;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Data Series 1 Links and Actions Protocol Link" type="ProtocolLinkType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Specifies a link that runs a protocol for each data point on the chart. Editing this parameter opens up the Protocol Link Dialog.
&lt;/p&gt;
&lt;p&gt;
Note: if Y Property contains more than one entry, the same protocol link will be assigned to relevant chart entries of all Y Properties.
&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;
&lt;li&gt;If Y Property contains more than one entry, the same protocol link will be assigned to relevant chart entries of all Y Properties.&lt;/li&gt;
&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
</sci:help>
						<sci:enabledscript>linkParameterName := StrReplace(ParameterName(), &quot;Protocol Link&quot;, &quot;Link&quot;);
enabled := Parameter(linkParameterName) eq &apos;&apos;;
if (not enabled) then
     SetDisabledDetails(&apos;This parameter is enabled only when Link is not set&apos;);
End if;
enabled;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Data Series 1 Links and Actions Link Options" type="LinkOptionsType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Specifies how to display pages linked to data points. 
Applies only if &lt;i&gt;Link&lt;/i&gt; or &lt;i&gt;Protocol Link&lt;/i&gt; are set for the data series.
</sci:help>
					</sci:arg>
					<sci:arg name="Data Series 1 Links and Actions Tooltip" type="ExpressionType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;An optional property name, or PilotScript expression evaluating to a string, that will be displayed as a tooltip when the mouse hovers over a data point in the chart.&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;
&lt;li&gt;If &lt;i&gt;Y Property&lt;/i&gt; contains more than one entry, the same tooltip will be assigned to relevant chart entries of all Y Properties.&lt;/li&gt;
&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
</sci:help>
					</sci:arg>
					<sci:arg name="Data Series 1 Links and Actions HTML Attributes" type="HTMLAttributesType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Defines attributes for one point on the chart. These attributes can be used by JavaScript code that is &lt;a href=&quot;javascript:DoLink(&apos;{262A8E5D-BB8E-4dc4-A6F5-A61FC6047EC8}&apos;)&quot;&gt;embedded in&lt;/a&gt; or &lt;a href=&quot;javascript:DoLink(&apos;{6DF7D4FA-28BC-453b-8882-DE55C7CFFBF9}&apos;)&quot;&gt;included by&lt;/a&gt; the HTML report. One very common attribute is &quot;id&quot; which allows access to the element using the document.getElementById(id) method. Event handlers such as &quot;onclick&quot; and &quot;onmouseover&quot; are also common attributes.&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;
&lt;li&gt;If &lt;i&gt;Y Property&lt;/i&gt; contains more than one entry, the same attributes will be assigned to relevant chart entries of all Y Properties.&lt;/li&gt;
&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
</sci:help>
					</sci:arg>
					<sci:arg name="Chart Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Specifies attributes to be applied to the whole chart.</sci:help>
						<sci:member>Chart Options Title</sci:member>
						<sci:member>Chart Options Format</sci:member>
						<sci:member>Chart Options Position</sci:member>
						<sci:member>Chart Options Chart Output</sci:member>
						<sci:member>Chart Options Force One Series per Data Record</sci:member>
						<sci:member>Chart Options Make Scriptable</sci:member>
						<sci:member>Chart Options Display Options</sci:member>
						<sci:member>Chart Options Links and Actions</sci:member>
						<sci:member>Chart Options Display Type</sci:member>
					</sci:arg>
					<sci:arg name="Chart Options Title" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;Title for the chart.&lt;/p&gt;</sci:help>
						<sci:value>$(Data Series 1 Y Property) vs. $(Data Series 1 X Property)</sci:value>
					</sci:arg>
					<sci:arg name="Chart Options Format" type="FormatType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;Specifies formatting to be applied to this element. Editing this parameter opens the Format Dialog.&lt;/p&gt;

&lt;p&gt;Depending on what this Format is being applied to, options may include:
&lt;ul&gt;&lt;li&gt;Font settings (e.g., Color, Size, Bold, Italic, Underline)&lt;/li&gt;
&lt;li&gt;Border settings (e.g., Color, Style, Width)&lt;/li&gt;
&lt;li&gt;Background settings (Color, Image)&lt;/li&gt;
&lt;li&gt;Alignment settings&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Only options that are relevant for this specific Format parameter will be displayed.&lt;/li&gt;
&lt;li&gt;Background Image: Allows you to select a background image for the reporting element. This image must be accessible to the Pipeline Pilot server. For example, there are some example images in the apps\scitegic\generic\dataroot\data\Images folder in your Pipeline Pilot installation (shortcut is &quot;generic\Images&quot; folder). To use your own images, you need to upload them to a location such as your userdir or jobdir. An easy way to do this is to use the Binary Reader component to read the file, and the Binary Writer component to save it to the chosen location. Supported image types include .gif, .jpg, .png, and .bmp.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
						<sci:value>700</sci:value>
						<sci:value>Style</sci:value>
						<sci:value>Chart.General</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="Chart Options Position" type="PositionType" required="false" visibility="visible" multi="false">
						<sci:help>Specifies how this element is positioned. Editing this parameter opens the Position dialog, which enables you to change margins, paddings, width, and height.</sci:help>
						<sci:value>600</sci:value>
						<sci:value>Style</sci:value>
						<sci:value>Chart.General</sci:value>
						<sci:value>Width</sci:value>
						<sci:value>600.0</sci:value>
						<sci:value>Pixels</sci:value>
						<sci:value>Height</sci:value>
						<sci:value>400.0</sci:value>
						<sci:value>Pixels</sci:value>
					</sci:arg>
					<sci:arg name="Chart Options Display Type" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Specifies the chart display format.  This can be either interactive or a static image. If the &lt;i&gt;Default&lt;/i&gt; option is selected then the server default setting as specified by the &lt;i&gt;DefaultChartDisplayType&lt;/i&gt; global in the Admin portal is used.
</sci:help>
						<sci:legalval>Default</sci:legalval>
						<sci:legalval selected="true">Interactive</sci:legalval>
						<sci:legalval>Image</sci:legalval>
					</sci:arg>
					<sci:arg name="Chart Options Chart Output" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;Controls how data records are plotted in charts:
&lt;ul&gt;&lt;li&gt;If set to &quot;One Chart for All Data Records&quot; then all data records will be plotted in a single chart.&lt;/li&gt;
&lt;li&gt;If set to &quot;One Chart for Each Data Record&quot; then each data record will be plotted in a separate chart.  Use this when you want to create a chart for each row of a table.  Note that with the &quot;One Chart for Each Data Record&quot; setting, this applies to all Data Series specified including any non-array data series.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</sci:help>
						<sci:legalval selected="true">One Chart for All Data Records</sci:legalval>
						<sci:legalval>One Chart for Each Data Record</sci:legalval>
					</sci:arg>
					<sci:arg name="Chart Options Force One Series per Data Record" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Use this parameter to force each data record to be treated as separate data series. That is, when you want the values for &lt;i&gt;X Property&lt;/i&gt; and &lt;i&gt;Y Property&lt;/i&gt; in each data record to be treated as independent data series, so that they can be colored or sized differently, or use different symbols. This is typically done when &lt;i&gt;X Property&lt;/i&gt; and &lt;i&gt;Y Property&lt;/i&gt; contain array data.
&lt;p&gt;Note that the effect of treating the data as separate data series will happen automatically if the first data record has array data, irrespective of the value for &lt;i&gt;Force One Series per Data Record&lt;/i&gt;. But if the first data record has single values for &lt;i&gt;X Property&lt;/i&gt; and &lt;i&gt;Y Property&lt;/i&gt; (whether of type array or not), then this parameter must be set to &lt;b&gt;True&lt;/b&gt; to force the data to be treated as separate data series. A typical use case is when the first data record has single values for &lt;i&gt;X Property&lt;/i&gt; and &lt;i&gt;Y Property&lt;/i&gt; but subsequent data records have array data.
&lt;ul&gt;&lt;li&gt;&lt;b&gt;False:&lt;/b&gt; The number of values of for &lt;i&gt;X Property&lt;/i&gt; and &lt;i&gt;Y Property&lt;/i&gt; determines whether each record creates a new data series.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;True:&lt;/b&gt; Each data record always creates a separate data series.&lt;/li&gt;&lt;/ul&gt;</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Chart Options Make Scriptable" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>&lt;p&gt;Enables this chart for use with the &lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/reportadv/docs/charts/index.html&apos;)&quot;&gt;Scriptable Charts API&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;When this parameter is sent to true, all properties on the data stream will be stored in the chart for use with the &lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/reportadv/docs/charts/index.html&apos;)&quot;&gt;Scriptable Charts API&lt;/a&gt;.  If the data stream contains properties that should not be included, you can specify which properties to keep by placing a &lt;a href=&quot;javascript:DoLink(&apos;{456195EF-9708-4367-B3DD-21EBF3796604}&apos;)&quot;&gt;Keep Properties&lt;/a&gt; component upstream of the chart.&lt;/p&gt;
&lt;p&gt;NOTE: Making the chart Scriptable will force the &apos;Display Type&apos; to become &apos;Interactive&apos;.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Chart Options Display Options" type="GroupType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;Display options for the whole chart.</sci:help>
						<sci:member>Chart Options Display Options Show Legend</sci:member>
						<sci:member>Chart Options Display Options Legend Format</sci:member>
						<sci:member>Chart Options Display Options Show Horizontal Gridlines</sci:member>
						<sci:member>Chart Options Display Options Show Vertical Gridlines</sci:member>
						<sci:member>Chart Options Display Options Plot Region Color</sci:member>
						<sci:member>Chart Options Display Options Plot Region Transparency</sci:member>
					</sci:arg>
					<sci:arg name="Chart Options Display Options Show Legend" type="BoolType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;Show/Hide the legend.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Chart Options Display Options Legend Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false" uimpl="false">
						<sci:help>&lt;p&gt;Formatting to be applied to the chart legend.&lt;/p&gt;
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.  You can also set the Background and Border Color of the legend.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Font Size: Sets font size&lt;/li&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:value>700</sci:value>
						<sci:value>Style</sci:value>
						<sci:value>Chart.Legend</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="Chart Options Display Options Show Horizontal Gridlines" type="BoolType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;Show/Hide Horizontal Gridlines.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Chart Options Display Options Show Vertical Gridlines" type="BoolType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;Show/Hide Vertical Gridlines.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Chart Options Display Options Plot Region Color" type="ColorType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Apply a background color to the plot.</sci:help>
						<sci:value>White</sci:value>
					</sci:arg>
					<sci:arg name="Chart Options Display Options Plot Region Transparency" type="DoubleType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;A transparency for rendering the plot region. Legal values are between 0.0 (fully transparent) and 1.0 (fully opaque). The default is 1.0. 

&lt;p&gt;This options is not currently supported for PDF reports.</sci:help>
						<sci:validscript>SetInvalidDetails(&apos;The value has to be between 0.0 and 1.0&apos;);
Parameter() &gt;= 0.0 AND Parameter() &lt;= 1.0</sci:validscript>
						<sci:value>1.0</sci:value>
					</sci:arg>
					<sci:arg name="Chart Options Links and Actions" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:member>Chart Options Links and Actions Link</sci:member>
						<sci:member>Chart Options Links and Actions Link Target</sci:member>
						<sci:member>Chart Options Links and Actions HTML Attributes</sci:member>
						<sci:member>Chart Options Links and Actions Data Connector</sci:member>
						<sci:member>Chart Options Links and Actions Protocol Link</sci:member>
						<sci:member>Chart Options Links and Actions Link Options</sci:member>
					</sci:arg>
					<sci:arg name="Chart Options Links and Actions Link" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;An optional parameter specifying a link for the reporting element produced by this component. The &lt;i&gt;Link&lt;/i&gt; value can be an internal report link or an external URL.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Internal: A string that points to a &lt;i&gt;Link Target&lt;/i&gt; in the report. Both the &lt;i&gt;Link&lt;/i&gt; and &lt;i&gt;Link Target&lt;/i&gt; values need to match for an internal link to work.&lt;/li&gt;
&lt;li&gt;External: A string that points to an external URL such as &apos;http://www.sitename.com&apos;, &apos;ftp://www.sitename.com&apos;, or a file URL. A file URL can be in one of these forms:
&lt;ul&gt;
&lt;li&gt;&apos;file:///C:/.../scitegic root/.../document.pdf&apos; - when using an absolute path within the Pipeline Pilot installation folder&lt;/li&gt;
&lt;li&gt;&apos;file://///machine_name/C/.../document.pdf&apos; - when using a Windows UNC path visible to the Pipeline Pilot server&lt;/li&gt;
&lt;li&gt;&apos;file:///relative_path/document.pdf&apos; - when using a path, relative to &lt;i&gt;@SciTegicRoot&lt;/i&gt;&lt;/li&gt;
&lt;li&gt;&apos;file://machine_name.domain_name.com/C/.../document.pdf&apos; - when using a path with a fully qualified machine name&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
&lt;b&gt;Example:&lt;/b&gt;
To create a link from a combination of a property and static text, create a valid PilotScript expression. For example, if you have internal web pages linking to research projects that have addresses of the form: &lt;i&gt;http://mydomain.com/ProjectID&lt;/i&gt;, where &lt;i&gt;ProjectID&lt;/i&gt; is the actual project ID, and also a local property on the datastream, you would use:
&lt;p&gt;&lt;code&gt;&apos;http://mydomain.com&apos; . ProjectID&lt;/code&gt;
&lt;p&gt;as the value for &lt;i&gt;Link&lt;/i&gt;.</sci:help>
						<sci:enabledscript>prefixLength := StringLen(&apos;Link&apos;);
fullLength := StringLen(ParameterName());
prefix := SubString(ParameterName(), 1, fullLength - prefixLength); 
protocolLinkParameterName := prefix.&apos;Protocol Link&apos;;
enabled := true;
if (parameter(protocolLinkParameterName) is Defined ) then 
	enabled := Parameter(protocolLinkParameterName) eq &apos;&apos;;
	if (not enabled) then
		 SetDisabledDetails(&apos;This parameter is enabled only when Protocol Link is not set&apos;);
	End if;
end if;	
enabled;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Chart Options Links and Actions Protocol Link" type="ProtocolLinkType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Specifies a link that runs a protocol.  Editing this parameter opens up the Protocol Link Dialog.&lt;/p&gt;</sci:help>
						<sci:enabledscript>prefixLength := StringLen(&apos;Protocol Link&apos;);
fullLength := StringLen(ParameterName());
prefix := SubString(ParameterName(), 1, fullLength - prefixLength); 
linkParameterName := prefix.&apos;Link&apos;;
enabled := true;
if (parameter(linkParameterName) is Defined ) then 
	enabled := Parameter(linkParameterName) eq &apos;&apos;;
	if (not enabled) then
		 SetDisabledDetails(&apos;This parameter is enabled only when Link is not set&apos;);
	End if;
End if;
enabled;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Chart Options Links and Actions Link Options" type="LinkOptionsType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Specifies how to display pages linked to the reporting element. 
Applies only if &lt;i&gt;Link&lt;/i&gt; or &lt;i&gt;Protocol Link&lt;/i&gt; are set for the component.</sci:help>
					</sci:arg>
					<sci:arg name="Chart Options Links and Actions Link Target" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>Sets this element as the destination for links from other elements in the report. The value of &lt;i&gt;Link Target&lt;/i&gt; can be text or a property name, and should match the value of &lt;i&gt;Link&lt;/i&gt; in another report component.  In the resulting report, when the element with &lt;i&gt;Link&lt;/i&gt; is clicked, the element with the matching &lt;i&gt;Link Target&lt;/i&gt; is brought to the top of the report page.</sci:help>
					</sci:arg>
					<sci:arg name="Chart Options Links and Actions HTML Attributes" type="HTMLAttributesType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>Defines attributes for the reporting element. These attributes can be used by JavaScript code that is &lt;a href=&quot;javascript:DoLink(&apos;{262A8E5D-BB8E-4dc4-A6F5-A61FC6047EC8}&apos;)&quot;&gt;embedded in&lt;/a&gt; or &lt;a href=&quot;javascript:DoLink(&apos;{6DF7D4FA-28BC-453b-8882-DE55C7CFFBF9}&apos;)&quot;&gt;included by&lt;/a&gt; the HTML report. One very common attribute is &quot;id&quot; which allows access to the element using the document.getElementById(id) method. Event handlers such as &quot;onclick&quot; and &quot;onmouseover&quot; are also common attributes.</sci:help>
					</sci:arg>
					<sci:arg name="Chart Options Links and Actions Data Connector" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>Parameters related to the Data Connector interactivity model.</sci:help>
						<sci:member>Chart Options Links and Actions Data Connector Subscriber Event Handling</sci:member>
						<sci:member>Chart Options Links and Actions Data Connector Publisher Subscriber Model</sci:member>
					</sci:arg>
					<sci:arg name="Chart Options Links and Actions Data Connector Publisher Subscriber Model" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>Whether the component is a publisher, subscriber or both. Setting to &apos;None&apos; bypasses any Data Connector node.</sci:help>
						<sci:legalval selected="true">Publisher and Subscriber</sci:legalval>
						<sci:legalval>Publisher</sci:legalval>
						<sci:legalval>Subscriber</sci:legalval>
						<sci:legalval>None</sci:legalval>
					</sci:arg>
					<sci:arg name="Chart Options Links and Actions Data Connector Subscriber Event Handling" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>&lt;p&gt;Setting the on subscription event handling method.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;The publisher component always highlights.</sci:help>
						<sci:enabledscript>ModelParameterName := StrReplace(ParameterName(), &quot;Subscriber Event Handling&quot;, &quot;Publisher Subscriber Model&quot;);
enabled := Parameter(ModelParameterName) not EQ &apos;Publisher&apos; AND Parameter(ModelParameterName) not EQ &apos;None&apos;;
if (not enabled) then
     SetDisabledDetails(&apos;This parameter is not enabled when the Publisher Subscriber Model is set to &quot;Publisher&quot; only or &quot;None&quot;&apos;);
End if;
enabled;</sci:enabledscript>
						<sci:legalval selected="true">Highlight</sci:legalval>
						<sci:legalval>Filter</sci:legalval>
						<sci:legalval>Reverse Filter</sci:legalval>
					</sci:arg>
					<sci:arg name="X Axis" type="GroupType" required="false" visibility="visible" multi="false">
						<sci:help>Attributes of the X axis.</sci:help>
						<sci:member>X Axis Minimum</sci:member>
						<sci:member>X Axis Maximum</sci:member>
						<sci:member>X Axis Scaling</sci:member>
						<sci:member>X Axis Label</sci:member>
						<sci:member>X Axis Label Format</sci:member>
						<sci:member>X Axis Display Options</sci:member>
						<sci:member>X Axis Line Color</sci:member>
						<sci:member>X Axis Tickmark Options</sci:member>
					</sci:arg>
					<sci:arg name="X Axis Minimum" type="DoubleType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Optional value for the lower bound of the X axis.  If this is not specified, the axis range will be determined automatically.</sci:help>
						<sci:validscript>maxParameterName := StrReplace(ParameterName(), &quot;Minimum&quot;, &quot;Maximum&quot;);
valid := true;
minValue := Parameter();
if (minValue ne &apos;&apos; and IsNumber(minValue)) then
	maxValue := Parameter(maxParameterName);
	if (maxValue ne &apos;&apos; and IsNumber(maxValue)) then 
		valid := maxValue &gt; minValue;
		invalidMessage := &apos;Minimum should be less than Maximum&apos;;
	end if;
	
	if (valid) then 
		scalingParameterName := StrReplace(ParameterName(), &quot;Minimum&quot;, &quot;Scaling&quot;);
		if Parameter(scalingParameterName) Is Defined and FindSubstring(Parameter(scalingParameterName), &apos;Logarithmic&apos;) &gt; 0 then
				valid := minValue &gt; 0;
				invalidMessage := &apos;This parameter should be greater than 0 for logarithmic scaling&apos;;
		end if;			
	end if;
end if;	
	
if (not valid) then 
	SetInvalidDetails(invalidMessage);
end if;

valid;</sci:validscript>
					</sci:arg>
					<sci:arg name="X Axis Maximum" type="DoubleType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Optional value for the upper bound of the X axis.  If this is not specified, the axis range will be determined automatically.</sci:help>
						<sci:validscript>minParameterName := StrReplace(ParameterName(), &quot;Maximum&quot;, &quot;Minimum&quot;);
valid := true;
maxValue := Parameter();
if (maxValue ne &apos;&apos; and IsNumber(maxValue)) then
	minValue := Parameter(minParameterName);
	if(minValue ne &apos;&apos; and IsNumber(minValue)) then 
		valid := minValue &lt; maxValue;
		invalidMessage := &apos;Minimum should be less than Maximum&apos;;
	end if;

	if (valid) then 
		scalingParameterName := StrReplace(ParameterName(), &quot;Maximum&quot;, &quot;Scaling&quot;);
		if Parameter(scalingParameterName) Is Defined and FindSubstring(Parameter(scalingParameterName), &apos;Logarithmic&apos;) &gt; 0 then
				valid := maxValue &gt; 0;
				invalidMessage := &apos;This parameter should be greater than 0 for logarithmic scaling&apos;;
		end if;		
	end if;	
end if;	
	
if (not valid) then 
		SetInvalidDetails(invalidMessage);
end if;

valid;</sci:validscript>
					</sci:arg>
					<sci:arg name="X Axis Scaling" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Scaling for X axis.</sci:help>
						<sci:legalval selected="true">Linear</sci:legalval>
						<sci:legalval>Logarithmic - base 10</sci:legalval>
						<sci:legalval>Logarithmic - natural</sci:legalval>
					</sci:arg>
					<sci:arg name="X Axis Label" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Label for the X axis.</sci:help>
					</sci:arg>
					<sci:arg name="X Axis Label Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Formatting to be applied to this reporting element.&lt;/p&gt;
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Font Size: Sets font size&lt;/li&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:value>700</sci:value>
						<sci:value>Style</sci:value>
						<sci:value>Chart.Axis Label</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="X Axis Display Options" type="StringType" required="false" visibility="visible" multi="true" uimpl="false">
						<sci:help>&lt;p&gt;Display options for the X-Axis&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt; Show Axis Line - Show/Hide the axis line.&lt;/li&gt;
&lt;li&gt; Show Axis Label - Show/Hide the axis label.&lt;/li&gt;
&lt;li&gt; Show Tickmark Labels - Show/Hide the tickmark labels.&lt;/li&gt;
&lt;ul&gt;</sci:help>
						<sci:legalval selected="true">Show Axis Line</sci:legalval>
						<sci:legalval selected="true">Show Axis Label</sci:legalval>
						<sci:legalval selected="true">Show Tickmark Labels</sci:legalval>
					</sci:arg>
					<sci:arg name="X Axis Tickmark Options" type="GroupType" required="false" visibility="visible" multi="false">
						<sci:help>Options for &lt;i&gt;X Axis&lt;/i&gt; tickmark labels.</sci:help>
						<sci:member>X Axis Tickmark Options Tickmark Label Type</sci:member>
						<sci:member>X Axis Tickmark Options Tickmark Label Format</sci:member>
						<sci:member>X Axis Tickmark Options Tickmark Label Orientation</sci:member>
						<sci:member>X Axis Tickmark Options Major Tickmark Start Value</sci:member>
						<sci:member>X Axis Tickmark Options Major Tickmark Spacing</sci:member>
					</sci:arg>
					<sci:arg name="X Axis Tickmark Options Major Tickmark Start Value" type="ExpressionType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;The starting value for major tickmarks.</sci:help>
					</sci:arg>
					<sci:arg name="X Axis Tickmark Options Major Tickmark Spacing" type="DoubleType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Spacing of major tickmarks.&lt;/p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;This option currently does not apply to DateTime type tickmarks.
</sci:help>
					</sci:arg>
					<sci:arg name="X Axis Tickmark Options Tickmark Label Type" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>&lt;p&gt;The data type of the axis tickmark labels.
</sci:help>
						<sci:legalval selected="true">Based on Input Data</sci:legalval>
						<sci:legalval>Double</sci:legalval>
						<sci:legalval>Integer</sci:legalval>
						<sci:legalval>DateTime</sci:legalval>
						<sci:legalval>Date</sci:legalval>
					</sci:arg>
					<sci:arg name="X Axis Tickmark Options Tickmark Label Format" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>&lt;p&gt;Selects the format of the tickmark labels displayed on this axis. The legal values are dependent on &apos;X Axis Tickmark Options Tickmark Label Type&apos;. The default value is dependent on the label type, as indicated below.
&lt;/p&gt;
&lt;p&gt;The separator characters that appear in numbers are different around 
the world. The default number formatting will pick separators that are 
appropriate for the server&apos;s geographic location. In most places, a 
comma will be used to separate thousands in integers (e.g., 1,234) and a 
period used to separate whole and fractional parts of floating point 
numbers (e.g., 1.234). In Germany, these symbols are reversed. The 
separators can also be set by selecting the appropriate menu entry.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Integer:
&lt;ul&gt;
&lt;li&gt;Default - use the thousands separator appropriate for the geographic location&lt;/li&gt;
&lt;li&gt;1234 - AS IS&lt;/li&gt;
&lt;li&gt;1,234 - use a comma as a thousands separator&lt;/li&gt;
&lt;li&gt;1.234 - use a period as a thousands separator&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Double: 
&lt;ul&gt;
&lt;li&gt;Default - use a decimal point appropriate for the geographic location and output up to 8 digits after the point&lt;/li&gt;
&lt;li&gt;1.2 - use a period as a decimal point and output up to 1 digit after the point&lt;/li&gt;
&lt;li&gt;1.23 - use a period as a decimal point and output up to 2 digit after the point&lt;/li&gt;
&lt;li&gt;1.234 - use a period as a decimal point and output up to 3 digit after the point&lt;/li&gt;
&lt;li&gt;1.2345 - use a period as a decimal point and output up to 4 digit after the point&lt;/li&gt;
&lt;li&gt;1,2 - use a comma as a decimal point and output up to 1 digit after the point&lt;/li&gt;
&lt;li&gt;1,23 - use a comma as a decimal point and output up to 2 digit after the point&lt;/li&gt;
&lt;li&gt;1,234 - use a comma as a decimal point and output up to 3 digit after the point&lt;/li&gt;
&lt;li&gt;1,2345 - use a comma as a decimal point and output up to 4 digit after the point&lt;/li&gt;
&lt;/ul&gt;
Note that in all of the above cases, the tickmarks label precision is based on the precision of the interval between tickmarks.  For example, with a format of 1.234 and a tickmarks interval of 0.5, all tickmark values appear with a single decimal digit.  Trailing zeros after the decimal point are always omitted, irrespective of the selected format.
&lt;/li&gt;
&lt;li&gt;DateTime:
&lt;ul&gt;
&lt;li&gt;Default - use the date and time format appropriate for the geographic location&lt;/li&gt;
&lt;li&gt;06/13/1960&lt;/li&gt;
&lt;li&gt;06/13/1960 13:23&lt;/li&gt;
&lt;li&gt;06/13/1960 13:23:45&lt;/li&gt;
&lt;li&gt;06/13/1960 1:23 PM (default)&lt;/li&gt;
&lt;li&gt;06/13/1960 1:23:45 PM&lt;/li&gt;
&lt;li&gt;13/06/1960&lt;/li&gt;
&lt;li&gt;13/06/1960 13:23&lt;/li&gt;
&lt;li&gt;13/06/1960 13:23:45&lt;/li&gt;
&lt;li&gt;13/06/1960 1:23 PM&lt;/li&gt;
&lt;li&gt;13/06/1960 1:23:45 PM&lt;/li&gt;
&lt;li&gt;06/13/60&lt;/li&gt;
&lt;li&gt;06/13/60 13:23&lt;/li&gt;
&lt;li&gt;06/13/60 13:23:45&lt;/li&gt;
&lt;li&gt;06/13/60 1:23 PM&lt;/li&gt;
&lt;li&gt;06/13/60 1:23:45 PM&lt;/li&gt;
&lt;li&gt;13/06/60&lt;/li&gt;
&lt;li&gt;13/06/60 13:23&lt;/li&gt;
&lt;li&gt;13/06/60 13:23:45&lt;/li&gt;
&lt;li&gt;13/06/60 1:23 PM&lt;/li&gt;
&lt;li&gt;13/06/60 1:23:45 PM&lt;/li&gt;
&lt;li&gt;June 13, 1960&lt;/li&gt;
&lt;li&gt;June 13, 1960 13:23&lt;/li&gt;
&lt;li&gt;June 13, 1960 13:23:45&lt;/li&gt;
&lt;li&gt;June 13, 1960 1:23 PM&lt;/li&gt;
&lt;li&gt;June 13, 1960 1:23:45 PM&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Date:
&lt;ul&gt;
&lt;li&gt;Default - use the date format appropriate for the geographic location&lt;/li&gt;
&lt;li&gt;06/13/1960&lt;/li&gt;
&lt;li&gt;13/06/1960&lt;/li&gt;
&lt;li&gt;06/13/60&lt;/li&gt;
&lt;li&gt;13/06/60&lt;/li&gt;
&lt;li&gt;June 13, 1960&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:enabledscript>ValuesTypeParameterName := StrReplace(ParameterName(), &quot;Tickmark Label Format&quot;, &quot;Tickmark Label Type&quot;);
enabled := Parameter(ValuesTypeParameterName) NE &apos;Based on Input Data&apos;;
if (not enabled) then
     SetDisabledDetails(&apos;This parameter is not enabled when Label Type is set to &quot;Based on Input Data&quot;&apos;);
End if;
enabled;</sci:enabledscript>
						<sci:legalvalscript>ValuesTypeParameterName := StrReplace(ParameterName(), &quot;Format&quot;, &quot;Type&quot;);
if (Parameter(ValuesTypeParameterName) eq &apos;Integer&apos;) then
	 resize(legalvalues, 4);
     legalvalues[2] := &apos;1234&apos;;
	 legalvalues[3] := &apos;1,234&apos;;
	 legalvalues[4] := &apos;1.234&apos;;
elsif (Parameter(ValuesTypeParameterName) eq &apos;Double&apos;) then
	 resize(legalvalues, 9);
     legalvalues[2] := &apos;1.2&apos;;
     legalvalues[3] := &apos;1.23&apos;;
     legalvalues[4] := &apos;1.234&apos;;
     legalvalues[5] := &apos;1.2345&apos;;
     legalvalues[6] := &apos;1,2&apos;;
     legalvalues[7] := &apos;1,23&apos;;
     legalvalues[8] := &apos;1,234&apos;;
     legalvalues[9] := &apos;1,2345&apos;;
elsif (Parameter(ValuesTypeParameterName) eq &apos;DateTime&apos;) then
	 resize(legalvalues, 26);
	legalvalues[2] := &apos;06/13/1960&apos;; 
	legalvalues[3] := &apos;06/13/1960 13:23&apos;;
	legalvalues[4] := &apos;06/13/1960 13:23:45&apos;;
	legalvalues[5] := &apos;06/13/1960 1:23 PM&apos;;
	legalvalues[6] := &apos;06/13/1960 1:23:45 PM&apos;;
	legalvalues[7] := &apos;13/06/1960&apos;;
	legalvalues[8] := &apos;13/06/1960 13:23&apos;;
	legalvalues[9] := &apos;13/06/1960 13:23:45&apos;;
	legalvalues[10] := &apos;13/06/1960 1:23 PM&apos;;
	legalvalues[11] := &apos;13/06/1960 1:23:45 PM&apos;;
	legalvalues[12] := &apos;06/13/60&apos;;
	legalvalues[13] := &apos;06/13/60 13:23&apos;;
	legalvalues[14] := &apos;06/13/60 13:23:45&apos;;
	legalvalues[15] := &apos;06/13/60 1:23 PM&apos;;
	legalvalues[16] := &apos;06/13/60 1:23:45 PM&apos;;
	legalvalues[17] := &apos;13/06/60&apos;;
	legalvalues[18] := &apos;13/06/60 13:23&apos;;
	legalvalues[19] := &apos;13/06/60 13:23:45&apos;;
	legalvalues[20] := &apos;13/06/60 1:23 PM&apos;;
	legalvalues[21] := &apos;13/06/60 1:23:45 PM&apos;;
	legalvalues[22] := &apos;June 13, 1960&apos;; 
	legalvalues[23] := &apos;June 13, 1960 13:23&apos;;
	legalvalues[24] := &apos;June 13, 1960 13:23:45&apos;;
	legalvalues[25] := &apos;June 13, 1960 1:23 PM&apos;;
	legalvalues[26] := &apos;June 13, 1960 1:23:45 PM&apos;;
elsif (Parameter(ValuesTypeParameterName) eq &apos;Date&apos;) then
	 resize(legalvalues, 6);
	legalvalues[2] := &apos;06/13/1960&apos;; 
	legalvalues[3] := &apos;13/06/1960&apos;;
	legalvalues[4] := &apos;06/13/60&apos;;
	legalvalues[5] := &apos;13/06/60&apos;;
	legalvalues[6] := &apos;June 13, 1960&apos;; 
else
	resize(legalvalues,1);
end if;
legalvalues[1] := &apos;Default&apos;;
SetLegalValues(legalvalues);</sci:legalvalscript>
						<sci:legalval selected="true">Default</sci:legalval>
					</sci:arg>
					<sci:arg name="X Axis Tickmark Options Tickmark Label Orientation" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Specifies the orientation for tickmark labels.</sci:help>
						<sci:legalval selected="true">Horizontal</sci:legalval>
						<sci:legalval>Vertical</sci:legalval>
						<sci:legalval>Diagonal</sci:legalval>
					</sci:arg>
					<sci:arg name="X Axis Line Color" type="ColorType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Specifies the color of the X axis line.</sci:help>
					</sci:arg>
					<sci:arg name="Y Axis" type="GroupType" required="false" visibility="visible" multi="false">
						<sci:help>Attributes for the left Y axis</sci:help>
						<sci:member>Y Axis Minimum</sci:member>
						<sci:member>Y Axis Maximum</sci:member>
						<sci:member>Y Axis Scaling</sci:member>
						<sci:member>Y Axis Label</sci:member>
						<sci:member>Y Axis Label Format</sci:member>
						<sci:member>Y Axis Display Options</sci:member>
						<sci:member>Y Axis Line Color</sci:member>
						<sci:member>Y Axis Tickmark Options</sci:member>
					</sci:arg>
					<sci:arg name="Y Axis Minimum" type="DoubleType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Optional value for the lower bound of the Y axis.  If this is not specified, the axis range will be determined automatically.</sci:help>
						<sci:validscript>maxParameterName := StrReplace(ParameterName(), &quot;Minimum&quot;, &quot;Maximum&quot;);
valid := true;
minValue := Parameter();
if (minValue ne &apos;&apos; and IsNumber(minValue)) then
	maxValue := Parameter(maxParameterName);
	if (maxValue ne &apos;&apos; and IsNumber(maxValue)) then 
		valid := maxValue &gt; minValue;
		invalidMessage := &apos;Minimum should be less than Maximum&apos;;
	end if;
	
	if (valid) then 
		scalingParameterName := StrReplace(ParameterName(), &quot;Minimum&quot;, &quot;Scaling&quot;);
		if Parameter(scalingParameterName) Is Defined and FindSubstring(Parameter(scalingParameterName), &apos;Logarithmic&apos;) &gt; 0 then
				valid := minValue &gt; 0;
				invalidMessage := &apos;This parameter should be greater than 0 for logarithmic scaling&apos;;
		end if;			
	end if;
end if;	
	
if (not valid) then 
	SetInvalidDetails(invalidMessage);
end if;

valid;</sci:validscript>
					</sci:arg>
					<sci:arg name="Y Axis Maximum" type="DoubleType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Optional value for the upper bound of the Y axis.  If this is not specified, the axis range will be determined automatically.</sci:help>
						<sci:validscript>minParameterName := StrReplace(ParameterName(), &quot;Maximum&quot;, &quot;Minimum&quot;);
valid := true;
maxValue := Parameter();
if (maxValue ne &apos;&apos; and IsNumber(maxValue)) then
	minValue := Parameter(minParameterName);
	if(minValue ne &apos;&apos; and IsNumber(minValue)) then 
		valid := minValue &lt; maxValue;
		invalidMessage := &apos;Minimum should be less than Maximum&apos;;
	end if;

	if (valid) then 
		scalingParameterName := StrReplace(ParameterName(), &quot;Maximum&quot;, &quot;Scaling&quot;);
		if Parameter(scalingParameterName) Is Defined and FindSubstring(Parameter(scalingParameterName), &apos;Logarithmic&apos;) &gt; 0 then
				valid := maxValue &gt; 0;
				invalidMessage := &apos;This parameter should be greater than 0 for logarithmic scaling&apos;;
		end if;		
	end if;	
end if;	
	
if (not valid) then 
		SetInvalidDetails(invalidMessage);
end if;

valid;</sci:validscript>
					</sci:arg>
					<sci:arg name="Y Axis Scaling" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Scaling for Y axis.</sci:help>
						<sci:legalval selected="true">Linear</sci:legalval>
						<sci:legalval>Logarithmic - base 10</sci:legalval>
						<sci:legalval>Logarithmic - natural</sci:legalval>
					</sci:arg>
					<sci:arg name="Y Axis Label" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Label for the Y axis.</sci:help>
					</sci:arg>
					<sci:arg name="Y Axis Label Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Formatting to be applied to this reporting element.&lt;/p&gt;
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Font Size: Sets font size&lt;/li&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:value>700</sci:value>
						<sci:value>Style</sci:value>
						<sci:value>Chart.Axis Label</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="Y Axis Display Options" type="StringType" required="false" visibility="visible" multi="true" uimpl="false">
						<sci:help>&lt;p&gt;Display options for the Y-Axis&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt; Show Axis Line - Show/Hide the axis line.&lt;/li&gt;
&lt;li&gt; Show Axis Label - Show/Hide the axis label.&lt;/li&gt;
&lt;li&gt; Show Tickmark Labels - Show/Hide the tickmark labels.&lt;/li&gt;
&lt;ul&gt;</sci:help>
						<sci:legalval selected="true">Show Axis Line</sci:legalval>
						<sci:legalval selected="true">Show Axis Label</sci:legalval>
						<sci:legalval selected="true">Show Tickmark Labels</sci:legalval>
					</sci:arg>
					<sci:arg name="Y Axis Tickmark Options" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Options for &lt;i&gt;Y Axis&lt;/i&gt; tickmark labels.</sci:help>
						<sci:member>Y Axis Tickmark Options Major Tickmark Start Value</sci:member>
						<sci:member>Y Axis Tickmark Options Major Tickmark Spacing</sci:member>
						<sci:member>Y Axis Tickmark Options Tickmark Label Orientation</sci:member>
						<sci:member>Y Axis Tickmark Options Tickmark Label Type</sci:member>
						<sci:member>Y Axis Tickmark Options Tickmark Label Format</sci:member>
					</sci:arg>
					<sci:arg name="Y Axis Tickmark Options Major Tickmark Start Value" type="ExpressionType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>&lt;p&gt;The starting value for major tickmarks.</sci:help>
					</sci:arg>
					<sci:arg name="Y Axis Tickmark Options Major Tickmark Spacing" type="DoubleType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>&lt;p&gt;Spacing of major tickmarks.</sci:help>
					</sci:arg>
					<sci:arg name="Y Axis Tickmark Options Tickmark Label Type" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>&lt;p&gt;The data type of the axis tickmark labels.
</sci:help>
						<sci:legalval selected="true">Based on Input Data</sci:legalval>
						<sci:legalval>Double</sci:legalval>
						<sci:legalval>Integer</sci:legalval>
						<sci:legalval>DateTime</sci:legalval>
						<sci:legalval>Date</sci:legalval>
					</sci:arg>
					<sci:arg name="Y Axis Tickmark Options Tickmark Label Format" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>&lt;p&gt;Selects the format of the tickmark labels displayed on this axis. The legal values are dependent on &apos;Y Axis Tickmark Options Tickmark Label Type&apos;. The default value is dependent on the label type, as indicated below.
&lt;/p&gt;
&lt;p&gt;The separator characters that appear in numbers are different around 
the world. The default number formatting will pick separators that are 
appropriate for the server&apos;s geographic location. In most places, a 
comma will be used to separate thousands in integers (e.g., 1,234) and a 
period used to separate whole and fractional parts of floating point 
numbers (e.g., 1.234). In Germany, these symbols are reversed. The 
separators can also be set by selecting the appropriate menu entry.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Integer:
&lt;ul&gt;
&lt;li&gt;Default - use the thousands separator appropriate for the geographic location&lt;/li&gt;
&lt;li&gt;1234 - AS IS&lt;/li&gt;
&lt;li&gt;1,234 - use a comma as a thousands separator&lt;/li&gt;
&lt;li&gt;1.234 - use a period as a thousands separator&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Double: 
&lt;ul&gt;
&lt;li&gt;Default - use a decimal point appropriate for the geographic location and output up to 8 digits after the point&lt;/li&gt;
&lt;li&gt;1.2 - use a period as a decimal point and output up to 1 digit after the point&lt;/li&gt;
&lt;li&gt;1.23 - use a period as a decimal point and output up to 2 digit after the point&lt;/li&gt;
&lt;li&gt;1.234 - use a period as a decimal point and output up to 3 digit after the point&lt;/li&gt;
&lt;li&gt;1.2345 - use a period as a decimal point and output up to 4 digit after the point&lt;/li&gt;
&lt;li&gt;1,2 - use a comma as a decimal point and output up to 1 digit after the point&lt;/li&gt;
&lt;li&gt;1,23 - use a comma as a decimal point and output up to 2 digit after the point&lt;/li&gt;
&lt;li&gt;1,234 - use a comma as a decimal point and output up to 3 digit after the point&lt;/li&gt;
&lt;li&gt;1,2345 - use a comma as a decimal point and output up to 4 digit after the point&lt;/li&gt;
&lt;/ul&gt;
Note that in all of the above cases, the tickmarks label precision is based on the precision of the interval between tickmarks.  For example, with a format of 1.234 and a tickmarks interval of 0.5, all tickmark values appear with a single decimal digit.  Trailing zeros after the decimal point are always omitted, irrespective of the selected format.
&lt;/li&gt;
&lt;li&gt;DateTime:
&lt;ul&gt;
&lt;li&gt;Default - use the date and time format appropriate for the geographic location&lt;/li&gt;
&lt;li&gt;06/13/1960&lt;/li&gt;
&lt;li&gt;06/13/1960 13:23&lt;/li&gt;
&lt;li&gt;06/13/1960 13:23:45&lt;/li&gt;
&lt;li&gt;06/13/1960 1:23 PM (default)&lt;/li&gt;
&lt;li&gt;06/13/1960 1:23:45 PM&lt;/li&gt;
&lt;li&gt;13/06/1960&lt;/li&gt;
&lt;li&gt;13/06/1960 13:23&lt;/li&gt;
&lt;li&gt;13/06/1960 13:23:45&lt;/li&gt;
&lt;li&gt;13/06/1960 1:23 PM&lt;/li&gt;
&lt;li&gt;13/06/1960 1:23:45 PM&lt;/li&gt;
&lt;li&gt;06/13/60&lt;/li&gt;
&lt;li&gt;06/13/60 13:23&lt;/li&gt;
&lt;li&gt;06/13/60 13:23:45&lt;/li&gt;
&lt;li&gt;06/13/60 1:23 PM&lt;/li&gt;
&lt;li&gt;06/13/60 1:23:45 PM&lt;/li&gt;
&lt;li&gt;13/06/60&lt;/li&gt;
&lt;li&gt;13/06/60 13:23&lt;/li&gt;
&lt;li&gt;13/06/60 13:23:45&lt;/li&gt;
&lt;li&gt;13/06/60 1:23 PM&lt;/li&gt;
&lt;li&gt;13/06/60 1:23:45 PM&lt;/li&gt;
&lt;li&gt;June 13, 1960&lt;/li&gt;
&lt;li&gt;June 13, 1960 13:23&lt;/li&gt;
&lt;li&gt;June 13, 1960 13:23:45&lt;/li&gt;
&lt;li&gt;June 13, 1960 1:23 PM&lt;/li&gt;
&lt;li&gt;June 13, 1960 1:23:45 PM&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Date:
&lt;ul&gt;
&lt;li&gt;Default - use the date format appropriate for the geographic location&lt;/li&gt;
&lt;li&gt;06/13/1960&lt;/li&gt;
&lt;li&gt;13/06/1960&lt;/li&gt;
&lt;li&gt;06/13/60&lt;/li&gt;
&lt;li&gt;13/06/60&lt;/li&gt;
&lt;li&gt;June 13, 1960&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:enabledscript>ValuesTypeParameterName := StrReplace(ParameterName(), &quot;Tickmark Label Format&quot;, &quot;Tickmark Label Type&quot;);
enabled := Parameter(ValuesTypeParameterName) NE &apos;Based on Input Data&apos;;
if (not enabled) then
     SetDisabledDetails(&apos;This parameter is not enabled when Label Type is set to &quot;Based on Input Data&quot;&apos;);
End if;
enabled;</sci:enabledscript>
						<sci:legalvalscript>ValuesTypeParameterName := StrReplace(ParameterName(), &quot;Format&quot;, &quot;Type&quot;);
if (Parameter(ValuesTypeParameterName) eq &apos;Integer&apos;) then
	 resize(legalvalues, 4);
     legalvalues[2] := &apos;1234&apos;;
	 legalvalues[3] := &apos;1,234&apos;;
	 legalvalues[4] := &apos;1.234&apos;;
elsif (Parameter(ValuesTypeParameterName) eq &apos;Double&apos;) then
	 resize(legalvalues, 9);
     legalvalues[2] := &apos;1.2&apos;;
     legalvalues[3] := &apos;1.23&apos;;
     legalvalues[4] := &apos;1.234&apos;;
     legalvalues[5] := &apos;1.2345&apos;;
     legalvalues[6] := &apos;1,2&apos;;
     legalvalues[7] := &apos;1,23&apos;;
     legalvalues[8] := &apos;1,234&apos;;
     legalvalues[9] := &apos;1,2345&apos;;
elsif (Parameter(ValuesTypeParameterName) eq &apos;DateTime&apos;) then
	 resize(legalvalues, 26);
	legalvalues[2] := &apos;06/13/1960&apos;; 
	legalvalues[3] := &apos;06/13/1960 13:23&apos;;
	legalvalues[4] := &apos;06/13/1960 13:23:45&apos;;
	legalvalues[5] := &apos;06/13/1960 1:23 PM&apos;;
	legalvalues[6] := &apos;06/13/1960 1:23:45 PM&apos;;
	legalvalues[7] := &apos;13/06/1960&apos;;
	legalvalues[8] := &apos;13/06/1960 13:23&apos;;
	legalvalues[9] := &apos;13/06/1960 13:23:45&apos;;
	legalvalues[10] := &apos;13/06/1960 1:23 PM&apos;;
	legalvalues[11] := &apos;13/06/1960 1:23:45 PM&apos;;
	legalvalues[12] := &apos;06/13/60&apos;;
	legalvalues[13] := &apos;06/13/60 13:23&apos;;
	legalvalues[14] := &apos;06/13/60 13:23:45&apos;;
	legalvalues[15] := &apos;06/13/60 1:23 PM&apos;;
	legalvalues[16] := &apos;06/13/60 1:23:45 PM&apos;;
	legalvalues[17] := &apos;13/06/60&apos;;
	legalvalues[18] := &apos;13/06/60 13:23&apos;;
	legalvalues[19] := &apos;13/06/60 13:23:45&apos;;
	legalvalues[20] := &apos;13/06/60 1:23 PM&apos;;
	legalvalues[21] := &apos;13/06/60 1:23:45 PM&apos;;
	legalvalues[22] := &apos;June 13, 1960&apos;; 
	legalvalues[23] := &apos;June 13, 1960 13:23&apos;;
	legalvalues[24] := &apos;June 13, 1960 13:23:45&apos;;
	legalvalues[25] := &apos;June 13, 1960 1:23 PM&apos;;
	legalvalues[26] := &apos;June 13, 1960 1:23:45 PM&apos;;
elsif (Parameter(ValuesTypeParameterName) eq &apos;Date&apos;) then
	 resize(legalvalues, 6);
	legalvalues[2] := &apos;06/13/1960&apos;; 
	legalvalues[3] := &apos;13/06/1960&apos;;
	legalvalues[4] := &apos;06/13/60&apos;;
	legalvalues[5] := &apos;13/06/60&apos;;
	legalvalues[6] := &apos;June 13, 1960&apos;; 
else
	resize(legalvalues,1);
end if;
legalvalues[1] := &apos;Default&apos;;
SetLegalValues(legalvalues);</sci:legalvalscript>
						<sci:legalval selected="true">Default</sci:legalval>
					</sci:arg>
					<sci:arg name="Y Axis Tickmark Options Tickmark Label Orientation" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>&lt;p&gt;Specifies the orientation for tickmark labels.</sci:help>
						<sci:legalval selected="true">Horizontal</sci:legalval>
						<sci:legalval>Vertical</sci:legalval>
						<sci:legalval>Diagonal</sci:legalval>
					</sci:arg>
					<sci:arg name="Y Axis Line Color" type="ColorType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Specifies the color of the Y axis line.</sci:help>
					</sci:arg>
					<sci:arg name="Second Y Axis" type="GroupType" required="false" visibility="visible" multi="false">
						<sci:help>Attributes for the right Y axis</sci:help>
						<sci:member>Second Y Axis Minimum</sci:member>
						<sci:member>Second Y Axis Maximum</sci:member>
						<sci:member>Second Y Axis Scaling</sci:member>
						<sci:member>Second Y Axis Label</sci:member>
						<sci:member>Second Y Axis Label Format</sci:member>
						<sci:member>Second Y Axis Display Options</sci:member>
						<sci:member>Second Y Axis Line Color</sci:member>
						<sci:member>Second Y Axis Tickmark Options</sci:member>
					</sci:arg>
					<sci:arg name="Second Y Axis Minimum" type="DoubleType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Optional value for the lower bound of the right Y axis.  If this is not specified, the axis range will be determined automatically.</sci:help>
						<sci:validscript>maxParameterName := StrReplace(ParameterName(), &quot;Minimum&quot;, &quot;Maximum&quot;);
valid := true;
minValue := Parameter();
if (minValue ne &apos;&apos; and IsNumber(minValue)) then
	maxValue := Parameter(maxParameterName);
	if (maxValue ne &apos;&apos; and IsNumber(maxValue)) then 
		valid := maxValue &gt; minValue;
		invalidMessage := &apos;Minimum should be less than Maximum&apos;;
	end if;
	
	if (valid) then 
		scalingParameterName := StrReplace(ParameterName(), &quot;Minimum&quot;, &quot;Scaling&quot;);
		if Parameter(scalingParameterName) Is Defined and FindSubstring(Parameter(scalingParameterName), &apos;Logarithmic&apos;) &gt; 0 then
				valid := minValue &gt; 0;
				invalidMessage := &apos;This parameter should be greater than 0 for logarithmic scaling&apos;;
		end if;			
	end if;
end if;	
	
if (not valid) then 
	SetInvalidDetails(invalidMessage);
end if;

valid;</sci:validscript>
					</sci:arg>
					<sci:arg name="Second Y Axis Maximum" type="DoubleType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Optional value for the upper bound of the right Y axis. If this is not specified, the axis range will be determined automatically.</sci:help>
						<sci:validscript>minParameterName := StrReplace(ParameterName(), &quot;Maximum&quot;, &quot;Minimum&quot;);
valid := true;
maxValue := Parameter();
if (maxValue ne &apos;&apos; and IsNumber(maxValue)) then
	minValue := Parameter(minParameterName);
	if(minValue ne &apos;&apos; and IsNumber(minValue)) then 
		valid := minValue &lt; maxValue;
		invalidMessage := &apos;Minimum should be less than Maximum&apos;;
	end if;

	if (valid) then 
		scalingParameterName := StrReplace(ParameterName(), &quot;Maximum&quot;, &quot;Scaling&quot;);
		if Parameter(scalingParameterName) Is Defined and FindSubstring(Parameter(scalingParameterName), &apos;Logarithmic&apos;) &gt; 0 then
				valid := maxValue &gt; 0;
				invalidMessage := &apos;This parameter should be greater than 0 for logarithmic scaling&apos;;
		end if;		
	end if;	
end if;	
	
if (not valid) then 
		SetInvalidDetails(invalidMessage);
end if;

valid;</sci:validscript>
					</sci:arg>
					<sci:arg name="Second Y Axis Scaling" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Scaling for the right Y axis.</sci:help>
						<sci:legalval selected="true">Linear</sci:legalval>
						<sci:legalval>Logarithmic - base 10</sci:legalval>
						<sci:legalval>Logarithmic - natural</sci:legalval>
					</sci:arg>
					<sci:arg name="Second Y Axis Label" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Label for the right Y axis.</sci:help>
					</sci:arg>
					<sci:arg name="Second Y Axis Label Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Formatting to be applied to this reporting element.&lt;/p&gt;
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Font Size: Sets font size&lt;/li&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:value>700</sci:value>
						<sci:value>Style</sci:value>
						<sci:value>Chart.Axis Label</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="Second Y Axis Display Options" type="StringType" required="false" visibility="visible" multi="true" uimpl="false">
						<sci:help>&lt;p&gt;Display options for the Second Y-Axis&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt; Show Axis Line - Show/Hide the axis line.&lt;/li&gt;
&lt;li&gt; Show Axis Label - Show/Hide the axis label.&lt;/li&gt;
&lt;li&gt; Show Tickmark Labels - Show/Hide the tickmark labels.&lt;/li&gt;
&lt;ul&gt;</sci:help>
						<sci:legalval selected="true">Show Axis Line</sci:legalval>
						<sci:legalval selected="true">Show Axis Label</sci:legalval>
						<sci:legalval selected="true">Show Tickmark Labels</sci:legalval>
					</sci:arg>
					<sci:arg name="Second Y Axis Tickmark Options" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Options for &lt;i&gt;Second Y Axis&lt;/i&gt; tickmark labels.</sci:help>
						<sci:member>Second Y Axis Tickmark Options Major Tickmark Start Value</sci:member>
						<sci:member>Second Y Axis Tickmark Options Major Tickmark Spacing</sci:member>
						<sci:member>Second Y Axis Tickmark Options Tickmark Label Orientation</sci:member>
						<sci:member>Second Y Axis Tickmark Options Tickmark Label Type</sci:member>
						<sci:member>Second Y Axis Tickmark Options Tickmark Label Format</sci:member>
					</sci:arg>
					<sci:arg name="Second Y Axis Tickmark Options Major Tickmark Start Value" type="ExpressionType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>&lt;p&gt;The starting value for major tickmarks.</sci:help>
					</sci:arg>
					<sci:arg name="Second Y Axis Tickmark Options Major Tickmark Spacing" type="DoubleType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>&lt;p&gt;Spacing of major tickmarks.</sci:help>
					</sci:arg>
					<sci:arg name="Second Y Axis Tickmark Options Tickmark Label Type" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>&lt;p&gt;The data type of the axis tickmark labels.
</sci:help>
						<sci:legalval selected="true">Based on Input Data</sci:legalval>
						<sci:legalval>Double</sci:legalval>
						<sci:legalval>Integer</sci:legalval>
						<sci:legalval>DateTime</sci:legalval>
						<sci:legalval>Date</sci:legalval>
					</sci:arg>
					<sci:arg name="Second Y Axis Tickmark Options Tickmark Label Format" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>&lt;p&gt;Selects the format of the tickmark labels displayed on this axis. The legal values are dependent on &apos;Second Y Axis Tickmark Options Tickmark Label Type&apos;. The default value is dependent on the label type, as indicated below.
&lt;/p&gt;
&lt;p&gt;The separator characters that appear in numbers are different around 
the world. The default number formatting will pick separators that are 
appropriate for the server&apos;s geographic location. In most places, a 
comma will be used to separate thousands in integers (e.g., 1,234) and a 
period used to separate whole and fractional parts of floating point 
numbers (e.g., 1.234). In Germany, these symbols are reversed. The 
separators can also be set by selecting the appropriate menu entry.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Integer:
&lt;ul&gt;
&lt;li&gt;Default - use the thousands separator appropriate for the geographic location&lt;/li&gt;
&lt;li&gt;1234 - AS IS&lt;/li&gt;
&lt;li&gt;1,234 - use a comma as a thousands separator&lt;/li&gt;
&lt;li&gt;1.234 - use a period as a thousands separator&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Double: 
&lt;ul&gt;
&lt;li&gt;Default - use a decimal point appropriate for the geographic location and output up to 8 digits after the point&lt;/li&gt;
&lt;li&gt;1.2 - use a period as a decimal point and output up to 1 digit after the point&lt;/li&gt;
&lt;li&gt;1.23 - use a period as a decimal point and output up to 2 digit after the point&lt;/li&gt;
&lt;li&gt;1.234 - use a period as a decimal point and output up to 3 digit after the point&lt;/li&gt;
&lt;li&gt;1.2345 - use a period as a decimal point and output up to 4 digit after the point&lt;/li&gt;
&lt;li&gt;1,2 - use a comma as a decimal point and output up to 1 digit after the point&lt;/li&gt;
&lt;li&gt;1,23 - use a comma as a decimal point and output up to 2 digit after the point&lt;/li&gt;
&lt;li&gt;1,234 - use a comma as a decimal point and output up to 3 digit after the point&lt;/li&gt;
&lt;li&gt;1,2345 - use a comma as a decimal point and output up to 4 digit after the point&lt;/li&gt;
&lt;/ul&gt;
Note that in all of the above cases, the tickmarks label precision is based on the precision of the interval between tickmarks.  For example, with a format of 1.234 and a tickmarks interval of 0.5, all tickmark values appear with a single decimal digit.  Trailing zeros after the decimal point are always omitted, irrespective of the selected format.
&lt;/li&gt;
&lt;li&gt;DateTime:
&lt;ul&gt;
&lt;li&gt;Default - use the date and time format appropriate for the geographic location&lt;/li&gt;
&lt;li&gt;06/13/1960&lt;/li&gt;
&lt;li&gt;06/13/1960 13:23&lt;/li&gt;
&lt;li&gt;06/13/1960 13:23:45&lt;/li&gt;
&lt;li&gt;06/13/1960 1:23 PM (default)&lt;/li&gt;
&lt;li&gt;06/13/1960 1:23:45 PM&lt;/li&gt;
&lt;li&gt;13/06/1960&lt;/li&gt;
&lt;li&gt;13/06/1960 13:23&lt;/li&gt;
&lt;li&gt;13/06/1960 13:23:45&lt;/li&gt;
&lt;li&gt;13/06/1960 1:23 PM&lt;/li&gt;
&lt;li&gt;13/06/1960 1:23:45 PM&lt;/li&gt;
&lt;li&gt;06/13/60&lt;/li&gt;
&lt;li&gt;06/13/60 13:23&lt;/li&gt;
&lt;li&gt;06/13/60 13:23:45&lt;/li&gt;
&lt;li&gt;06/13/60 1:23 PM&lt;/li&gt;
&lt;li&gt;06/13/60 1:23:45 PM&lt;/li&gt;
&lt;li&gt;13/06/60&lt;/li&gt;
&lt;li&gt;13/06/60 13:23&lt;/li&gt;
&lt;li&gt;13/06/60 13:23:45&lt;/li&gt;
&lt;li&gt;13/06/60 1:23 PM&lt;/li&gt;
&lt;li&gt;13/06/60 1:23:45 PM&lt;/li&gt;
&lt;li&gt;June 13, 1960&lt;/li&gt;
&lt;li&gt;June 13, 1960 13:23&lt;/li&gt;
&lt;li&gt;June 13, 1960 13:23:45&lt;/li&gt;
&lt;li&gt;June 13, 1960 1:23 PM&lt;/li&gt;
&lt;li&gt;June 13, 1960 1:23:45 PM&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Date:
&lt;ul&gt;
&lt;li&gt;Default - use the date format appropriate for the geographic location&lt;/li&gt;
&lt;li&gt;06/13/1960&lt;/li&gt;
&lt;li&gt;13/06/1960&lt;/li&gt;
&lt;li&gt;06/13/60&lt;/li&gt;
&lt;li&gt;13/06/60&lt;/li&gt;
&lt;li&gt;June 13, 1960&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:enabledscript>ValuesTypeParameterName := StrReplace(ParameterName(), &quot;Tickmark Label Format&quot;, &quot;Tickmark Label Type&quot;);
enabled := Parameter(ValuesTypeParameterName) EQ &apos;Based on Input Data&apos;;
if (not enabled) then
     SetDisabledDetails(&apos;This parameter is not enabled when Label Type is set to &quot;Based on Input Data&quot;&apos;);
End if;
enabled;</sci:enabledscript>
						<sci:legalvalscript>ValuesTypeParameterName := StrReplace(ParameterName(), &quot;Format&quot;, &quot;Type&quot;);
if (Parameter(ValuesTypeParameterName) eq &apos;Integer&apos;) then
	 resize(legalvalues, 4);
     legalvalues[2] := &apos;1234&apos;;
	 legalvalues[3] := &apos;1,234&apos;;
	 legalvalues[4] := &apos;1.234&apos;;
elsif (Parameter(ValuesTypeParameterName) eq &apos;Double&apos;) then
	 resize(legalvalues, 9);
     legalvalues[2] := &apos;1.2&apos;;
     legalvalues[3] := &apos;1.23&apos;;
     legalvalues[4] := &apos;1.234&apos;;
     legalvalues[5] := &apos;1.2345&apos;;
     legalvalues[6] := &apos;1,2&apos;;
     legalvalues[7] := &apos;1,23&apos;;
     legalvalues[8] := &apos;1,234&apos;;
     legalvalues[9] := &apos;1,2345&apos;;
elsif (Parameter(ValuesTypeParameterName) eq &apos;DateTime&apos;) then
	 resize(legalvalues, 26);
	legalvalues[2] := &apos;06/13/1960&apos;; 
	legalvalues[3] := &apos;06/13/1960 13:23&apos;;
	legalvalues[4] := &apos;06/13/1960 13:23:45&apos;;
	legalvalues[5] := &apos;06/13/1960 1:23 PM&apos;;
	legalvalues[6] := &apos;06/13/1960 1:23:45 PM&apos;;
	legalvalues[7] := &apos;13/06/1960&apos;;
	legalvalues[8] := &apos;13/06/1960 13:23&apos;;
	legalvalues[9] := &apos;13/06/1960 13:23:45&apos;;
	legalvalues[10] := &apos;13/06/1960 1:23 PM&apos;;
	legalvalues[11] := &apos;13/06/1960 1:23:45 PM&apos;;
	legalvalues[12] := &apos;06/13/60&apos;;
	legalvalues[13] := &apos;06/13/60 13:23&apos;;
	legalvalues[14] := &apos;06/13/60 13:23:45&apos;;
	legalvalues[15] := &apos;06/13/60 1:23 PM&apos;;
	legalvalues[16] := &apos;06/13/60 1:23:45 PM&apos;;
	legalvalues[17] := &apos;13/06/60&apos;;
	legalvalues[18] := &apos;13/06/60 13:23&apos;;
	legalvalues[19] := &apos;13/06/60 13:23:45&apos;;
	legalvalues[20] := &apos;13/06/60 1:23 PM&apos;;
	legalvalues[21] := &apos;13/06/60 1:23:45 PM&apos;;
	legalvalues[22] := &apos;June 13, 1960&apos;; 
	legalvalues[23] := &apos;June 13, 1960 13:23&apos;;
	legalvalues[24] := &apos;June 13, 1960 13:23:45&apos;;
	legalvalues[25] := &apos;June 13, 1960 1:23 PM&apos;;
	legalvalues[26] := &apos;June 13, 1960 1:23:45 PM&apos;;
elsif (Parameter(ValuesTypeParameterName) eq &apos;Date&apos;) then
	 resize(legalvalues, 6);
	legalvalues[2] := &apos;06/13/1960&apos;; 
	legalvalues[3] := &apos;13/06/1960&apos;;
	legalvalues[4] := &apos;06/13/60&apos;;
	legalvalues[5] := &apos;13/06/60&apos;;
	legalvalues[6] := &apos;June 13, 1960&apos;; 
else
	resize(legalvalues,1);
end if;
legalvalues[1] := &apos;Default&apos;;
SetLegalValues(legalvalues);</sci:legalvalscript>
						<sci:legalval selected="true">Default</sci:legalval>
					</sci:arg>
					<sci:arg name="Second Y Axis Tickmark Options Tickmark Label Orientation" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>&lt;p&gt;Specifies the orientation for tickmark labels.</sci:help>
						<sci:legalval selected="true">Horizontal</sci:legalval>
						<sci:legalval>Vertical</sci:legalval>
						<sci:legalval>Diagonal</sci:legalval>
					</sci:arg>
					<sci:arg name="Second Y Axis Line Color" type="ColorType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Specifies the color of the right Y axis line.</sci:help>
					</sci:arg>
					<sci:arg name="Column Settings" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Column settings control how the element appears when it is used inside a table.</sci:help>
						<sci:member>Column Settings Header Text</sci:member>
						<sci:member>Column Settings Header Format</sci:member>
						<sci:member>Column Settings Header Position</sci:member>
						<sci:member>Column Settings Cell Format</sci:member>
						<sci:member>Column Settings Cell Position</sci:member>
					</sci:arg>
					<sci:arg name="Column Settings Header Text" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>When the element is used within a Table component, this parameter sets the text displayed at the top of its column.</sci:help>
					</sci:arg>
					<sci:arg name="Column Settings Header Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>&lt;p&gt;When used in a table, this parameter sets the format of the text displayed 
at the top of its column.
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Font Size: Sets font size&lt;/li&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:value>700</sci:value>
					</sci:arg>
					<sci:arg name="Column Settings Header Position" type="PositionType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>When the element is used within a Table component, this parameter sets the position of the text displayed at the top of its column.</sci:help>
					</sci:arg>
					<sci:arg name="Column Settings Cell Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>When used in a table, this parameter sets the format of the cells in the column.
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Font Size: Sets font size&lt;/li&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:value>700</sci:value>
					</sci:arg>
					<sci:arg name="Column Settings Cell Position" type="PositionType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>When the element is used within a Table component, this parameter sets the position of the cells in the column.</sci:help>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true" expanded="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false" expanded="true">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false" expanded="true">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true"/>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false" expanded="true">
						<sci:value>REPORTCHARTNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false" expanded="true">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>9.5.0.760</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true" expanded="true">
						<sci:value>100</sci:value>
						<sci:value>Creates an XY plot for a report</sci:value>
						<sci:value>&lt;p&gt;Displays data as points and/or lines. Each incoming data record represents a single point for a given dataset. Multiple data series (i.e., &lt;em&gt;Data Series 1&lt;/em&gt;, &lt;em&gt;Data Series 2&lt;/em&gt;, etc.) can use distinct formatting. The chart as a whole and the individual axes are also customizable.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;X Property&lt;/i&gt; is the property containing the X data values. &lt;i&gt;Y Property&lt;/i&gt; is the property containing the Y data values. You can specify multiple Y properties for a given Data Series, as described below.&lt;/p&gt;

&lt;p&gt;To plot multiple datasets in a single chart, add additional Data Series using &lt;i&gt;Chart Data&lt;/i&gt; and specify an &lt;em&gt;X Property&lt;/em&gt; and &lt;em&gt;Y Property&lt;/em&gt; for &lt;em&gt;Data Series 1&lt;/em&gt; and &lt;em&gt;Data Series 2&lt;/em&gt;, etc. This allows you to control formatting options individually for each data series. Alternatively, you can enter multiple properties as a comma-separated list in &lt;em&gt;Y Property&lt;/em&gt; for a given Data Series. In this case, the same formatting is applied to each data property.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;i&gt;Data Series n&lt;/i&gt;: Specifies data properties and formatting options that control the particular data series.&lt;/li&gt;
&lt;li&gt;&lt;i&gt;Chart Options&lt;/i&gt;: Options that control the whole chart, such as &lt;i&gt;Title&lt;/i&gt; and various &lt;i&gt;Display Options&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;&lt;i&gt;X Axis&lt;/i&gt;: Options that control the look and feel of the X Axis.&lt;/li&gt;
&lt;li&gt;&lt;i&gt;Y Axis&lt;/i&gt;: Options that control the look and feel of the Y Axis.&lt;/li&gt;
&lt;li&gt;&lt;i&gt;Second Y Axis&lt;/i&gt;: Options that control the look and feel of a second Y Axis, displayed on the right side of the chart, when any Data Series is specified to be plotted against it.&lt;/li&gt;
&lt;li&gt;&lt;i&gt;Column Settings&lt;/i&gt;: Options to control how the chart appears inside a table.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Notes:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In &lt;em&gt;Chart Options&lt;/em&gt; &gt; &lt;em&gt;Chart Output&lt;/em&gt;, you can specify if all data records are plotted in a single chart or in a separate chart for each data record, (e.g., to plot array data as a chart in each table row). Array data is not required.&lt;/li&gt;
&lt;li&gt;To add additional Data Series, right-click the component to enter edit mode, and copy and paste one of the existing Data Series. Any values assigned to parameters are also copied.&lt;/li&gt;
&lt;li&gt;To display some of your data in unique way, you can add Canvas Elements to an XY Chart. You can only pipe a Canvas Element into the chart when the &lt;em&gt;Display Type&lt;/em&gt; is set to &quot;Image&quot;. &lt;/li&gt;
&lt;li&gt;To enable the &lt;A href=&quot;javascript:DoLink(&apos;sciapps/scitegic/reportadv/docs/charts/index.html&apos;)&quot;&gt;Scriptable Charts API&lt;/A&gt; for this chart, set &lt;em&gt;Chart Options&lt;/em&gt; &gt; &lt;em&gt;Make Scriptable&lt;/em&gt; to &quot;True&quot;. &lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/reportadv/docs/charts/index.html&apos;)&quot;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/report/docs/reporting_basic.pdf&apos;)&quot;&gt;Report Design Essentials&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/report/docs/reporting_charts.pdf&apos;)&quot;&gt;Chart Design&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/report/docs/reporting_canvas.pdf&apos;)&quot;&gt;Canvas Elements Design&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/ul&gt;
</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>A data record representing the chart is sent to the pass port.</sci:value>
						<sci:value>None</sci:value>
						<sci:value>The input data records are all sent to the fail port.</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Plug In</sci:value>
					</sci:arg>
					<sci:arg name="Link Options Mapping" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Mapping of the Format parameter name to the Link Options parameter name.</sci:help>
						<sci:value>Chart Options Format</sci:value>
						<sci:value>Chart Options Links and Actions Link Options</sci:value>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/report</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true"/>
					<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
						<sci:value>DrainTopDown</sci:value>
					</sci:arg>
					<sci:arg name="JavaClass" type="StringType" required="true" visibility="nevershow" multi="false" expanded="true">
						<sci:value>com.scitegic.report.component.chart.XYPlotComponent</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Wed Jan 28 14:21:59 2015</sci:value>
					</sci:arg>
					<sci:arg name="Use Package" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>scitegic/report</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>11</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
						<sci:value>{DDD69C6F-63BC-41c0-8320-86BE1D88E458}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
						<sci:value>XY Chart</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
						<sci:value>690 -520</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Reporting and Visualization\Basic Reporting\Charts\XY Chart</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.DelimitedReader.1">
				<sci:component name="Delimited Text Reader" version="2">
					<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;
The name or path name for the source data. The source can be a file, a network resource, a data record property, or a global property.
&lt;/p&gt; 
&lt;p&gt;
&lt;ul&gt;
&lt;li&gt;Use a file path name for files&lt;/li&gt;
&lt;li&gt;Use a network URL for network resources&lt;/li&gt;
&lt;li&gt;Use &quot;global://property-name&quot; for global properties&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:member>Maximum</sci:member>
						<sci:member>Keep Properties</sci:member>
						<sci:member>UTF-8 Auto Detect</sci:member>
						<sci:member>SourceTag</sci:member>
						<sci:member>HasColumnNames</sci:member>
						<sci:value>data\Tables\Beer.txt</sci:value>
					</sci:arg>
					<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
						<sci:help>The maximum number of data records to read (all if value is empty)</sci:help>
					</sci:arg>
					<sci:arg name="SourceTag" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>The type of tag to create to identify the source of data records. A property called &quot;SourceTag&quot; is created and holds the value indicated.

 - None: No SourceTag property is created and any existing ones are removed.

 - Filename: The name of the file read.

 - FilenameAndExtension: The name of the file read with its file extension.

 - FullFilename: The name of the file read, including the directory path.

 - ZipFilename: When reading a compressed zip file, the filename within the compressed archive.

 - Number: When multiple files are read in this component, they are numbered 1,2,3...

 - Letter: When multiple files are read in this component, they are lettered A, B, C...

 - KeepCurrent: Keeps the current value of SourceTag.</sci:help>
						<sci:legalval selected="true">None</sci:legalval>
						<sci:legalval>Filename</sci:legalval>
						<sci:legalval>FilenameAndExtension</sci:legalval>
						<sci:legalval>FullFilename</sci:legalval>
						<sci:legalval>ZipFilename</sci:legalval>
						<sci:legalval>Number</sci:legalval>
						<sci:legalval>Letter</sci:legalval>
						<sci:legalval>KeepCurrent</sci:legalval>
					</sci:arg>
					<sci:arg name="Keep Properties" type="PropertyPreviewType" required="false" visibility="visible" multi="false">
						<sci:help>A list of properties the reader retains for each data record that is output. If a value is not defined, retains all properties. If the parameter contains the value &quot;-&quot; (minus sign), properties are not retained.</sci:help>
					</sci:arg>
					<sci:arg name="UTF-8 Auto Detect" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>&lt;p&gt;UTF-8 is a type of character encoding used to represent international characters with multiple bytes whereas basic Latin characters remain as a single byte.  Files can be stored with a Byte Order Mark (BOM) to indicate that the type of character encoding.&lt;/p&gt;
&lt;p&gt;When reading files that do not have a BOM, this parameter allows the reader to attempt to automatically detect UTF-8 encodings and convert as needed.  However, be aware that automatic detection is not always reliable.  In some cases, valid text stored in different character encodings can appear to be valid UTF-8.  In these cases, the automatic detection will result in garbled text.  When this occurs, you can consider using the &lt;a href=&quot;javascript:DoLink(&apos;{B0B1B56C-3DF6-444C-BB78-B43211188F63}&apos;)&quot;&gt;Binary Reader&lt;/a&gt; to read the file, then converting using the Pilotscript function &lt;b&gt;ConvertBytesToString&lt;/b&gt;&lt;/p&gt;

</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="HasColumnNames" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>When True, property names are taken from the first line of data in the file. When False, properties are named Column1,Column2, etc.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Delimiter" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>Specifies the character that separates fields. Options include:
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;FigureOut:&lt;/b&gt; Determines the type automatically (looks for, in order: tab, comma, space, colon, semicolon).&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Tab:&lt;/b&gt; For tab-delimited fields.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Space:&lt;/b&gt; For space-delimited fields.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Comma:&lt;/b&gt; For comma-delimited fields.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Colon:&lt;/b&gt; For colon-delimited fields.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Semicolon:&lt;/b&gt; For semicolon-delimited fields.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;$:&lt;/b&gt; For fields delimited bty the &quot;$&quot; character.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
						<sci:member>MultipleValueDelimiter</sci:member>
						<sci:member>ParseNDimensionalArrayStrings</sci:member>
						<sci:legalval selected="true">FigureOut</sci:legalval>
						<sci:legalval>Tab</sci:legalval>
						<sci:legalval>Space</sci:legalval>
						<sci:legalval>Comma</sci:legalval>
						<sci:legalval>Colon</sci:legalval>
						<sci:legalval>Semicolon</sci:legalval>
						<sci:legalval>$</sci:legalval>
					</sci:arg>
					<sci:arg name="MultipleValueDelimiter" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>The delimiter to use between multiple values contained in a single property. If the multiple value delimiter exists in any of the input strings in any property, they are separated into an array of values. If &quot;None&quot;, 
values are never separated into multiple values.</sci:help>
						<sci:legalval selected="true">None</sci:legalval>
						<sci:legalval>Semicolon</sci:legalval>
						<sci:legalval>Colon</sci:legalval>
						<sci:legalval>Comma</sci:legalval>
						<sci:legalval>Linefeed</sci:legalval>
					</sci:arg>
					<sci:arg name="ParseNDimensionalArrayStrings" type="BoolType" required="false" visibility="visible" multi="false">
						<sci:help>Toggles whether to parse delimited N-Dimensional Array strings into N-Dimensional Array values.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
						<sci:help>Contains less commonly used parameters</sci:help>
						<sci:member>UndefinedString</sci:member>
						<sci:member>AllLines</sci:member>
						<sci:member>TrimWhitespace</sci:member>
						<sci:member>CheckSyntax</sci:member>
						<sci:member>CommentLines</sci:member>
						<sci:member>AddEmptyProperties</sci:member>
					</sci:arg>
					<sci:arg name="CommentLines" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>A comma-separated list of line numbers and
line ranges to specify which lines should be 
ignored by the parser (column headers are read from the line that comes next).</sci:help>
					</sci:arg>
					<sci:arg name="UndefinedString" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>Character or string to represent an undefined string read in the file. To make an empty string to be treated as an undefined value, set the parameter value to &quot;EmptyString&quot;.</sci:help>
					</sci:arg>
					<sci:arg name="AllLines" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>If True, all lines of the text file become part of a single data record. The values for a column from each row become multiple [array] values for the property (column).</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="TrimWhitespace" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>Trims whitespace from the left and right ends of each value</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="CheckSyntax" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>Whether to perform a quick syntax check at the beginning of the file when it is opened, and if a problem is found, throw an error.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="AddEmptyProperties" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>If True, then if a row does not have as many values as the number of columns, the missing properties are added to the data record as empty properties</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Join Behavior" type="StringType" required="false" visibility="hidden" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;How to merge the created data record onto the incoming data record. Options are:&lt;/p&gt;
 
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;OverwriteOrCreate&lt;/i&gt;: Copies all properties from the joining data onto the base data, overwriting the values of any properties that already exist.
&lt;li&gt;&lt;i&gt;OverwriteExisting&lt;/i&gt;: Copies only those properties from the joining data to the base data that already exist on the base.
&lt;li&gt;&lt;i&gt;CreateIfNew&lt;/i&gt;: Copies only those properties from the joining data to the base data that do not already exist on the base data.
&lt;li&gt;&lt;i&gt;AppendOrCreate&lt;/i&gt;: The value of a joining property that already exists in the base data is appended  (as an array) to the value in the base property.  The other joining properties that are not already present in the base data are copied there.
&lt;li&gt;&lt;i&gt;AppendExisting&lt;/i&gt;: The value of a joining property that already exists in the base data is appended  (as an array) to the value in the base property.  No other properties are copied. 
&lt;li&gt;&lt;i&gt;Replace&lt;/i&gt;: The input data record is replaced by the created data record. &lt;/ul&gt;

</sci:help>
						<sci:legalval>OverwriteOrCreate</sci:legalval>
						<sci:legalval>OverwriteExisting</sci:legalval>
						<sci:legalval>CreateIfNew</sci:legalval>
						<sci:legalval>AppendOrCreate</sci:legalval>
						<sci:legalval>AppendExisting</sci:legalval>
						<sci:legalval selected="true">Replace</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval>ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Thu Nov 01 12:19:54 2012</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Read beer data</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component that this component is based upon.</sci:help>
						<sci:value>Delimited Reader</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>DOCUMENTNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{7D2AF7C7-A077-4201-B10B-8E8283A5EADD}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>114 -720</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Reads data from text files containing one record per line with data separated by delimiters</sci:value>
						<sci:value>&lt;p&gt;The file or files are specified by &lt;i&gt;Source&lt;/i&gt;. The file(s) should contain textual data formatted with a single record per line. Individual property values on each line should be separated by a delimiter character (such as, space, comma, tab), as specified by &lt;i&gt;Delimiter&lt;/i&gt;.&lt;/p&gt;

&lt;p&gt;If &lt;i&gt;HasColumnNames&lt;/i&gt; is True, the values on the first line of the file are treated as the property names. Otherwise, &lt;b&gt;Column1&lt;/b&gt;, &lt;b&gt;Column2&lt;/b&gt;, and so on, are used as the property names.&lt;/p&gt;

Cells containing array data can be read by setting the &lt;i&gt;MultipleValueDelimiter&lt;/i&gt; option to the character that separates the array elements. (Of course, this cannot be the same as the delimiter character.) You can now use the &lt;i&gt;Unmerge Data&lt;/i&gt; component to unmerge these arrays into separate records.
&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;The new, recommended component for Excel (.xlsx or .xls) files that does not require Excel to be installed on the server machine, and therefore is operational on Linux and Windows platforms - &lt;a href=&quot;javascript:DoLink(&apos;{14D98B18-C990-432C-834B-7026565E5ABF}&apos;)&quot;&gt;Excel Reader (Cross platform)&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;For non-delimited textual data, use &lt;a href=&quot;javascript:DoLink(&apos;{8056E8AD-33EA-42BB-9099-EAB24C3D08E6}&apos;)&quot;&gt;Text Reader&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>9.0.0.100</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>5</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Data Access and Manipulation\File Readers\Delimited Text Reader</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.DataConnector.1">
				<sci:component name="Data Connector" version="2">
					<sci:arg name="Parameter to Map" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>&lt;p&gt;The name of a parameter on the target protocol that this component&apos;s value should be mapped to.&lt;/p&gt;</sci:help>
						<sci:member>Value</sci:member>
					</sci:arg>
					<sci:arg name="Value" type="ExpressionType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>&lt;p&gt;This value from a record will be sent to the work protocol if the associated content is selected.&lt;/p&gt;</sci:help>
						<sci:validscript>p2mParameterName := StrReplace(ParameterName(), &quot;Value&quot;, &quot;Parameter To Map&quot;);
Parameter(p2mParameterName) EQ &apos;&apos; OR Parameter(ParameterName()) NOT EQ &apos;&apos;;</sci:validscript>
						<sci:enabledscript>p2mParameterName := StrReplace(ParameterName(), &quot;Value&quot;, &quot;Parameter To Map&quot;);
enabled := Parameter(p2mParameterName) NOT EQ &apos;&apos;;
if (not enabled) then
     SetDisabledDetails(&apos;This parameter is enabled when &quot;Parameter To Map&quot; is not empty&apos;);
End if;
enabled;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Selected" type="ExpressionType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;Specifies if data records should be selected when the report loads.  You can use this in three ways:
&lt;p&gt;&lt;ul&gt;
&lt;li&gt;Set to a constant string, i.e., &lt;code&gt;&apos;False&apos;&lt;/code&gt; (include the single quotes), or &lt;code&gt;&apos;True&apos;&lt;/code&gt; to have all data records &lt;b&gt;not selected&lt;/b&gt;, or &lt;b&gt;selected&lt;/b&gt;, respectively&lt;/li&gt;
&lt;li&gt;Provide the name of a property whose values evaluate to either TRUE or FALSE (anything other than TRUE will be false)&lt;/li&gt;
&lt;li&gt;Provide any expression that will evaluate to a Boolean (True/False) value, such as &lt;code&gt;PropX &gt; 3&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;
</sci:help>
						<sci:value>false</sci:value>
					</sci:arg>
					<sci:arg name="Highlight Color" type="ColorType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;Specifies the color for selected data items.</sci:help>
					</sci:arg>
					<sci:arg name="Data Record ID" type="ExpressionType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;Takes a property value and assigns an ID for each incoming data record. &lt;!--If empty an incremental record count ID is assigned.--&gt;&lt;/p&gt;
&lt;p&gt;This parameter can be used to link corresponding data records from distinct datastreams, feeding into multiple &lt;i&gt;Data Connectors&lt;/i&gt;, that have the same value for &lt;i&gt;Component ID&lt;/i&gt;.

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;If the specified property contains duplicates, all data records having the same value will have the same ID and the selection of any one is equivalent to a selection of all corresponding data records&lt;/li&gt;
	&lt;li&gt;When a value for &lt;i&gt;Data Record ID&lt;/i&gt; is specified, empty values for the property are ignored (i.e., those data records will not be linked across elements in the report)&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
						<sci:value>beer</sci:value>
					</sci:arg>
					<sci:arg name="Component ID" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Assigns an ID that is used to connect multiple Data Connector components in a protocol, or across protocols deployed in SharePoint Web Parts.  If only a single Data Connector is used, a value for this parameter is not necessary.  

&lt;p&gt;This parameter can also be used to create independent sets of interacting elements in a report.  Simply specify a different value in each Data Connector component.  Note that any downstream component (e.g., chart, table) can take input from a single Data Connector only.</sci:help>
					</sci:arg>
					<sci:arg name="Make Scriptable" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;Enables programmatic interactivity with data connectors via the &lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/reportadv/docs/data_connector/index.html&apos;)&quot;&gt;Scriptable Data Connector API&lt;/a&gt;. When using the API it is useful to specify a &quot;Component ID&quot; for this particular data connector component.&lt;/p&gt;</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true" expanded="true">
						<sci:help>Component Attributes</sci:help>
						<sci:value>ComponentReturnsPass</sci:value>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval>ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false" expanded="true">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false" expanded="true">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true"/>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
						<sci:value>Data Connector</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
						<sci:value>402 -720</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false" expanded="true">
						<sci:value>REPORTTEXTNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
						<sci:value>{59795FCD-5104-46d3-B593-42054C2D3DCD}</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Plug In</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false" expanded="true">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true" expanded="true">
						<sci:value>100</sci:value>
						<sci:value>Adds data interactivity to a report</sci:value>
						<sci:value>&lt;p&gt;Enables interactivity between report elements by linking data streams for reporting components. Use a &lt;em&gt;Data Connector&lt;/em&gt; upstream from any reporting component with output data. The &lt;em&gt;Data Connector&lt;/em&gt; assigns an ID to each incoming data record, so all downstream reporting components become interactive.&lt;/p&gt; 

&lt;p&gt;You can connect all reporting components to a single &lt;em&gt;Data Connector&lt;/em&gt; in the same protocol. The ID for each data record is assigned internally and no component parameterization is required. This method is ideal when there is a single stream of data to connect.&lt;/p&gt;

&lt;p&gt;If your protocol includes multiple data streams, and data record order is inconsistent, use multiple &lt;em&gt;Data Connector&lt;/em&gt; components instead. To properly connect the data records:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Set the &lt;i&gt;Component ID&lt;/i&gt; parameter to connect instances of the &lt;em&gt;Data Connectors&lt;/em&gt;; 
&lt;li&gt;Set the &lt;i&gt;Data Record ID&lt;/i&gt; parameter to connect the data records themselves (see notes below). 
&lt;/ul&gt;
&lt;p&gt;Note that the first &lt;em&gt;Data Connector&lt;/em&gt; with a given &lt;i&gt;Component ID&lt;/i&gt; determines which records are selected when the report is loaded (i.e., the &lt;i&gt;Selected&lt;/i&gt; parameter is only evaluated on the first &lt;em&gt;Data Connector&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;You can use this same combination of &lt;i&gt;Component ID&lt;/i&gt; and &lt;i&gt;Data Record ID&lt;/i&gt; parameters to connect data across protocol output in separate SharePoint Web Parts. When clicking data elements in report output, such as a column in a Histogram or a table row, end users are creating an &quot;event&quot; for which the other connected elements can then respond. Responses can be highlighted, filtered (i.e., only data items corresponding to the selected ones are shown), or reverse-filtered (items corresponding to selected ones are not-shown, all others are).&lt;/p&gt;

&lt;p&gt;On each of the downstream interactive components, (e.g., charts, table, tiles), the interactivity behavior is specified via the &lt;i&gt;Chart/Table Options&lt;/i&gt; &gt; &lt;i&gt;Links and Actions&lt;/i&gt; &gt; &lt;i&gt;Data Connector&lt;/i&gt; parameters. &lt;/p&gt;
&lt;p&gt;&lt;i&gt;Publisher Subscriber Model&lt;/i&gt; publishes and/or subscribes to events. &lt;em&gt;Subscriber Event Handling&lt;/em&gt;&lt;/i&gt; highlights, filters, and reverse-filters.&lt;/p&gt;

&lt;p&gt;For connectivity, use the following components with the &lt;em&gt;Data Connector&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;i&gt;Area Chart&lt;/i&gt;&lt;/li&gt;
&lt;li&gt;&lt;i&gt;Bar Chart&lt;/i&gt;&lt;/li&gt;
&lt;li&gt;&lt;i&gt;Heat Map&lt;/i&gt;&lt;/li&gt;
&lt;li&gt;&lt;i&gt;Histogram (Categorical)&lt;/i&gt;&lt;/li&gt;
&lt;li&gt;&lt;i&gt;Histogram (Numerical)&lt;/i&gt;&lt;/li&gt;
&lt;li&gt;&lt;i&gt;Line Chart&lt;/i&gt;&lt;/li&gt;
&lt;li&gt;&lt;i&gt;Pie Chart&lt;/i&gt;&lt;/li&gt;
&lt;li&gt;&lt;i&gt;Radar Chart&lt;/i&gt;&lt;/li&gt;
&lt;li&gt;&lt;i&gt;XY Chart&lt;/i&gt;&lt;/li&gt;
&lt;li&gt;&lt;i&gt;XY Chart (Categorical X)&lt;/i&gt;&lt;/li&gt;
&lt;li&gt;&lt;i&gt;Canvas&lt;/i&gt;&lt;/li&gt;
&lt;li&gt;&lt;i&gt;Table&lt;/i&gt;&lt;/li&gt;
&lt;li&gt;&lt;i&gt;Interactive Table&lt;/i&gt;&lt;/li&gt;
&lt;li&gt;&lt;i&gt;Cross Tab&lt;/i&gt;&lt;/li&gt;
&lt;li&gt;&lt;i&gt;Tree&lt;/i&gt;&lt;/li&gt;
&lt;li&gt;&lt;i&gt;Bulleted List&lt;/i&gt;&lt;/li&gt;
&lt;li&gt;&lt;i&gt;Tile Horizontal&lt;/i&gt; and &lt;i&gt;Tile Vertical&lt;/i&gt; (the default is to bypass data connector nodes)&lt;/li&gt;
&lt;li&gt;&lt;i&gt;Search Results&lt;/i&gt; (Documents and Text Collection)&lt;/li&gt;
&lt;li&gt;&lt;i&gt;Tag Cloud&lt;/i&gt; (Documents and Text Collection)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Notes:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Only Interactive Charts can be data connected. When connecting a chart to a &lt;em&gt;Data Connector&lt;/em&gt;, &lt;i&gt;set &lt;/i&gt;&lt;em&gt;Chart Options&lt;/em&gt; &lt;em&gt;&gt; Display Type&lt;/em&gt; to &quot;Interactive&quot;.&lt;/li&gt;
&lt;li&gt;The interactive canvas is Flash-based. When connecting a canvas to a &lt;em&gt;Data Connector&lt;/em&gt;, set &lt;i&gt;Display Type&lt;/i&gt; to &quot;Flash&quot;.&lt;/li&gt;
&lt;li&gt;A component can only accept input from a single &lt;em&gt;Data Connector&lt;/em&gt;, although the &lt;em&gt;Data Connector&lt;/em&gt; does not need to be placed immediately upstream. &lt;/li&gt;
&lt;li&gt;To enable the &lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/reportadv/docs/data_connector/index.html&apos;)&quot;&gt;Scriptable Data Connector API&lt;/a&gt; for the component, set &lt;i&gt;Make Scriptable&lt;/i&gt; to &quot;True&quot;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/report/docs/reporting_basic.pdf&apos;)&quot;&gt;Report Design Essentials&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/reportadv/docs/reportadv_interactive.pdf&apos;)&quot;&gt;Interactive Reporting and Form Design&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Data records containing the Data Connector information</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true"/>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>9.1.0.3</sci:value>
					</sci:arg>
					<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
						<sci:value>DrainTopDown</sci:value>
					</sci:arg>
					<sci:arg name="CaptureStdoutStderr" type="BoolType" required="true" visibility="nevershow" multi="false" expanded="true">
						<sci:help>CaptureStdoutStderr</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
						<sci:help>Comment</sci:help>
						<sci:value>Loads a class to provide component behavior.</sci:value>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/reportadv</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Wed May 29 11:15:55 2013</sci:value>
					</sci:arg>
					<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
						<sci:help>Component Usage</sci:help>
						<sci:value>Loads a class to provide component behavior.

Set the ports and icon as appropriate.</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>12</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Reporting and Visualization\Web Application Development\HTML Elements\Data Connector</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="HTML Report Viewer (Semantic UI)" version="2">
					<sci:arg name="Title" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;The optional title of the HTML document. The title is also used as part of the report&apos;s file name.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Permanent URL" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>Display this protocol&apos;s starter URL in the browser address bar. Users will be able to bookmark the start protocol page that way. &lt;p&gt;&lt;strong&gt;Note: the protocol must be saved in Pipeline Pilot for this to work.&lt;/strong&gt;&lt;/p&gt;</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Advanced Options" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>Advanced Options</sci:help>
						<sci:member>Include Format and Position CSS</sci:member>
						<sci:member>Animate Link Underlines</sci:member>
						<sci:member>Theme</sci:member>
						<sci:member>Web Browser</sci:member>
					</sci:arg>
					<sci:arg name="Theme" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;Choose a visual theme for the content.&lt;/p&gt;
&lt;p&gt;&lt;ul&gt;
&lt;li&gt;2.2.1: released 06/2016&lt;/li&gt;
&lt;li&gt;Default (v 2.1.8): released 02/2016&lt;/li&gt;
&lt;/ul&gt;
Semantic UI release history with detailed notes:
&lt;a href=&quot;https://github.com/Semantic-Org/Semantic-UI/releases&quot;&gt;https://github.com/Semantic-Org/Semantic-UI/releases&lt;a&gt;
&lt;/p&gt;
&lt;p&gt;When the component collection is updated with a new Semantic UI release, the components in unmodified existing protocols will continue to point to a set release version. You can also point this parameter to a newer release if you wish by right-clicking the component and Replace with Latest Version then selecting a newer semantic theme release.&lt;/p&gt;
To add a new custom theme (e.g. developed in-house): do not change this component. Just add a new subfolder to the &lt;code&gt;ScitegicRoot\apps\saber\semantic\dataroot\data\assets\semantic\&lt;/code&gt; file folder. The subfolder should contain a compiled customized copy of the Semantic UI distribution. &lt;strong&gt;The name of the subfolder should be alphanumeric and it cannot contain spaces or special characters.&lt;/strong&gt;</sci:help>
						<sci:legalvalscript>//SetLegalValues(&apos;Default&apos;);
SetLegalValues(RunProtocol(&apos;{4460A9EB-E8FA-42F0-A0ED-D35964047B39}&apos;));</sci:legalvalscript>
						<sci:value>2.4.1</sci:value>
					</sci:arg>
					<sci:arg name="Include Format and Position CSS" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>If set to &lt;strong&gt;True&lt;/strong&gt;, all native Pipeline Pilot format and position settings will be included in the output document. Otherwise all native Pipeline Pilot formatting will be ignored.</sci:help>
						<sci:member>Add Page Margins</sci:member>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Add Page Margins" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>When not using native Scitegic CSS, add page margins. This will add small margins on each side of the page. Scitegic styles already include this.</sci:help>
						<sci:enabledscript>not Parameter(&apos;Include Format and Position CSS&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Animate Link Underlines" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>When hovering over a link, the link&apos;s underline is revealed by animating it out from the center.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Web Browser" type="StringType" required="true" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Web Browser</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>&lt;p&gt;
This parameter is only relevant when running the protocol in the Pipeline Pilot Professional Client. When running the protocol from a web hyperlink or a URL the value of this parameter is ignored.
&lt;/p&gt;
&lt;p&gt;
The value specifies which web browser to open on your desktop to view the report.
&lt;/p&gt;</sci:help>
						<sci:legalval selected="true">Default</sci:legalval>
						<sci:legalval>Internet Explorer</sci:legalval>
						<sci:legalval>Chrome</sci:legalval>
						<sci:legalval>Firefox</sci:legalval>
					</sci:arg>
					<sci:arg name="Output Mode" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Allows some alternative formatting and position settings to be used that may cause the HTML report output to behave and look more like the HTML generated with previous versions of Pipeline Pilot. This parameter is intended to be set on writers in protocols developed with previous versions of Pipeline Pilot where the output looks or behaves differently when run with the current version.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Always use the value of &quot;Default&quot; for new protocols or protocols under active development. The latest Reporting components may not behave correctly in HTML reports written with a non-default mode.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When set to &quot;Pipeline Pilot 7.5&quot;, this parameter rolls back some of the improvements made in the name of standards compliance and formatting consistency, including:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;The report will not include the HTML 4.01 Doctype declaration, which will cause Internet Explorer to render the report using quirks mode.&lt;/li&gt;
	&lt;li&gt;Position rules will not be strictly enforced, so Internet Explorer 6 will render borders and padding outside the specified width.&lt;/li&gt;
	&lt;li&gt;Horizontal alignment of block objects will not be supported, so you will not be able to, for example, center-align a table.&lt;/li&gt;
	&lt;li&gt;The page margins will not be set.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
						<sci:legalval selected="true">Default</sci:legalval>
						<sci:legalval>Pipeline Pilot 7.5</sci:legalval>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
						<sci:help>Lists the set of temporary files which will be converted by the network to true temporary file names</sci:help>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
						<sci:help>Lists a set of properties (without the @) to be created on the property list for this protocol.
Other properties are created on the global property list
and so are accessible from all protocols.</sci:help>
						<sci:value>ServerFilePath, ServerFilePathZIP, ServerFilePathForwardSlashes</sci:value>
					</sci:arg>
					<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
						<sci:help>When the network is run, whether we process once or until done for each process call</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Accept Bootstrap" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
						<sci:help>Allow the use of Web Design (Bootstrap) collection components with the Semantic UI viewer? Generally speaking, this parameter should always be set to False to prevent the inadvertent mixing of the two frameworks.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Web Browsers" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false" uimpl="true">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Web Browsers</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:member>Chrome</sci:member>
						<sci:member>Firefox</sci:member>
						<sci:member>Internet Explorer</sci:member>
						<sci:member>Set IE Compatibility</sci:member>
					</sci:arg>
					<sci:arg name="Set IE Compatibility" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Set IE Compatibility</sci:value>
								<sci:value>Set IE Compatibility</sci:value>
								<sci:value>Set IE Compatibility</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>&lt;p&gt;When this flag is set to True (default), IE compatibility in the report is set to IE 10 (the minimum support level for Pipeline Pilot). For most users of IE, this should provide a stable environment to view Pipeline Pilot reports.
&lt;/p&gt;
&lt;/p&gt;Switch off this setting, if necessary, to allow Internet Explorer to display content in the highest mode available. This is only required for users who view the report in Internet Explorer 11 or above and who need to enable facilities not available in IE 10 mode, such as WebGL and some HTML5/CSS features.
&lt;/p&gt;
&lt;p&gt;Note that even if you are viewing the report in another browser, other users may subsequently run the protocol or view the report in Internet Explorer, and so you may still need to set this IE Compatibility setting - but only in the rare case that your report requires something beyond the default IE 10 compatibility.
&lt;/p&gt;</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Internet Explorer" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Internet Explorer</sci:value>
								<sci:value>Internet Explorer</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>The location for Internet Explorer</sci:help>
						<sci:value>iexplore</sci:value>
					</sci:arg>
					<sci:arg name="Chrome" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Chrome</sci:value>
								<sci:value>Chrome</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>The location for Chrome</sci:help>
						<sci:value>chrome</sci:value>
					</sci:arg>
					<sci:arg name="Firefox" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Firefox</sci:value>
								<sci:value>Firefox</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>The location for Firefox</sci:help>
						<sci:value>firefox</sci:value>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval>ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>DrainTopDown</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>
						<sci:legalval>Owner Access Only</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>dbondarev</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Sat Apr 07 23:20:34 2018</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>HTML Report Viewer (Semantic UI)</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>ReportViewerNode</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>SubProtocol</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{185627DA-2D3A-41F3-BC57-ABDB16E41D1A}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>1002 -720</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Displays the results of a reporting protocol in HTML5 format</sci:value>
						<sci:value>&lt;p&gt;This component accepts reporting objects as input (e.g., tables, text and images), and displays the output as an HTML file in Internet Explorer.&lt;/p&gt;</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>This component accepts reporting objects as input.</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>16.1.0.1140</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>13</sci:value>
					</sci:arg>
					<sci:arg name="OriginalPackage" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>OriginalPackage</sci:help>
						<sci:value>scitegic/report</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Semantic UI\Viewers and Writers\HTML Report Viewer (Semantic UI)</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol/>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="DataTable (Semantic UI)" version="2">
					<sci:arg name="Exclude Properties" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Exclude Properties</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>&lt;p&gt;A comma-delimited list of properties which will not be rendered in an autogenerated table.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Horizontal Scrollbar" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>&lt;p&gt;DataTables has the ability to show tables with horizontal scrolling, which is very useful for when you have a wide table, but want to constrain it to a limited horizontal display area.&lt;/p&gt;
&lt;p&gt;When set for tables that do not go beyond screen width, columns will be sized to the width of their contents, making the table appear narrow.&lt;/p&gt;</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Column Order" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Column Order</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>&lt;p&gt;A comma-separated list of Header Text names (which may differ from the corresponding property names), indicating the order the columns should appear. Any non-listed properties will be added as subsequent columns.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The column names are case-sensitive&lt;/li&gt;
&lt;/ul&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Show Entries Choices" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;Choices on the &quot;Show ... entries&quot; pulldown menu above the table. The first choice is used to initially display the table. Use a comma to separate the choices.&lt;/p&gt;
&lt;p&gt;Note: When used with a Data Connector component, all rows will be shown and this parameter setting will be ignored.&lt;/p&gt;</sci:help>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable &apos;.ParameterName().&apos;, set Data Connector / Publisher Subscriber Model to &quot;None&quot;&apos;);
	Parameter(&apos;Publisher Subscriber Model&apos;) eq &apos;None&apos;;</sci:enabledscript>
						<sci:value>10,25,50</sci:value>
					</sci:arg>
					<sci:arg name="Array Value Display" type="StringType" required="true" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Array Value Display</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>&lt;p&gt;Determines how array values are separated when they are displayed in an autogenerated table.&lt;/p&gt;</sci:help>
						<sci:legalval>Separate by Commas</sci:legalval>
						<sci:legalval selected="true">Separate by Newlines</sci:legalval>
						<sci:legalval>One Array Element per Cell</sci:legalval>
					</sci:arg>
					<sci:arg name="Data Connector" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Data Connector</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>Parameters related to the Data Connector interactivity model.</sci:help>
						<sci:member>Subscriber Event Handling</sci:member>
						<sci:member>Publisher Event Handling</sci:member>
						<sci:member>Publisher Subscriber Model</sci:member>
					</sci:arg>
					<sci:arg name="Publisher Subscriber Model" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Publisher Subscriber Model</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>Whether the component is a publisher, subscriber or both. Setting to &apos;None&apos; bypasses any Data Connector node.</sci:help>
						<sci:legalval selected="true">Publisher and Subscriber</sci:legalval>
						<sci:legalval>Publisher</sci:legalval>
						<sci:legalval>Subscriber</sci:legalval>
						<sci:legalval>None</sci:legalval>
					</sci:arg>
					<sci:arg name="Subscriber Event Handling" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Subscriber Event Handling</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>&lt;p&gt;Setting the on subscription event handling method.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;The publisher component always highlights.</sci:help>
						<sci:enabledscript>ModelParameterName := StrReplace(ParameterName(), &quot;Subscriber Event Handling&quot;, &quot;Publisher Subscriber Model&quot;);
enabled := Parameter(ModelParameterName) not EQ &apos;Publisher&apos; AND Parameter(ModelParameterName) not EQ &apos;None&apos;;
if (not enabled) then
     SetDisabledDetails(&apos;This parameter is not enabled when the Publisher Subscriber Model is set to &quot;Publisher&quot; only or &quot;None&quot;&apos;);
End if;
enabled;</sci:enabledscript>
						<sci:legalval selected="true">Highlight</sci:legalval>
						<sci:legalval>Filter</sci:legalval>
						<sci:legalval>Reverse Filter</sci:legalval>
					</sci:arg>
					<sci:arg name="Publisher Event Handling" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Publisher Event Handling</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>&lt;p&gt;Setting the publishing event type.&lt;/p&gt;</sci:help>
						<sci:enabledscript>ModelParameterName := StrReplace(ParameterName(), &quot;Publisher Event Handling&quot;, &quot;Publisher Subscriber Model&quot;);
enabled := Parameter(ModelParameterName) not EQ &apos;Subscriber&apos; AND Parameter(ModelParameterName) not EQ &apos;None&apos;;
if (not enabled) then
     SetDisabledDetails(&apos;This parameter is not enabled when the Publisher Subscriber Model is set to &quot;Subscriber&quot; only or &quot;None&quot;&apos;);
End if;
enabled;</sci:enabledscript>
						<sci:legalval selected="true">On Click</sci:legalval>
						<sci:legalval>On Mouse Over</sci:legalval>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;A comma-delimited list of global properties, each of which is automatically populated with the name of a file in the job&apos;s temporary folder, which always has a unique name.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold only the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;

&lt;p&gt;Any global property not declared in this way is created on the top-level global property list and is accessible from all subprotocols, but breaks the encapsulation of the subprotocol and may collide with another property of the same name.&lt;/p&gt;

&lt;p&gt;Therefore, you should always declare a new global property in the &lt;i&gt;DeclareLocal&lt;/i&gt; parameter, to scope the global property to the subprotocol where it is used.&lt;/p&gt;</sci:help>
						<sci:value>guid</sci:value>
					</sci:arg>
					<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
						<sci:member>RunToCompletion Categorize Using</sci:member>
						<sci:legalval selected="true">False</sci:legalval>
						<sci:legalval>True - For Each Data Record</sci:legalval>
						<sci:legalval>True - For Each Category</sci:legalval>
					</sci:arg>
					<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;
When set to True, this set of options allows the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running locally or remotely.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option with care, since it will not increase throughput in all circumstances. Generally speaking, it yields improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
						<sci:member>Parallel Processing Options Batch Size</sci:member>
						<sci:member>Parallel Processing Options Server</sci:member>
						<sci:member>Parallel Processing Options Preserve Order</sci:member>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
						<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
end if;
#parallel;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
						<sci:help>&lt;p&gt;
A comma-separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (that is, server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be useful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
						<sci:member>Parallel Processing Options Server Processes</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>A comma-separated list of the maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
						<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Run subprotocol on grid engine if available.</sci:help>
						<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid Grid Options</sci:member>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
						<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Grid Options" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Use this to specify grid engine specific command line parameters to the job submission command. Leave blank to use defaults.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Constant GUID" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Override an automatically set GUID inside the component with this value.&lt;/p&gt; &lt;p&gt;If set, HTML element(s) will have their IDs set using this value instead of a randomly generated one.&lt;/p&gt;&lt;p&gt;Spaces or special characters are not allowed, only alphanumeric. The ID is case-sensitive.&lt;/p&gt;
</sci:help>
						<sci:validscript>SetInvalidDetails(ParameterName() . &apos; must be alphanumeric. Spaces or special characters are not allowed.&apos;);
numValues(rMatch(Parameter(), &apos;[^a-zA-Z0-9]+&apos;, &apos;ig&apos;)) == 0;</sci:validscript>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>DataTable (Semantic UI)</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>ReportTableNode</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>790</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{E77A1652-6E9C-4995-A388-087355A11D06}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>690 -895</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>DataTable (Semantic UI).</sci:value>
						<sci:value>&lt;p&gt;DataTable implements interactive HTML table display using code copied from http://datatables.net.&lt;/p&gt;
&lt;p&gt;Note: When used with a Data Connector component, all rows will be shown and the &quot;Show Entries Choices&quot; parameter setting will be ignored.&lt;/p&gt;</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
						<sci:value>None</sci:value>
						<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>16.1.0.1140</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval>Owner Access Only</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>bondadx2</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Tue Oct 24 20:45:37 2017</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>14</sci:value>
					</sci:arg>
					<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Processing Order</sci:help>
						<sci:value>DrainTopDown</sci:value>
					</sci:arg>
					<sci:arg name="OriginalPackage" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>OriginalPackage</sci:help>
						<sci:value>scitegic/coreutils</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Semantic UI\Tables\DataTable (Semantic UI)</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol/>
			</sci:data>
			<sci:connectid from="4" to="13" type="true"/>
			<sci:connectid from="11" to="13" type="true"/>
			<sci:connectid from="5" to="12" type="true"/>
			<sci:connectid from="12" to="11" type="true"/>
			<sci:connectid from="12" to="14" type="true"/>
			<sci:connectid from="14" to="13" type="true"/>
			<sci:version iVal="1"/>
		</sci:protocol>
	</sci:dbitem>
<!-- Exported protocol -->
<sci:component name="8.0 Protocol Warning" version="2">
<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
<sci:help>Component Icon</sci:help>
<sci:value>PROTOCOLNODE</sci:value>
</sci:arg>
<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
<sci:help>Protocol Sticky Notes</sci:help>
<sci:value>%VERSION 3%</sci:value>
<sci:value>400 -219 1222 221</sci:value>
<sci:value>250 120 20</sci:value>
<sci:value>WARNING! This is a Pipeline Pilot protocol written in version 8.0 or later. It contains features that are not supported in earlier versions of Pipeline Pilot.</sci:value>
</sci:arg>
</sci:component>
</sci:data>

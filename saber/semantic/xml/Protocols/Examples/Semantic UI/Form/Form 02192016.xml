<?xml version="1.0" encoding="UTF-8"?>
<sci:data xmlns:sci="http://www.SciTegic.com/" object="SciTegic.Protocol.1" format="8.0.0">
	<sci:dbitem>
		<sci:component name="Form 02192016" version="2">
			<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;/p&gt;

&lt;p&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
			</sci:arg>
			<sci:arg name="Protocol Form" type="ProtocolType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;The path to a protocol that will render an HTML user interface for this protocol.  This optional parameter is used by Web Port to provide a custom user interface for a protocol.&lt;/p&gt;</sci:help>
			</sci:arg>
			<sci:arg name="Advanced Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false" uimpl="true">
				<sci:member>__PoolID</sci:member>
			</sci:arg>
			<sci:arg name="__PoolID" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;&lt;i&gt;__PoolID&lt;/i&gt; is a case insensitive string that can optionally be set to optimize the speed of execution for quick running protocols.  Multiple protocols with the same value for &lt;i&gt;__PoolID&lt;/i&gt; can share expensive resources such as database connections, Java VMs, memory, etc. reducing the execution time by 1 to 2 seconds per run.  This can give a large speed improvement to protocols that run in a few seconds such as web applications and interactive reports.  Longer running protocols will not see much benefit.  Generally, it is a good idea to use the same &lt;i&gt;__PoolID&lt;/i&gt; for all protocols within a single application such as an interactive report since many of the components, databases, and data structures will be similar.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;__PoolID&lt;/i&gt; can also be specified by the client when the protocol is launched.  If &lt;i&gt;__PoolID&lt;/i&gt; is specified both as a parameter by the client and as a parameter stored within the protocol, the client&apos;s value overrides the stored value.&lt;/p&gt;</sci:help>
			</sci:arg>
			<sci:arg name="Reporting" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
				<sci:help>This group contains parameters specific to protocols containing Reporting components.</sci:help>
				<sci:member>Reporting Stylesheet</sci:member>
			</sci:arg>
			<sci:arg name="Reporting Stylesheet" type="StylesheetType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
				<sci:help>Specifies the name of a Stylesheet to be used by this protocol if any of the Reporting components have a Style selected in the &lt;i&gt;Format&lt;/i&gt; and &lt;i&gt;Position&lt;/i&gt; parameters.</sci:help>
				<sci:value>{44C6ECA7-D7C8-4BD8-A0C6-450FF605F58B}</sci:value>
			</sci:arg>
			<sci:arg name="Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>The Run On Grid parameter tells the server to run the protocol on the grid engine if SES is configured to run with grid integration.</sci:help>
				<sci:member>Queue Name</sci:member>
				<sci:member>Grid Options</sci:member>
				<sci:legalval>True</sci:legalval>
				<sci:legalval selected="true">False</sci:legalval>
			</sci:arg>
			<sci:arg name="Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
				<sci:help>The Queue Name allows you to specify the name of the queue on the grid engine to submit the job to. Leave blank to specify the default queue.</sci:help>
				<sci:enabledscript>parameter(&apos;Run On Grid&apos;);</sci:enabledscript>
			</sci:arg>
			<sci:arg name="Grid Options" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
				<sci:help>Grid Options allows you to specify options to the grid engine submit command. Leave blank to specify the default options.</sci:help>
				<sci:enabledscript>parameter(&apos;Run On Grid&apos;);</sci:enabledscript>
			</sci:arg>
			<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
				<sci:help>Component Attributes</sci:help>
				<sci:legalval>ComponentTakesInput</sci:legalval>
				<sci:legalval>ComponentReturnsPass</sci:legalval>
				<sci:legalval>ComponentReturnsFail</sci:legalval>
				<sci:legalval>ComponentRunsLocal</sci:legalval>
			</sci:arg>
			<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
				<sci:legalval selected="true">Halt</sci:legalval>
				<sci:legalval>Fail</sci:legalval>
				<sci:legalval>Pass</sci:legalval>
			</sci:arg>
			<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
				<sci:legalval selected="true">Halt</sci:legalval>
				<sci:legalval>Fail</sci:legalval>
				<sci:legalval>Pass</sci:legalval>
			</sci:arg>
			<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
			<sci:arg name="WebExports" type="StringType" required="false" visibility="nevershow" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;A comma delimited list of global properties which will be automatically 
exported if this protocol is published as a web service.&lt;/p&gt;

&lt;p&gt;Each global property in the list is created with an empty value at the start of the protocol run.&lt;/p&gt;</sci:help>
			</sci:arg>
			<sci:arg name="Keep Alive" type="BoolType" required="false" visibility="nevershow" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;Specifies if the process where this protocol is run should stay around for later use.&lt;/p&gt;</sci:help>
				<sci:legalval selected="true">True</sci:legalval>
				<sci:legalval>False</sci:legalval>
			</sci:arg>
			<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>The user who registered this component.</sci:help>
				<sci:value>bondadx2</sci:value>
			</sci:arg>
			<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>The date this component was registered.</sci:help>
				<sci:value>Sat Apr 07 23:23:02 2018</sci:value>
			</sci:arg>
			<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>The server version when this component was registered</sci:help>
				<sci:value>16.1.0.1140</sci:value>
			</sci:arg>
			<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:value>Semantic form test</sci:value>
			</sci:arg>
			<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
				<sci:help>Protocol AutoLayout</sci:help>
				<sci:value>0</sci:value>
			</sci:arg>
			<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
				<sci:value>PROTOCOLNODE</sci:value>
			</sci:arg>
			<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
				<sci:help>Component Revision</sci:help>
				<sci:value>790</sci:value>
			</sci:arg>
			<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:value>{71B8CE52-A5CD-468D-AECD-4205F33228B0}</sci:value>
			</sci:arg>
			<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
				<sci:help>By Ref</sci:help>
				<sci:value>0</sci:value>
			</sci:arg>
			<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
				<sci:value>100</sci:value>
				<sci:value>Semantic form test</sci:value>
				<sci:value>An example of an interactive input form.</sci:value>
				<sci:value>None</sci:value>
				<sci:value/>
				<sci:value>None</sci:value>
				<sci:value/>
				<sci:value>None</sci:value>
				<sci:value/>
			</sci:arg>
			<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
			<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
				<sci:help>Protocol Scale</sci:help>
				<sci:value>100</sci:value>
			</sci:arg>
			<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>Protocol Sticky Notes</sci:help>
				<sci:value>%VERSION 3%</sci:value>
				<sci:value>1561 -95 1177 177</sci:value>
				<sci:value>255 255 0</sci:value>
				<sci:value>Reproduced from
http://semantic-ui.com/collections/form.html</sci:value>
			</sci:arg>
			<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>Protocol Options</sci:help>
				<sci:legalval>Owner Access Only</sci:legalval>
			</sci:arg>
			<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
				<sci:value>0</sci:value>
			</sci:arg>
			<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
				<sci:help>Local Component Identifier</sci:help>
				<sci:value>-1</sci:value>
			</sci:arg>
			<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:value>50 -50</sci:value>
			</sci:arg>
			<sci:arg name="OriginalPackage" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>OriginalPackage</sci:help>
				<sci:value>scitegic/coreutils</sci:value>
			</sci:arg>
			<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>The original path within the database of this component.</sci:help>
				<sci:value>Protocols\Examples\Semantic UI\Form\Form 02192016</sci:value>
			</sci:arg>
		</sci:component>
		<sci:protocol>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="Form Section Header (Semantic UI)" version="2">
					<sci:arg name="Header Text" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>The text of the form section header, e.g. Shipping Infomation.</sci:help>
						<sci:value>Shipping Information</sci:value>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
						<sci:member>RunToCompletion Categorize Using</sci:member>
						<sci:legalval selected="true">False</sci:legalval>
						<sci:legalval>True - For Each Data Record</sci:legalval>
						<sci:legalval>True - For Each Category</sci:legalval>
					</sci:arg>
					<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
						<sci:member>Parallel Processing Options Batch Size</sci:member>
						<sci:member>Parallel Processing Options Server</sci:member>
						<sci:member>Parallel Processing Options Preserve Order</sci:member>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
						<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
#rtcForEachCategory := (Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
elsif (#rtcForEachCategory) then
	SetDisabledDetails(&quot;This parameter is not applicable when &apos;RunToCompletion&apos; is set to &apos;True - For Each Category&apos;&quot;);
end if;
#parallel and not #rtcForEachCategory;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="false">
						<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
						<sci:member>Parallel Processing Options Server Processes</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
						<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Run subprotocol on grid engine if available.</sci:help>
						<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid Grid Options</sci:member>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Grid Options" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Use this to specify grid engine specific command line parameters to the job submission command. Leave blank to use defaults.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval>ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Form Section Header (Semantic UI)</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>ReportSubProtocolNode</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>790</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{8C0474A2-41D8-4027-ACA4-FFA84714204F}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>978 -95</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Form Section Header (Semantic UI).</sci:value>
						<sci:value>&lt;p&gt;A header for a form section.&lt;/p&gt;</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
						<sci:value>None</sci:value>
						<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>9.2.0.484</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval>Owner Access Only</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>bondadx2</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Fri Apr 22 16:48:19 2016</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>109</sci:value>
					</sci:arg>
					<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Processing Order</sci:help>
						<sci:value>DrainTopDown</sci:value>
					</sci:arg>
					<sci:arg name="OriginalPackage" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>OriginalPackage</sci:help>
						<sci:value>scitegic/coreutils</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Semantic UI\Forms\Formatting Elements\Form Section Header (Semantic UI)</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol/>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="Raw HTML (Semantic UI)" version="2">
					<sci:arg name="HTML" type="TextType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:value>
  &lt;h4 class=&quot;ui dividing header&quot;&gt;Shipping Information&lt;/h4&gt;
  &lt;div class=&quot;field&quot;&gt;
    &lt;label&gt;Name&lt;/label&gt;
    &lt;div class=&quot;two fields&quot;&gt;
      &lt;div class=&quot;field&quot;&gt;
        &lt;input type=&quot;text&quot; name=&quot;shipping[first-name]&quot; placeholder=&quot;First Name&quot;&gt;
      &lt;/div&gt;
      &lt;div class=&quot;field&quot;&gt;
        &lt;input type=&quot;text&quot; name=&quot;shipping[last-name]&quot; placeholder=&quot;Last Name&quot;&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&quot;field&quot;&gt;
    &lt;label&gt;Billing Address&lt;/label&gt;
    &lt;div class=&quot;fields&quot;&gt;
      &lt;div class=&quot;twelve wide field&quot;&gt;
        &lt;input type=&quot;text&quot; name=&quot;shipping[address]&quot; placeholder=&quot;Street Address&quot;&gt;
      &lt;/div&gt;
      &lt;div class=&quot;four wide field&quot;&gt;
        &lt;input type=&quot;text&quot; name=&quot;shipping[address-2]&quot; placeholder=&quot;Apt #&quot;&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&quot;two fields&quot;&gt;
    &lt;div class=&quot;field&quot;&gt;
      &lt;label&gt;State&lt;/label&gt;
      &lt;select class=&quot;ui fluid dropdown&quot;&gt;
        &lt;option value=&quot;&quot;&gt;State&lt;/option&gt;
    &lt;option value=&quot;AL&quot;&gt;Alabama&lt;/option&gt;
    &lt;option value=&quot;AK&quot;&gt;Alaska&lt;/option&gt;
    &lt;option value=&quot;AZ&quot;&gt;Arizona&lt;/option&gt;
    &lt;option value=&quot;AR&quot;&gt;Arkansas&lt;/option&gt;
    &lt;option value=&quot;CA&quot;&gt;California&lt;/option&gt;
    &lt;option value=&quot;CO&quot;&gt;Colorado&lt;/option&gt;
    &lt;option value=&quot;CT&quot;&gt;Connecticut&lt;/option&gt;
    &lt;option value=&quot;DE&quot;&gt;Delaware&lt;/option&gt;
    &lt;option value=&quot;DC&quot;&gt;District Of Columbia&lt;/option&gt;
    &lt;option value=&quot;FL&quot;&gt;Florida&lt;/option&gt;
    &lt;option value=&quot;GA&quot;&gt;Georgia&lt;/option&gt;
    &lt;option value=&quot;HI&quot;&gt;Hawaii&lt;/option&gt;
    &lt;option value=&quot;ID&quot;&gt;Idaho&lt;/option&gt;
    &lt;option value=&quot;IL&quot;&gt;Illinois&lt;/option&gt;
    &lt;option value=&quot;IN&quot;&gt;Indiana&lt;/option&gt;
    &lt;option value=&quot;IA&quot;&gt;Iowa&lt;/option&gt;
    &lt;option value=&quot;KS&quot;&gt;Kansas&lt;/option&gt;
    &lt;option value=&quot;KY&quot;&gt;Kentucky&lt;/option&gt;
    &lt;option value=&quot;LA&quot;&gt;Louisiana&lt;/option&gt;
    &lt;option value=&quot;ME&quot;&gt;Maine&lt;/option&gt;
    &lt;option value=&quot;MD&quot;&gt;Maryland&lt;/option&gt;
    &lt;option value=&quot;MA&quot;&gt;Massachusetts&lt;/option&gt;
    &lt;option value=&quot;MI&quot;&gt;Michigan&lt;/option&gt;
    &lt;option value=&quot;MN&quot;&gt;Minnesota&lt;/option&gt;
    &lt;option value=&quot;MS&quot;&gt;Mississippi&lt;/option&gt;
    &lt;option value=&quot;MO&quot;&gt;Missouri&lt;/option&gt;
    &lt;option value=&quot;MT&quot;&gt;Montana&lt;/option&gt;
    &lt;option value=&quot;NE&quot;&gt;Nebraska&lt;/option&gt;
    &lt;option value=&quot;NV&quot;&gt;Nevada&lt;/option&gt;
    &lt;option value=&quot;NH&quot;&gt;New Hampshire&lt;/option&gt;
    &lt;option value=&quot;NJ&quot;&gt;New Jersey&lt;/option&gt;
    &lt;option value=&quot;NM&quot;&gt;New Mexico&lt;/option&gt;
    &lt;option value=&quot;NY&quot;&gt;New York&lt;/option&gt;
    &lt;option value=&quot;NC&quot;&gt;North Carolina&lt;/option&gt;
    &lt;option value=&quot;ND&quot;&gt;North Dakota&lt;/option&gt;
    &lt;option value=&quot;OH&quot;&gt;Ohio&lt;/option&gt;
    &lt;option value=&quot;OK&quot;&gt;Oklahoma&lt;/option&gt;
    &lt;option value=&quot;OR&quot;&gt;Oregon&lt;/option&gt;
    &lt;option value=&quot;PA&quot;&gt;Pennsylvania&lt;/option&gt;
    &lt;option value=&quot;RI&quot;&gt;Rhode Island&lt;/option&gt;
    &lt;option value=&quot;SC&quot;&gt;South Carolina&lt;/option&gt;
    &lt;option value=&quot;SD&quot;&gt;South Dakota&lt;/option&gt;
    &lt;option value=&quot;TN&quot;&gt;Tennessee&lt;/option&gt;
    &lt;option value=&quot;TX&quot;&gt;Texas&lt;/option&gt;
    &lt;option value=&quot;UT&quot;&gt;Utah&lt;/option&gt;
    &lt;option value=&quot;VT&quot;&gt;Vermont&lt;/option&gt;
    &lt;option value=&quot;VA&quot;&gt;Virginia&lt;/option&gt;
    &lt;option value=&quot;WA&quot;&gt;Washington&lt;/option&gt;
    &lt;option value=&quot;WV&quot;&gt;West Virginia&lt;/option&gt;
    &lt;option value=&quot;WI&quot;&gt;Wisconsin&lt;/option&gt;
    &lt;option value=&quot;WY&quot;&gt;Wyoming&lt;/option&gt;
      &lt;/select&gt;
    &lt;/div&gt;
    &lt;div class=&quot;field&quot;&gt;
      &lt;label&gt;Country&lt;/label&gt;
      &lt;div class=&quot;ui fluid search selection dropdown&quot;&gt;
        &lt;input type=&quot;hidden&quot; name=&quot;country&quot;&gt;
        &lt;i class=&quot;dropdown icon&quot;&gt;&lt;/i&gt;
        &lt;div class=&quot;default text&quot;&gt;Select Country&lt;/div&gt;
        &lt;div class=&quot;menu&quot;&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;af&quot;&gt;&lt;i class=&quot;af flag&quot;&gt;&lt;/i&gt;Afghanistan&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;ax&quot;&gt;&lt;i class=&quot;ax flag&quot;&gt;&lt;/i&gt;Aland Islands&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;al&quot;&gt;&lt;i class=&quot;al flag&quot;&gt;&lt;/i&gt;Albania&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;dz&quot;&gt;&lt;i class=&quot;dz flag&quot;&gt;&lt;/i&gt;Algeria&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;as&quot;&gt;&lt;i class=&quot;as flag&quot;&gt;&lt;/i&gt;American Samoa&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;ad&quot;&gt;&lt;i class=&quot;ad flag&quot;&gt;&lt;/i&gt;Andorra&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;ao&quot;&gt;&lt;i class=&quot;ao flag&quot;&gt;&lt;/i&gt;Angola&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;ai&quot;&gt;&lt;i class=&quot;ai flag&quot;&gt;&lt;/i&gt;Anguilla&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;ag&quot;&gt;&lt;i class=&quot;ag flag&quot;&gt;&lt;/i&gt;Antigua&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;ar&quot;&gt;&lt;i class=&quot;ar flag&quot;&gt;&lt;/i&gt;Argentina&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;am&quot;&gt;&lt;i class=&quot;am flag&quot;&gt;&lt;/i&gt;Armenia&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;aw&quot;&gt;&lt;i class=&quot;aw flag&quot;&gt;&lt;/i&gt;Aruba&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;au&quot;&gt;&lt;i class=&quot;au flag&quot;&gt;&lt;/i&gt;Australia&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;at&quot;&gt;&lt;i class=&quot;at flag&quot;&gt;&lt;/i&gt;Austria&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;az&quot;&gt;&lt;i class=&quot;az flag&quot;&gt;&lt;/i&gt;Azerbaijan&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;bs&quot;&gt;&lt;i class=&quot;bs flag&quot;&gt;&lt;/i&gt;Bahamas&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;bh&quot;&gt;&lt;i class=&quot;bh flag&quot;&gt;&lt;/i&gt;Bahrain&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;bd&quot;&gt;&lt;i class=&quot;bd flag&quot;&gt;&lt;/i&gt;Bangladesh&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;bb&quot;&gt;&lt;i class=&quot;bb flag&quot;&gt;&lt;/i&gt;Barbados&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;by&quot;&gt;&lt;i class=&quot;by flag&quot;&gt;&lt;/i&gt;Belarus&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;be&quot;&gt;&lt;i class=&quot;be flag&quot;&gt;&lt;/i&gt;Belgium&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;bz&quot;&gt;&lt;i class=&quot;bz flag&quot;&gt;&lt;/i&gt;Belize&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;bj&quot;&gt;&lt;i class=&quot;bj flag&quot;&gt;&lt;/i&gt;Benin&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;bm&quot;&gt;&lt;i class=&quot;bm flag&quot;&gt;&lt;/i&gt;Bermuda&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;bt&quot;&gt;&lt;i class=&quot;bt flag&quot;&gt;&lt;/i&gt;Bhutan&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;bo&quot;&gt;&lt;i class=&quot;bo flag&quot;&gt;&lt;/i&gt;Bolivia&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;ba&quot;&gt;&lt;i class=&quot;ba flag&quot;&gt;&lt;/i&gt;Bosnia&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;bw&quot;&gt;&lt;i class=&quot;bw flag&quot;&gt;&lt;/i&gt;Botswana&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;bv&quot;&gt;&lt;i class=&quot;bv flag&quot;&gt;&lt;/i&gt;Bouvet Island&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;br&quot;&gt;&lt;i class=&quot;br flag&quot;&gt;&lt;/i&gt;Brazil&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;vg&quot;&gt;&lt;i class=&quot;vg flag&quot;&gt;&lt;/i&gt;British Virgin Islands&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;bn&quot;&gt;&lt;i class=&quot;bn flag&quot;&gt;&lt;/i&gt;Brunei&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;bg&quot;&gt;&lt;i class=&quot;bg flag&quot;&gt;&lt;/i&gt;Bulgaria&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;bf&quot;&gt;&lt;i class=&quot;bf flag&quot;&gt;&lt;/i&gt;Burkina Faso&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;ar&quot;&gt;&lt;i class=&quot;ar flag&quot;&gt;&lt;/i&gt;Burma&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;bi&quot;&gt;&lt;i class=&quot;bi flag&quot;&gt;&lt;/i&gt;Burundi&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;tc&quot;&gt;&lt;i class=&quot;tc flag&quot;&gt;&lt;/i&gt;Caicos Islands&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;kh&quot;&gt;&lt;i class=&quot;kh flag&quot;&gt;&lt;/i&gt;Cambodia&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;cm&quot;&gt;&lt;i class=&quot;cm flag&quot;&gt;&lt;/i&gt;Cameroon&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;ca&quot;&gt;&lt;i class=&quot;ca flag&quot;&gt;&lt;/i&gt;Canada&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;cv&quot;&gt;&lt;i class=&quot;cv flag&quot;&gt;&lt;/i&gt;Cape Verde&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;ky&quot;&gt;&lt;i class=&quot;ky flag&quot;&gt;&lt;/i&gt;Cayman Islands&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;cf&quot;&gt;&lt;i class=&quot;cf flag&quot;&gt;&lt;/i&gt;Central African Republic&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;td&quot;&gt;&lt;i class=&quot;td flag&quot;&gt;&lt;/i&gt;Chad&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;cl&quot;&gt;&lt;i class=&quot;cl flag&quot;&gt;&lt;/i&gt;Chile&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;cn&quot;&gt;&lt;i class=&quot;cn flag&quot;&gt;&lt;/i&gt;China&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;cx&quot;&gt;&lt;i class=&quot;cx flag&quot;&gt;&lt;/i&gt;Christmas Island&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;cc&quot;&gt;&lt;i class=&quot;cc flag&quot;&gt;&lt;/i&gt;Cocos Islands&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;co&quot;&gt;&lt;i class=&quot;co flag&quot;&gt;&lt;/i&gt;Colombia&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;km&quot;&gt;&lt;i class=&quot;km flag&quot;&gt;&lt;/i&gt;Comoros&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;cg&quot;&gt;&lt;i class=&quot;cg flag&quot;&gt;&lt;/i&gt;Congo Brazzaville&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;cd&quot;&gt;&lt;i class=&quot;cd flag&quot;&gt;&lt;/i&gt;Congo&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;ck&quot;&gt;&lt;i class=&quot;ck flag&quot;&gt;&lt;/i&gt;Cook Islands&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;cr&quot;&gt;&lt;i class=&quot;cr flag&quot;&gt;&lt;/i&gt;Costa Rica&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;ci&quot;&gt;&lt;i class=&quot;ci flag&quot;&gt;&lt;/i&gt;Cote Divoire&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;hr&quot;&gt;&lt;i class=&quot;hr flag&quot;&gt;&lt;/i&gt;Croatia&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;cu&quot;&gt;&lt;i class=&quot;cu flag&quot;&gt;&lt;/i&gt;Cuba&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;cy&quot;&gt;&lt;i class=&quot;cy flag&quot;&gt;&lt;/i&gt;Cyprus&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;cz&quot;&gt;&lt;i class=&quot;cz flag&quot;&gt;&lt;/i&gt;Czech Republic&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;dk&quot;&gt;&lt;i class=&quot;dk flag&quot;&gt;&lt;/i&gt;Denmark&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;dj&quot;&gt;&lt;i class=&quot;dj flag&quot;&gt;&lt;/i&gt;Djibouti&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;dm&quot;&gt;&lt;i class=&quot;dm flag&quot;&gt;&lt;/i&gt;Dominica&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;do&quot;&gt;&lt;i class=&quot;do flag&quot;&gt;&lt;/i&gt;Dominican Republic&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;ec&quot;&gt;&lt;i class=&quot;ec flag&quot;&gt;&lt;/i&gt;Ecuador&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;eg&quot;&gt;&lt;i class=&quot;eg flag&quot;&gt;&lt;/i&gt;Egypt&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;sv&quot;&gt;&lt;i class=&quot;sv flag&quot;&gt;&lt;/i&gt;El Salvador&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;gb&quot;&gt;&lt;i class=&quot;gb flag&quot;&gt;&lt;/i&gt;England&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;gq&quot;&gt;&lt;i class=&quot;gq flag&quot;&gt;&lt;/i&gt;Equatorial Guinea&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;er&quot;&gt;&lt;i class=&quot;er flag&quot;&gt;&lt;/i&gt;Eritrea&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;ee&quot;&gt;&lt;i class=&quot;ee flag&quot;&gt;&lt;/i&gt;Estonia&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;et&quot;&gt;&lt;i class=&quot;et flag&quot;&gt;&lt;/i&gt;Ethiopia&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;eu&quot;&gt;&lt;i class=&quot;eu flag&quot;&gt;&lt;/i&gt;European Union&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;fk&quot;&gt;&lt;i class=&quot;fk flag&quot;&gt;&lt;/i&gt;Falkland Islands&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;fo&quot;&gt;&lt;i class=&quot;fo flag&quot;&gt;&lt;/i&gt;Faroe Islands&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;fj&quot;&gt;&lt;i class=&quot;fj flag&quot;&gt;&lt;/i&gt;Fiji&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;fi&quot;&gt;&lt;i class=&quot;fi flag&quot;&gt;&lt;/i&gt;Finland&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;fr&quot;&gt;&lt;i class=&quot;fr flag&quot;&gt;&lt;/i&gt;France&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;gf&quot;&gt;&lt;i class=&quot;gf flag&quot;&gt;&lt;/i&gt;French Guiana&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;pf&quot;&gt;&lt;i class=&quot;pf flag&quot;&gt;&lt;/i&gt;French Polynesia&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;tf&quot;&gt;&lt;i class=&quot;tf flag&quot;&gt;&lt;/i&gt;French Territories&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;ga&quot;&gt;&lt;i class=&quot;ga flag&quot;&gt;&lt;/i&gt;Gabon&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;gm&quot;&gt;&lt;i class=&quot;gm flag&quot;&gt;&lt;/i&gt;Gambia&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;ge&quot;&gt;&lt;i class=&quot;ge flag&quot;&gt;&lt;/i&gt;Georgia&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;de&quot;&gt;&lt;i class=&quot;de flag&quot;&gt;&lt;/i&gt;Germany&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;gh&quot;&gt;&lt;i class=&quot;gh flag&quot;&gt;&lt;/i&gt;Ghana&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;gi&quot;&gt;&lt;i class=&quot;gi flag&quot;&gt;&lt;/i&gt;Gibraltar&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;gr&quot;&gt;&lt;i class=&quot;gr flag&quot;&gt;&lt;/i&gt;Greece&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;gl&quot;&gt;&lt;i class=&quot;gl flag&quot;&gt;&lt;/i&gt;Greenland&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;gd&quot;&gt;&lt;i class=&quot;gd flag&quot;&gt;&lt;/i&gt;Grenada&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;gp&quot;&gt;&lt;i class=&quot;gp flag&quot;&gt;&lt;/i&gt;Guadeloupe&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;gu&quot;&gt;&lt;i class=&quot;gu flag&quot;&gt;&lt;/i&gt;Guam&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;gt&quot;&gt;&lt;i class=&quot;gt flag&quot;&gt;&lt;/i&gt;Guatemala&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;gw&quot;&gt;&lt;i class=&quot;gw flag&quot;&gt;&lt;/i&gt;Guinea-Bissau&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;gn&quot;&gt;&lt;i class=&quot;gn flag&quot;&gt;&lt;/i&gt;Guinea&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;gy&quot;&gt;&lt;i class=&quot;gy flag&quot;&gt;&lt;/i&gt;Guyana&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;ht&quot;&gt;&lt;i class=&quot;ht flag&quot;&gt;&lt;/i&gt;Haiti&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;hm&quot;&gt;&lt;i class=&quot;hm flag&quot;&gt;&lt;/i&gt;Heard Island&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;hn&quot;&gt;&lt;i class=&quot;hn flag&quot;&gt;&lt;/i&gt;Honduras&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;hk&quot;&gt;&lt;i class=&quot;hk flag&quot;&gt;&lt;/i&gt;Hong Kong&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;hu&quot;&gt;&lt;i class=&quot;hu flag&quot;&gt;&lt;/i&gt;Hungary&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;is&quot;&gt;&lt;i class=&quot;is flag&quot;&gt;&lt;/i&gt;Iceland&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;in&quot;&gt;&lt;i class=&quot;in flag&quot;&gt;&lt;/i&gt;India&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;io&quot;&gt;&lt;i class=&quot;io flag&quot;&gt;&lt;/i&gt;Indian Ocean Territory&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;id&quot;&gt;&lt;i class=&quot;id flag&quot;&gt;&lt;/i&gt;Indonesia&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;ir&quot;&gt;&lt;i class=&quot;ir flag&quot;&gt;&lt;/i&gt;Iran&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;iq&quot;&gt;&lt;i class=&quot;iq flag&quot;&gt;&lt;/i&gt;Iraq&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;ie&quot;&gt;&lt;i class=&quot;ie flag&quot;&gt;&lt;/i&gt;Ireland&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;il&quot;&gt;&lt;i class=&quot;il flag&quot;&gt;&lt;/i&gt;Israel&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;it&quot;&gt;&lt;i class=&quot;it flag&quot;&gt;&lt;/i&gt;Italy&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;jm&quot;&gt;&lt;i class=&quot;jm flag&quot;&gt;&lt;/i&gt;Jamaica&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;jp&quot;&gt;&lt;i class=&quot;jp flag&quot;&gt;&lt;/i&gt;Japan&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;jo&quot;&gt;&lt;i class=&quot;jo flag&quot;&gt;&lt;/i&gt;Jordan&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;kz&quot;&gt;&lt;i class=&quot;kz flag&quot;&gt;&lt;/i&gt;Kazakhstan&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;ke&quot;&gt;&lt;i class=&quot;ke flag&quot;&gt;&lt;/i&gt;Kenya&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;ki&quot;&gt;&lt;i class=&quot;ki flag&quot;&gt;&lt;/i&gt;Kiribati&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;kw&quot;&gt;&lt;i class=&quot;kw flag&quot;&gt;&lt;/i&gt;Kuwait&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;kg&quot;&gt;&lt;i class=&quot;kg flag&quot;&gt;&lt;/i&gt;Kyrgyzstan&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;la&quot;&gt;&lt;i class=&quot;la flag&quot;&gt;&lt;/i&gt;Laos&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;lv&quot;&gt;&lt;i class=&quot;lv flag&quot;&gt;&lt;/i&gt;Latvia&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;lb&quot;&gt;&lt;i class=&quot;lb flag&quot;&gt;&lt;/i&gt;Lebanon&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;ls&quot;&gt;&lt;i class=&quot;ls flag&quot;&gt;&lt;/i&gt;Lesotho&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;lr&quot;&gt;&lt;i class=&quot;lr flag&quot;&gt;&lt;/i&gt;Liberia&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;ly&quot;&gt;&lt;i class=&quot;ly flag&quot;&gt;&lt;/i&gt;Libya&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;li&quot;&gt;&lt;i class=&quot;li flag&quot;&gt;&lt;/i&gt;Liechtenstein&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;lt&quot;&gt;&lt;i class=&quot;lt flag&quot;&gt;&lt;/i&gt;Lithuania&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;lu&quot;&gt;&lt;i class=&quot;lu flag&quot;&gt;&lt;/i&gt;Luxembourg&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;mo&quot;&gt;&lt;i class=&quot;mo flag&quot;&gt;&lt;/i&gt;Macau&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;mk&quot;&gt;&lt;i class=&quot;mk flag&quot;&gt;&lt;/i&gt;Macedonia&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;mg&quot;&gt;&lt;i class=&quot;mg flag&quot;&gt;&lt;/i&gt;Madagascar&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;mw&quot;&gt;&lt;i class=&quot;mw flag&quot;&gt;&lt;/i&gt;Malawi&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;my&quot;&gt;&lt;i class=&quot;my flag&quot;&gt;&lt;/i&gt;Malaysia&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;mv&quot;&gt;&lt;i class=&quot;mv flag&quot;&gt;&lt;/i&gt;Maldives&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;ml&quot;&gt;&lt;i class=&quot;ml flag&quot;&gt;&lt;/i&gt;Mali&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;mt&quot;&gt;&lt;i class=&quot;mt flag&quot;&gt;&lt;/i&gt;Malta&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;mh&quot;&gt;&lt;i class=&quot;mh flag&quot;&gt;&lt;/i&gt;Marshall Islands&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;mq&quot;&gt;&lt;i class=&quot;mq flag&quot;&gt;&lt;/i&gt;Martinique&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;mr&quot;&gt;&lt;i class=&quot;mr flag&quot;&gt;&lt;/i&gt;Mauritania&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;mu&quot;&gt;&lt;i class=&quot;mu flag&quot;&gt;&lt;/i&gt;Mauritius&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;yt&quot;&gt;&lt;i class=&quot;yt flag&quot;&gt;&lt;/i&gt;Mayotte&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;mx&quot;&gt;&lt;i class=&quot;mx flag&quot;&gt;&lt;/i&gt;Mexico&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;fm&quot;&gt;&lt;i class=&quot;fm flag&quot;&gt;&lt;/i&gt;Micronesia&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;md&quot;&gt;&lt;i class=&quot;md flag&quot;&gt;&lt;/i&gt;Moldova&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;mc&quot;&gt;&lt;i class=&quot;mc flag&quot;&gt;&lt;/i&gt;Monaco&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;mn&quot;&gt;&lt;i class=&quot;mn flag&quot;&gt;&lt;/i&gt;Mongolia&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;me&quot;&gt;&lt;i class=&quot;me flag&quot;&gt;&lt;/i&gt;Montenegro&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;ms&quot;&gt;&lt;i class=&quot;ms flag&quot;&gt;&lt;/i&gt;Montserrat&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;ma&quot;&gt;&lt;i class=&quot;ma flag&quot;&gt;&lt;/i&gt;Morocco&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;mz&quot;&gt;&lt;i class=&quot;mz flag&quot;&gt;&lt;/i&gt;Mozambique&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;na&quot;&gt;&lt;i class=&quot;na flag&quot;&gt;&lt;/i&gt;Namibia&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;nr&quot;&gt;&lt;i class=&quot;nr flag&quot;&gt;&lt;/i&gt;Nauru&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;np&quot;&gt;&lt;i class=&quot;np flag&quot;&gt;&lt;/i&gt;Nepal&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;an&quot;&gt;&lt;i class=&quot;an flag&quot;&gt;&lt;/i&gt;Netherlands Antilles&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;nl&quot;&gt;&lt;i class=&quot;nl flag&quot;&gt;&lt;/i&gt;Netherlands&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;nc&quot;&gt;&lt;i class=&quot;nc flag&quot;&gt;&lt;/i&gt;New Caledonia&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;pg&quot;&gt;&lt;i class=&quot;pg flag&quot;&gt;&lt;/i&gt;New Guinea&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;nz&quot;&gt;&lt;i class=&quot;nz flag&quot;&gt;&lt;/i&gt;New Zealand&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;ni&quot;&gt;&lt;i class=&quot;ni flag&quot;&gt;&lt;/i&gt;Nicaragua&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;ne&quot;&gt;&lt;i class=&quot;ne flag&quot;&gt;&lt;/i&gt;Niger&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;ng&quot;&gt;&lt;i class=&quot;ng flag&quot;&gt;&lt;/i&gt;Nigeria&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;nu&quot;&gt;&lt;i class=&quot;nu flag&quot;&gt;&lt;/i&gt;Niue&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;nf&quot;&gt;&lt;i class=&quot;nf flag&quot;&gt;&lt;/i&gt;Norfolk Island&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;kp&quot;&gt;&lt;i class=&quot;kp flag&quot;&gt;&lt;/i&gt;North Korea&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;mp&quot;&gt;&lt;i class=&quot;mp flag&quot;&gt;&lt;/i&gt;Northern Mariana Islands&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;no&quot;&gt;&lt;i class=&quot;no flag&quot;&gt;&lt;/i&gt;Norway&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;om&quot;&gt;&lt;i class=&quot;om flag&quot;&gt;&lt;/i&gt;Oman&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;pk&quot;&gt;&lt;i class=&quot;pk flag&quot;&gt;&lt;/i&gt;Pakistan&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;pw&quot;&gt;&lt;i class=&quot;pw flag&quot;&gt;&lt;/i&gt;Palau&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;ps&quot;&gt;&lt;i class=&quot;ps flag&quot;&gt;&lt;/i&gt;Palestine&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;pa&quot;&gt;&lt;i class=&quot;pa flag&quot;&gt;&lt;/i&gt;Panama&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;py&quot;&gt;&lt;i class=&quot;py flag&quot;&gt;&lt;/i&gt;Paraguay&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;pe&quot;&gt;&lt;i class=&quot;pe flag&quot;&gt;&lt;/i&gt;Peru&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;ph&quot;&gt;&lt;i class=&quot;ph flag&quot;&gt;&lt;/i&gt;Philippines&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;pn&quot;&gt;&lt;i class=&quot;pn flag&quot;&gt;&lt;/i&gt;Pitcairn Islands&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;pl&quot;&gt;&lt;i class=&quot;pl flag&quot;&gt;&lt;/i&gt;Poland&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;pt&quot;&gt;&lt;i class=&quot;pt flag&quot;&gt;&lt;/i&gt;Portugal&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;pr&quot;&gt;&lt;i class=&quot;pr flag&quot;&gt;&lt;/i&gt;Puerto Rico&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;qa&quot;&gt;&lt;i class=&quot;qa flag&quot;&gt;&lt;/i&gt;Qatar&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;re&quot;&gt;&lt;i class=&quot;re flag&quot;&gt;&lt;/i&gt;Reunion&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;ro&quot;&gt;&lt;i class=&quot;ro flag&quot;&gt;&lt;/i&gt;Romania&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;ru&quot;&gt;&lt;i class=&quot;ru flag&quot;&gt;&lt;/i&gt;Russia&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;rw&quot;&gt;&lt;i class=&quot;rw flag&quot;&gt;&lt;/i&gt;Rwanda&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;sh&quot;&gt;&lt;i class=&quot;sh flag&quot;&gt;&lt;/i&gt;Saint Helena&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;kn&quot;&gt;&lt;i class=&quot;kn flag&quot;&gt;&lt;/i&gt;Saint Kitts and Nevis&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;lc&quot;&gt;&lt;i class=&quot;lc flag&quot;&gt;&lt;/i&gt;Saint Lucia&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;pm&quot;&gt;&lt;i class=&quot;pm flag&quot;&gt;&lt;/i&gt;Saint Pierre&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;vc&quot;&gt;&lt;i class=&quot;vc flag&quot;&gt;&lt;/i&gt;Saint Vincent&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;ws&quot;&gt;&lt;i class=&quot;ws flag&quot;&gt;&lt;/i&gt;Samoa&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;sm&quot;&gt;&lt;i class=&quot;sm flag&quot;&gt;&lt;/i&gt;San Marino&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;gs&quot;&gt;&lt;i class=&quot;gs flag&quot;&gt;&lt;/i&gt;Sandwich Islands&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;st&quot;&gt;&lt;i class=&quot;st flag&quot;&gt;&lt;/i&gt;Sao Tome&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;sa&quot;&gt;&lt;i class=&quot;sa flag&quot;&gt;&lt;/i&gt;Saudi Arabia&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;sn&quot;&gt;&lt;i class=&quot;sn flag&quot;&gt;&lt;/i&gt;Senegal&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;cs&quot;&gt;&lt;i class=&quot;cs flag&quot;&gt;&lt;/i&gt;Serbia&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;rs&quot;&gt;&lt;i class=&quot;rs flag&quot;&gt;&lt;/i&gt;Serbia&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;sc&quot;&gt;&lt;i class=&quot;sc flag&quot;&gt;&lt;/i&gt;Seychelles&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;sl&quot;&gt;&lt;i class=&quot;sl flag&quot;&gt;&lt;/i&gt;Sierra Leone&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;sg&quot;&gt;&lt;i class=&quot;sg flag&quot;&gt;&lt;/i&gt;Singapore&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;sk&quot;&gt;&lt;i class=&quot;sk flag&quot;&gt;&lt;/i&gt;Slovakia&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;si&quot;&gt;&lt;i class=&quot;si flag&quot;&gt;&lt;/i&gt;Slovenia&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;sb&quot;&gt;&lt;i class=&quot;sb flag&quot;&gt;&lt;/i&gt;Solomon Islands&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;so&quot;&gt;&lt;i class=&quot;so flag&quot;&gt;&lt;/i&gt;Somalia&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;za&quot;&gt;&lt;i class=&quot;za flag&quot;&gt;&lt;/i&gt;South Africa&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;kr&quot;&gt;&lt;i class=&quot;kr flag&quot;&gt;&lt;/i&gt;South Korea&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;es&quot;&gt;&lt;i class=&quot;es flag&quot;&gt;&lt;/i&gt;Spain&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;lk&quot;&gt;&lt;i class=&quot;lk flag&quot;&gt;&lt;/i&gt;Sri Lanka&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;sd&quot;&gt;&lt;i class=&quot;sd flag&quot;&gt;&lt;/i&gt;Sudan&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;sr&quot;&gt;&lt;i class=&quot;sr flag&quot;&gt;&lt;/i&gt;Suriname&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;sj&quot;&gt;&lt;i class=&quot;sj flag&quot;&gt;&lt;/i&gt;Svalbard&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;sz&quot;&gt;&lt;i class=&quot;sz flag&quot;&gt;&lt;/i&gt;Swaziland&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;se&quot;&gt;&lt;i class=&quot;se flag&quot;&gt;&lt;/i&gt;Sweden&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;ch&quot;&gt;&lt;i class=&quot;ch flag&quot;&gt;&lt;/i&gt;Switzerland&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;sy&quot;&gt;&lt;i class=&quot;sy flag&quot;&gt;&lt;/i&gt;Syria&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;tw&quot;&gt;&lt;i class=&quot;tw flag&quot;&gt;&lt;/i&gt;Taiwan&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;tj&quot;&gt;&lt;i class=&quot;tj flag&quot;&gt;&lt;/i&gt;Tajikistan&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;tz&quot;&gt;&lt;i class=&quot;tz flag&quot;&gt;&lt;/i&gt;Tanzania&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;th&quot;&gt;&lt;i class=&quot;th flag&quot;&gt;&lt;/i&gt;Thailand&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;tl&quot;&gt;&lt;i class=&quot;tl flag&quot;&gt;&lt;/i&gt;Timorleste&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;tg&quot;&gt;&lt;i class=&quot;tg flag&quot;&gt;&lt;/i&gt;Togo&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;tk&quot;&gt;&lt;i class=&quot;tk flag&quot;&gt;&lt;/i&gt;Tokelau&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;to&quot;&gt;&lt;i class=&quot;to flag&quot;&gt;&lt;/i&gt;Tonga&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;tt&quot;&gt;&lt;i class=&quot;tt flag&quot;&gt;&lt;/i&gt;Trinidad&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;tn&quot;&gt;&lt;i class=&quot;tn flag&quot;&gt;&lt;/i&gt;Tunisia&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;tr&quot;&gt;&lt;i class=&quot;tr flag&quot;&gt;&lt;/i&gt;Turkey&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;tm&quot;&gt;&lt;i class=&quot;tm flag&quot;&gt;&lt;/i&gt;Turkmenistan&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;tv&quot;&gt;&lt;i class=&quot;tv flag&quot;&gt;&lt;/i&gt;Tuvalu&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;ug&quot;&gt;&lt;i class=&quot;ug flag&quot;&gt;&lt;/i&gt;Uganda&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;ua&quot;&gt;&lt;i class=&quot;ua flag&quot;&gt;&lt;/i&gt;Ukraine&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;ae&quot;&gt;&lt;i class=&quot;ae flag&quot;&gt;&lt;/i&gt;United Arab Emirates&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;us&quot;&gt;&lt;i class=&quot;us flag&quot;&gt;&lt;/i&gt;United States&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;uy&quot;&gt;&lt;i class=&quot;uy flag&quot;&gt;&lt;/i&gt;Uruguay&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;um&quot;&gt;&lt;i class=&quot;um flag&quot;&gt;&lt;/i&gt;Us Minor Islands&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;vi&quot;&gt;&lt;i class=&quot;vi flag&quot;&gt;&lt;/i&gt;Us Virgin Islands&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;uz&quot;&gt;&lt;i class=&quot;uz flag&quot;&gt;&lt;/i&gt;Uzbekistan&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;vu&quot;&gt;&lt;i class=&quot;vu flag&quot;&gt;&lt;/i&gt;Vanuatu&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;va&quot;&gt;&lt;i class=&quot;va flag&quot;&gt;&lt;/i&gt;Vatican City&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;ve&quot;&gt;&lt;i class=&quot;ve flag&quot;&gt;&lt;/i&gt;Venezuela&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;vn&quot;&gt;&lt;i class=&quot;vn flag&quot;&gt;&lt;/i&gt;Vietnam&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;wf&quot;&gt;&lt;i class=&quot;wf flag&quot;&gt;&lt;/i&gt;Wallis and Futuna&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;eh&quot;&gt;&lt;i class=&quot;eh flag&quot;&gt;&lt;/i&gt;Western Sahara&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;ye&quot;&gt;&lt;i class=&quot;ye flag&quot;&gt;&lt;/i&gt;Yemen&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;zm&quot;&gt;&lt;i class=&quot;zm flag&quot;&gt;&lt;/i&gt;Zambia&lt;/div&gt;
    &lt;div class=&quot;item&quot; data-value=&quot;zw&quot;&gt;&lt;i class=&quot;zw flag&quot;&gt;&lt;/i&gt;Zimbabwe&lt;/div&gt;
  &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;h4 class=&quot;ui dividing header&quot;&gt;Billing Information&lt;/h4&gt;
  &lt;div class=&quot;field&quot;&gt;
    &lt;label&gt;Card Type&lt;/label&gt;
    &lt;div class=&quot;ui selection dropdown&quot;&gt;
      &lt;input type=&quot;hidden&quot; name=&quot;card[type]&quot;&gt;
      &lt;div class=&quot;default text&quot;&gt;Type&lt;/div&gt;
      &lt;i class=&quot;dropdown icon&quot;&gt;&lt;/i&gt;
      &lt;div class=&quot;menu&quot;&gt;
        &lt;div class=&quot;item&quot; data-value=&quot;visa&quot;&gt;
          &lt;i class=&quot;visa icon&quot;&gt;&lt;/i&gt;
          Visa
        &lt;/div&gt;
        &lt;div class=&quot;item&quot; data-value=&quot;amex&quot;&gt;
          &lt;i class=&quot;amex icon&quot;&gt;&lt;/i&gt;
          American Express
        &lt;/div&gt;
        &lt;div class=&quot;item&quot; data-value=&quot;discover&quot;&gt;
          &lt;i class=&quot;discover icon&quot;&gt;&lt;/i&gt;
          Discover
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&quot;fields&quot;&gt;
    &lt;div class=&quot;seven wide field&quot;&gt;
      &lt;label&gt;Card Number&lt;/label&gt;
      &lt;input type=&quot;text&quot; name=&quot;card[number]&quot; maxlength=&quot;16&quot; placeholder=&quot;Card #&quot;&gt;
    &lt;/div&gt;
    &lt;div class=&quot;three wide field&quot;&gt;
      &lt;label&gt;CVC&lt;/label&gt;
      &lt;input type=&quot;text&quot; name=&quot;card[cvc]&quot; maxlength=&quot;3&quot; placeholder=&quot;CVC&quot;&gt;
    &lt;/div&gt;
    &lt;div class=&quot;six wide field&quot;&gt;
      &lt;label&gt;Expiration&lt;/label&gt;
      &lt;div class=&quot;two fields&quot;&gt;
        &lt;div class=&quot;field&quot;&gt;
          &lt;select class=&quot;ui fluid search dropdown&quot; name=&quot;card[expire-month]&quot;&gt;
            &lt;option value=&quot;&quot;&gt;Month&lt;/option&gt;
            &lt;option value=&quot;1&quot;&gt;January&lt;/option&gt;
            &lt;option value=&quot;2&quot;&gt;February&lt;/option&gt;
            &lt;option value=&quot;3&quot;&gt;March&lt;/option&gt;
            &lt;option value=&quot;4&quot;&gt;April&lt;/option&gt;
            &lt;option value=&quot;5&quot;&gt;May&lt;/option&gt;
            &lt;option value=&quot;6&quot;&gt;June&lt;/option&gt;
            &lt;option value=&quot;7&quot;&gt;July&lt;/option&gt;
            &lt;option value=&quot;8&quot;&gt;August&lt;/option&gt;
            &lt;option value=&quot;9&quot;&gt;September&lt;/option&gt;
            &lt;option value=&quot;10&quot;&gt;October&lt;/option&gt;
            &lt;option value=&quot;11&quot;&gt;November&lt;/option&gt;
            &lt;option value=&quot;12&quot;&gt;December&lt;/option&gt;
          &lt;/select&gt;
        &lt;/div&gt;
        &lt;div class=&quot;field&quot;&gt;
          &lt;input type=&quot;text&quot; name=&quot;card[expire-year]&quot; maxlength=&quot;4&quot; placeholder=&quot;Year&quot;&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
   &lt;h4 class=&quot;ui dividing header&quot;&gt;Receipt&lt;/h4&gt;
   &lt;div class=&quot;field&quot;&gt;
    &lt;label&gt;Send Receipt To:&lt;/label&gt;
    &lt;div class=&quot;ui fluid multiple search selection dropdown&quot;&gt;
      &lt;input type=&quot;hidden&quot; name=&quot;receipt&quot;&gt;
      &lt;i class=&quot;dropdown icon&quot;&gt;&lt;/i&gt;
      &lt;div class=&quot;default text&quot;&gt;Saved Contacts&lt;/div&gt;
      &lt;div class=&quot;menu&quot;&gt;
        &lt;div class=&quot;item&quot; data-value=&quot;jenny&quot; data-text=&quot;Jenny&quot;&gt;
          &lt;img class=&quot;ui mini avatar image&quot; src=&quot;/images/avatar/small/jenny.jpg&quot;&gt;
          Jenny Hess
        &lt;/div&gt;
        &lt;div class=&quot;item&quot; data-value=&quot;elliot&quot; data-text=&quot;Elliot&quot;&gt;
          &lt;img class=&quot;ui mini avatar image&quot; src=&quot;/images/avatar/small/elliot.jpg&quot;&gt;
          Elliot Fu
        &lt;/div&gt;
        &lt;div class=&quot;item&quot; data-value=&quot;stevie&quot; data-text=&quot;Stevie&quot;&gt;
          &lt;img class=&quot;ui mini avatar image&quot; src=&quot;/images/avatar/small/stevie.jpg&quot;&gt;
          Stevie Feliciano
        &lt;/div&gt;
        &lt;div class=&quot;item&quot; data-value=&quot;christian&quot; data-text=&quot;Christian&quot;&gt;
          &lt;img class=&quot;ui mini avatar image&quot; src=&quot;/images/avatar/small/christian.jpg&quot;&gt;
          Christian
        &lt;/div&gt;
        &lt;div class=&quot;item&quot; data-value=&quot;matt&quot; data-text=&quot;Matt&quot;&gt;
          &lt;img class=&quot;ui mini avatar image&quot; src=&quot;/images/avatar/small/matt.jpg&quot;&gt;
          Matt
        &lt;/div&gt;
        &lt;div class=&quot;item&quot; data-value=&quot;justen&quot; data-text=&quot;Justen&quot;&gt;
          &lt;img class=&quot;ui mini avatar image&quot; src=&quot;/images/avatar/small/justen.jpg&quot;&gt;
          Justen Kitsune
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
   &lt;div class=&quot;ui segment&quot;&gt;
    &lt;div class=&quot;field&quot;&gt;
      &lt;div class=&quot;ui toggle checkbox&quot;&gt;
        &lt;input type=&quot;checkbox&quot; name=&quot;gift&quot; tabindex=&quot;0&quot; class=&quot;hidden&quot;&gt;
        &lt;label&gt;Do not include a receipt in the package&lt;/label&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&quot;ui button&quot; tabindex=&quot;0&quot;&gt;Submit Order&lt;/div&gt;
</sci:value>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
						<sci:member>RunToCompletion Categorize Using</sci:member>
						<sci:legalval selected="true">False</sci:legalval>
						<sci:legalval>True - For Each Data Record</sci:legalval>
						<sci:legalval>True - For Each Category</sci:legalval>
					</sci:arg>
					<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
						<sci:member>Parallel Processing Options Batch Size</sci:member>
						<sci:member>Parallel Processing Options Server</sci:member>
						<sci:member>Parallel Processing Options Preserve Order</sci:member>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
						<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
#rtcForEachCategory := (Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
elsif (#rtcForEachCategory) then
	SetDisabledDetails(&quot;This parameter is not applicable when &apos;RunToCompletion&apos; is set to &apos;True - For Each Category&apos;&quot;);
end if;
#parallel and not #rtcForEachCategory;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
						<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
						<sci:member>Parallel Processing Options Server Processes</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
						<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Run subprotocol on grid engine if available.</sci:help>
						<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
						<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval>ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Raw HTML (Semantic UI)</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>4</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>ReportSubProtocolNode</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>790</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{D257B36C-6670-4D92-8489-8A5E09C04D4D}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>1770 -345</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Raw HTML (Semantic UI).</sci:value>
						<sci:value>Type raw HTML code into this component. It will be inserted unchanged and unwrapped into the final Semantic UI HTML report. Any tags are allowed. Pipeline Pilot global variables in the $() notation are allowed.</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
						<sci:value>None</sci:value>
						<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>16.1.0.1140</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval>Owner Access Only</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>bondadx2</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Tue Jun 14 10:59:21 2016</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>133</sci:value>
					</sci:arg>
					<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Processing Order</sci:help>
						<sci:value>DrainTopDown</sci:value>
					</sci:arg>
					<sci:arg name="OriginalPackage" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>OriginalPackage</sci:help>
						<sci:value>scitegic/coreutils</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Modified</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Semantic UI\Utilities\Raw HTML (Semantic UI)</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol/>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="Text Box (Semantic UI)" version="2">
					<sci:arg name="Parameter to Map" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;The name of a parameter on the target protocol that this component&apos;s value should be mapped to.&lt;/p&gt;</sci:help>
						<sci:member>Default Value</sci:member>
						<sci:member>Validation Options</sci:member>
						<sci:value>first-name</sci:value>
					</sci:arg>
					<sci:arg name="Default Value" type="ExpressionType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:help>&lt;p&gt;The initial value contained in the text box.  To have a blank text box, enter &apos;&apos; (two single quotes).&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Tis parameter is ExpressionType. You can enter a value in quotes, a global variable with  the @ notation, or a property name on the incoming data stream.&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;
&lt;li&gt;
Due to inconsistent input value attribute handling by various browsers, it is recommended that the Default Value parameter not include leading or trailing whitespace. Depending on the browser, this whitespace may be omitted when the form is submitted. A possible workaround is to flank the entire value with a special character that can then be stripped when the input value is processed in the work protocol.
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Validation Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:member>Advanced</sci:member>
						<sci:member>Basic Rules</sci:member>
					</sci:arg>
					<sci:arg name="Basic Rules" type="TextType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>&lt;p&gt;(Optional) basic validation rules, e.g. not empty, numbers only, etc.
&lt;/p&gt;
&lt;p&gt;For available rules, refer to &lt;a href=&quot;javascript:DoLink(&apos;http://jqueryvalidation.org/documentation&apos;)&quot;&gt;http://jqueryvalidation.org/documentation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;A list of all recognized basic rules (several rules may be combined):&lt;/p&gt;
&lt;br&gt;	required: true,
&lt;br&gt;	minlength: 3,
&lt;br&gt;	maxlength: 5,
&lt;br&gt;	rangelength: [2, 6],
&lt;br&gt;	min: 0.5,
&lt;br&gt;	max: 10.1,
&lt;br&gt;	range: [-5, 25.6],
&lt;br&gt;	email: true,
&lt;br&gt;	url: true,
&lt;br&gt;	date: true,
&lt;br&gt;	dateISO: true,
&lt;br&gt;	number: true,
&lt;br&gt;	digits: true,&lt;br&gt;
</sci:help>
						<sci:value>/* (Optional) basic validation rules, e.g. not empty, numbers only, etc.

	For available rules, refer to http://jqueryvalidation.org/documentation

	A list of all recognized basic rules (several rules may be combined):

	required: true,
	minlength: 3,
	maxlength: 5,
	rangelength: [2, 6],
	min: 0.5,
	max: 10.1,
	range: [-5, 25.6],
	email: true,
	url: true,
	date: true,
	dateISO: true,
	number: true,
	digits: true,

	There should be no comma on the last rule.
*/
</sci:value>
					</sci:arg>
					<sci:arg name="Advanced" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:member>Validator Protocol</sci:member>
					</sci:arg>
					<sci:arg name="Validator Protocol" type="ProtocolLinkType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>&lt;p&gt;(Optional) A protocol to perform input value validation.&lt;/p&gt;

&lt;p&gt;Make a new protocol using the template protocol (Labspace/Validator Protocol Template) and modify it to return True if the validation is successful, and a double-quote-enclosed string (a message) if the validation is unsuccessful.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Appearance" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:help>Appearance</sci:help>
						<sci:member>Required</sci:member>
						<sci:member>Enabled</sci:member>
						<sci:member>Width</sci:member>
						<sci:member>Placeholder</sci:member>
						<sci:member>Label</sci:member>
						<sci:member>Text Box Options</sci:member>
						<sci:member>Typeahead Options</sci:member>
						<sci:member>Autocomplete</sci:member>
					</sci:arg>
					<sci:arg name="Required" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>Required?</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Enabled" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>State</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>Enabled?</sci:help>
						<sci:legalvalscript>if (Parameter(&apos;Required&apos;)) then
		resize(lvals, 1);
	    lvals[1] := True;
	else
		resize(lvals, 2);
	    lvals[1] := True; lvals[2] := False;
	end if;
	SetLegalValues(lvals);</sci:legalvalscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Width" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>Width of the text box including its label (if present), in columns. Full screen is 16 columns. Leave blank to auto-size up to the widest available space.</sci:help>
						<sci:legalval/>
						<sci:legalval>one wide</sci:legalval>
						<sci:legalval>two wide</sci:legalval>
						<sci:legalval>three wide</sci:legalval>
						<sci:legalval>four wide</sci:legalval>
						<sci:legalval>five wide</sci:legalval>
						<sci:legalval>six wide</sci:legalval>
						<sci:legalval>seven wide</sci:legalval>
						<sci:legalval>eight wide</sci:legalval>
						<sci:legalval>nine wide</sci:legalval>
						<sci:legalval>ten wide</sci:legalval>
						<sci:legalval>eleven wide</sci:legalval>
						<sci:legalval>twelve wide</sci:legalval>
						<sci:legalval>thirteen wide</sci:legalval>
						<sci:legalval>fourteen wide</sci:legalval>
						<sci:legalval>fifteen wide</sci:legalval>
						<sci:legalval>sixteen wide</sci:legalval>
					</sci:arg>
					<sci:arg name="Placeholder" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>Placeholder</sci:help>
					</sci:arg>
					<sci:arg name="Label" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>Label</sci:help>
						<sci:member>Label Location</sci:member>
						<sci:validscript>SetInvalidDetails(ParameterName() . &apos; must be set when the field is set to Required.&apos;);
(Parameter() ne &apos;&apos; and Parameter(&apos;Required&apos;) ) or not Parameter(&apos;Required&apos;)</sci:validscript>
						<sci:value>First Name</sci:value>
					</sci:arg>
					<sci:arg name="Label Location" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>Location</sci:help>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable &apos;.ParameterName().&apos;, set a Label.&apos;);
Parameter(&apos;Label&apos;) ne &apos;&apos;;</sci:enabledscript>
						<sci:legalval selected="true">Above Field</sci:legalval>
						<sci:legalval>Left of Field</sci:legalval>
					</sci:arg>
					<sci:arg name="Text Box Options" type="GroupType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;Options to control the text box.&lt;/p&gt;</sci:help>
						<sci:member>Number of Lines</sci:member>
						<sci:member>Wrap Multiple Lines</sci:member>
						<sci:member>Is Password</sci:member>
						<sci:member>Is Array</sci:member>
						<sci:member>Array Value Display</sci:member>
					</sci:arg>
					<sci:arg name="Number of Lines" type="LongType" required="true" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;The number of lines of text to display.&lt;/p&gt;</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="Wrap Multiple Lines" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;If &lt;i&gt;Number Of Lines&lt;/i&gt; is greater than 1, this parameter determines whether long lines are wrapped.&lt;/p&gt;</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Is Password" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;If true, the text box will have its content masked with the default browser password character so that it is not visible.&lt;/p&gt;</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Is Array" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Determines whether data will be displayed and submitted as array data. If set to &quot;True&quot;, then &lt;em&gt;Array Value Display&lt;/em&gt; determines the character used to separate array values.&lt;/p&gt;

&lt;p&gt;With a value of &quot;Based on Input Data&quot;, the data type of the &lt;em&gt;Default Value&lt;/em&gt; will be examined. If no &lt;em&gt;Default Value&lt;/em&gt; is provided, then a value of &quot;False&quot; is assumed.&lt;/p&gt;
</sci:help>
						<sci:legalval selected="true">Based on Input Data</sci:legalval>
						<sci:legalval>True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Array Value Display" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Determines the array value separator if data is to be displayed and submitted in array format (as determined by the value of &lt;em&gt;Is Array&lt;/em&gt;.)


</sci:help>
						<sci:enabledscript>enabled := Parameter(&quot;Is Array&quot;) NE &apos;False&apos;;
enabled;</sci:enabledscript>
						<sci:legalval selected="true">Separate by Newlines</sci:legalval>
						<sci:legalval>Separate by Commas</sci:legalval>
					</sci:arg>
					<sci:arg name="Typeahead Options" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>&lt;p&gt;Enable contextual suggestions in the text box. Both local and remote data can be used for suggestions.&lt;/p&gt;
&lt;a href=&quot;javascript:DoLink(&apos;http://twitter.github.io/typeahead.js/examples&apos;)&quot;&gt;Twitter Typeahead&lt;/a&gt;</sci:help>
						<sci:member>Local</sci:member>
						<sci:member>Prefetch</sci:member>
						<sci:member>Remote</sci:member>
						<sci:member>Limit</sci:member>
					</sci:arg>
					<sci:arg name="Local" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;(Optional parameter) Provide a JSON-formatted array like this:&lt;/p&gt;
[&quot;timtrueman&quot;, &quot;JakeHarding&quot;, &quot;vskarich&quot;]</sci:help>
					</sci:arg>
					<sci:arg name="Prefetch" type="ProtocolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>&lt;p&gt;(Optional parameter) Provide a protocol which can generate a list of values to pre-populate this text box when the web page loads. This protocol must produce a text file containing a JSON-encoded array:&lt;/p&gt;
&lt;code&gt;[&quot;BAS-0000001&quot;, &quot;BAS-00000002&quot;]&lt;/code&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Remote" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;(Optional parameter) As the user types into the text box, with each change fetch an updated list of suggestions. Provide an HTTP or HTTPS URL to a web service which returns a JSON-formatted array like this:&lt;/p&gt;
[&quot;timtrueman&quot;, &quot;JakeHarding&quot;, &quot;vskarich&quot;]
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; User input in the text box can be sent to the remote service as a URL parameter %QUERY, so do include %QUERY in your URL.&lt;/p&gt;

&lt;code&gt;https://twitter.com/accounts?q=%QUERY&lt;/code&gt;

&lt;p&gt;Note: to use a Pipeline Pilot protocol that will process the text box value typed in by the user, enter the url below with the protocol GUID and the %QUERY in it. You can omit servername and port:&lt;/p&gt;&lt;p&gt;&lt;code&gt;/auth/launchjob?_compat=1&amp;_protocol={123456}&amp;myparameter=%QUERY&lt;/code&gt;&lt;/p&gt;(do not change the word %QUERY). To help you, we created an example: &lt;code&gt;Protocols\Examples\Semantic UI\Form\Auto-suggest in a Text Box\Search Compounds&lt;/code&gt;.
&lt;p&gt;When using remote typeahead with a Pipeline Pilot protocol, the user must already logged in to Pipeline Pilot via a web client, otherwise typeahead won&apos;t work. If your test isn&apos;t working check that you already logged into webport in your web browser.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Limit" type="LongType" required="false" visibility="visible" multi="false">
						<sci:help>Limit</sci:help>
						<sci:value>10</sci:value>
					</sci:arg>
					<sci:arg name="Autocomplete" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>Enable automatic browser autocomplete on this webform input field?

Autocomplete shows a history of user inputs in the text box when anything is being typed in the box.

This option is overridden if the text box has typeahead enabled. Typeahead displays its hints instead of autocomplete.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
						<sci:value>class_, guid, a1, a2, a3, TypeaheadClass</sci:value>
					</sci:arg>
					<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
						<sci:member>RunToCompletion Categorize Using</sci:member>
						<sci:legalval selected="true">False</sci:legalval>
						<sci:legalval>True - For Each Data Record</sci:legalval>
						<sci:legalval>True - For Each Category</sci:legalval>
					</sci:arg>
					<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
						<sci:member>Parallel Processing Options Batch Size</sci:member>
						<sci:member>Parallel Processing Options Server</sci:member>
						<sci:member>Parallel Processing Options Preserve Order</sci:member>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
						<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
#rtcForEachCategory := (Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
elsif (#rtcForEachCategory) then
	SetDisabledDetails(&quot;This parameter is not applicable when &apos;RunToCompletion&apos; is set to &apos;True - For Each Category&apos;&quot;);
end if;
#parallel and not #rtcForEachCategory;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
						<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
						<sci:member>Parallel Processing Options Server Processes</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
						<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Run subprotocol on grid engine if available.</sci:help>
						<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
						<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Constant GUID" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Override an automatically set GUID inside the component with this value.&lt;/p&gt; &lt;p&gt;If set, HTML element(s) will have their IDs set using this value instead of a randomly generated one.&lt;/p&gt;&lt;p&gt;Spaces or special characters are not allowed, only alphanumeric. The ID is case-sensitive.&lt;/p&gt;
</sci:help>
						<sci:validscript>SetInvalidDetails(ParameterName() . &apos; must be alphanumeric. Spaces or special characters are not allowed.&apos;);
numValues(rMatch(Parameter(), &apos;[^a-zA-Z0-9]+&apos;, &apos;ig&apos;)) == 0;</sci:validscript>
						<sci:legalval/>
						<sci:legalval>$(Constant GUID)</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval>ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="Popup" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
							<sci:propval name="SCI_InitializeUsingOrigType" ishidden="true">GroupType</sci:propval>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup displays additional information in a temporary message.</sci:help>
						<sci:member>Popup Content</sci:member>
						<sci:member>Basic Popup</sci:member>
						<sci:member>Popup Appearance</sci:member>
						<sci:member>Behavior</sci:member>
					</sci:arg>
					<sci:arg name="Popup Content" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup Content</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>Popup content. (HTML is allowed).</sci:help>
					</sci:arg>
					<sci:arg name="Basic Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Basic Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can provide basic or extended formatting.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Popup Appearance" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup Appearance</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>Appearance</sci:help>
						<sci:member>Popup Width</sci:member>
						<sci:member>Fluid Popup</sci:member>
						<sci:member>Popup Size</sci:member>
						<sci:member>Flowing Popup</sci:member>
						<sci:member>Inverted Popup</sci:member>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable &apos;.ParameterName().&apos;, set Basic Popup to False&apos;);
not Parameter(&apos;Basic Popup&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Popup Width" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup Width</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can be wide or very wide to allow for longer content.</sci:help>
						<sci:legalval/>
						<sci:legalval>wide</sci:legalval>
						<sci:legalval>very wide</sci:legalval>
					</sci:arg>
					<sci:arg name="Fluid Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Fluid Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A fluid popup will take up the entire width of its  container.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Popup Size" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup Size</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can vary in font size.</sci:help>
						<sci:legalval/>
						<sci:legalval>mini</sci:legalval>
						<sci:legalval>tiny</sci:legalval>
						<sci:legalval>small</sci:legalval>
						<sci:legalval>large</sci:legalval>
						<sci:legalval>huge</sci:legalval>
					</sci:arg>
					<sci:arg name="Flowing Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Flowing Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can have no maximum width and continue to flow to fit its content.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Inverted Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Inverted Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can have its colors inverted.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Behavior" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Behavior</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>Behavior</sci:help>
						<sci:member>Show On</sci:member>
					</sci:arg>
					<sci:arg name="Show On" type="StringType" required="true" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Show On</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>When to show the popup. Hover (mouseover), click, focus (when a form element such as a text box is in focus).</sci:help>
						<sci:legalval selected="true">hover</sci:legalval>
						<sci:legalval>click</sci:legalval>
						<sci:legalval>focus</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Text Box (Semantic UI)</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>ReportSubProtocolNode</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>790</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{9F37F5CB-5B08-4AE7-BAC5-FA0394004CD8}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>618 -470</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Text Box (Semantic UI).</sci:value>
						<sci:value>&lt;p&gt;A text box is an area where you can enter and edit content.  A text box can be a simple, single-line text box, a multiple-line text box, or a password field.&lt;/p&gt;
&lt;p&gt;Validation and typeahead parameters are available.&lt;/p&gt;</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
						<sci:value>None</sci:value>
						<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>16.1.0.1140</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval>Owner Access Only</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>bondadx2</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Sat Jul 23 17:59:02 2016</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>92</sci:value>
					</sci:arg>
					<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Processing Order</sci:help>
						<sci:value>DrainTopDown</sci:value>
					</sci:arg>
					<sci:arg name="OriginalPackage" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>OriginalPackage</sci:help>
						<sci:value>scitegic/coreutils</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Semantic UI\Forms\Functional Elements\Text Box (Semantic UI)</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol/>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="Horizontal Field Group (Semantic UI)" version="2">
					<sci:arg name="Number of Fields" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Number of Fields</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:legalval/>
						<sci:legalval>one</sci:legalval>
						<sci:legalval selected="true">two</sci:legalval>
						<sci:legalval>three</sci:legalval>
						<sci:legalval>four</sci:legalval>
						<sci:legalval>five</sci:legalval>
						<sci:legalval>six</sci:legalval>
						<sci:legalval>seven</sci:legalval>
						<sci:legalval>eight</sci:legalval>
						<sci:legalval>nine</sci:legalval>
						<sci:legalval>ten</sci:legalval>
						<sci:legalval>eleven</sci:legalval>
						<sci:legalval>twelve</sci:legalval>
						<sci:legalval>thirteen</sci:legalval>
						<sci:legalval>fourteen</sci:legalval>
						<sci:legalval>fifteen</sci:legalval>
						<sci:legalval>sixteen</sci:legalval>
					</sci:arg>
					<sci:arg name="Appearance" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:member>Label</sci:member>
						<sci:member>Width</sci:member>
					</sci:arg>
					<sci:arg name="Label" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>Label will appear above the field group.</sci:help>
					</sci:arg>
					<sci:arg name="Width" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>Width of the text box including its label (if present), in columns. Full screen is 16 columns. Leave blank to auto-size up to the widest available space.</sci:help>
						<sci:legalval/>
						<sci:legalval>one wide</sci:legalval>
						<sci:legalval>two wide</sci:legalval>
						<sci:legalval>three wide</sci:legalval>
						<sci:legalval>four wide</sci:legalval>
						<sci:legalval>five wide</sci:legalval>
						<sci:legalval>six wide</sci:legalval>
						<sci:legalval>seven wide</sci:legalval>
						<sci:legalval>eight wide</sci:legalval>
						<sci:legalval>nine wide</sci:legalval>
						<sci:legalval>ten wide</sci:legalval>
						<sci:legalval>eleven wide</sci:legalval>
						<sci:legalval>twelve wide</sci:legalval>
						<sci:legalval>thirteen wide</sci:legalval>
						<sci:legalval>fourteen wide</sci:legalval>
						<sci:legalval>fifteen wide</sci:legalval>
						<sci:legalval>sixteen wide</sci:legalval>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
						<sci:member>RunToCompletion Categorize Using</sci:member>
						<sci:legalval selected="true">False</sci:legalval>
						<sci:legalval>True - For Each Data Record</sci:legalval>
						<sci:legalval>True - For Each Category</sci:legalval>
					</sci:arg>
					<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
						<sci:member>Parallel Processing Options Batch Size</sci:member>
						<sci:member>Parallel Processing Options Server</sci:member>
						<sci:member>Parallel Processing Options Preserve Order</sci:member>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
						<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
#rtcForEachCategory := (Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
elsif (#rtcForEachCategory) then
	SetDisabledDetails(&quot;This parameter is not applicable when &apos;RunToCompletion&apos; is set to &apos;True - For Each Category&apos;&quot;);
end if;
#parallel and not #rtcForEachCategory;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
						<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
						<sci:member>Parallel Processing Options Server Processes</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
						<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Run subprotocol on grid engine if available.</sci:help>
						<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
						<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:value>ComponentReturnsPass</sci:value>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval>ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Horizontal Field Group (Semantic UI)</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>ReportSubProtocolNode</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>790</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{77FD9923-E478-4AE3-BFA9-CBE5479D3AEF}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>978 -645</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Horizontal Field Group (Semantic UI).</sci:value>
						<sci:value>&lt;p&gt;A text box is an area where you can enter and edit content.  A text box can be a simple, single-line text box, a multiple-line text box, or a password field.&lt;/p&gt;
&lt;p&gt;Validation and typeahead parameters are available.&lt;/p&gt;</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
						<sci:value>None</sci:value>
						<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>16.1.0.1140</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval>Owner Access Only</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>bondadx2</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Tue Jun 14 10:41:27 2016</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>96</sci:value>
					</sci:arg>
					<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Processing Order</sci:help>
						<sci:value>DrainTopDown</sci:value>
					</sci:arg>
					<sci:arg name="OriginalPackage" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>OriginalPackage</sci:help>
						<sci:value>scitegic/coreutils</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Modified</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Semantic UI\Forms\Formatting Elements\Horizontal Field Group (Semantic UI)</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol/>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="Text Box (Semantic UI)" version="2">
					<sci:arg name="Parameter to Map" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;The name of a parameter on the target protocol that this component&apos;s value should be mapped to.&lt;/p&gt;</sci:help>
						<sci:member>Default Value</sci:member>
						<sci:member>Validation Options</sci:member>
						<sci:value>last-name</sci:value>
					</sci:arg>
					<sci:arg name="Default Value" type="ExpressionType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:help>&lt;p&gt;The initial value contained in the text box.  To have a blank text box, enter &apos;&apos; (two single quotes).&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Tis parameter is ExpressionType. You can enter a value in quotes, a global variable with  the @ notation, or a property name on the incoming data stream.&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;
&lt;li&gt;
Due to inconsistent input value attribute handling by various browsers, it is recommended that the Default Value parameter not include leading or trailing whitespace. Depending on the browser, this whitespace may be omitted when the form is submitted. A possible workaround is to flank the entire value with a special character that can then be stripped when the input value is processed in the work protocol.
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Validation Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:member>Advanced</sci:member>
						<sci:member>Basic Rules</sci:member>
					</sci:arg>
					<sci:arg name="Basic Rules" type="TextType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>&lt;p&gt;(Optional) basic validation rules, e.g. not empty, numbers only, etc.
&lt;/p&gt;
&lt;p&gt;For available rules, refer to &lt;a href=&quot;javascript:DoLink(&apos;http://jqueryvalidation.org/documentation&apos;)&quot;&gt;http://jqueryvalidation.org/documentation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;A list of all recognized basic rules (several rules may be combined):&lt;/p&gt;
&lt;br&gt;	required: true,
&lt;br&gt;	minlength: 3,
&lt;br&gt;	maxlength: 5,
&lt;br&gt;	rangelength: [2, 6],
&lt;br&gt;	min: 0.5,
&lt;br&gt;	max: 10.1,
&lt;br&gt;	range: [-5, 25.6],
&lt;br&gt;	email: true,
&lt;br&gt;	url: true,
&lt;br&gt;	date: true,
&lt;br&gt;	dateISO: true,
&lt;br&gt;	number: true,
&lt;br&gt;	digits: true,&lt;br&gt;
</sci:help>
						<sci:value>/* (Optional) basic validation rules, e.g. not empty, numbers only, etc.

	For available rules, refer to http://jqueryvalidation.org/documentation

	A list of all recognized basic rules (several rules may be combined):

	required: true,
	minlength: 3,
	maxlength: 5,
	rangelength: [2, 6],
	min: 0.5,
	max: 10.1,
	range: [-5, 25.6],
	email: true,
	url: true,
	date: true,
	dateISO: true,
	number: true,
	digits: true,

	There should be no comma on the last rule.
*/
</sci:value>
					</sci:arg>
					<sci:arg name="Advanced" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:member>Validator Protocol</sci:member>
					</sci:arg>
					<sci:arg name="Validator Protocol" type="ProtocolLinkType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>&lt;p&gt;(Optional) A protocol to perform input value validation.&lt;/p&gt;

&lt;p&gt;Make a new protocol using the template protocol (Labspace/Validator Protocol Template) and modify it to return True if the validation is successful, and a double-quote-enclosed string (a message) if the validation is unsuccessful.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Appearance" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:help>Appearance</sci:help>
						<sci:member>Required</sci:member>
						<sci:member>Enabled</sci:member>
						<sci:member>Width</sci:member>
						<sci:member>Placeholder</sci:member>
						<sci:member>Label</sci:member>
						<sci:member>Text Box Options</sci:member>
						<sci:member>Typeahead Options</sci:member>
						<sci:member>Autocomplete</sci:member>
					</sci:arg>
					<sci:arg name="Required" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>Required?</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Enabled" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>State</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>Enabled?</sci:help>
						<sci:legalvalscript>if (Parameter(&apos;Required&apos;)) then
		resize(lvals, 1);
	    lvals[1] := True;
	else
		resize(lvals, 2);
	    lvals[1] := True; lvals[2] := False;
	end if;
	SetLegalValues(lvals);</sci:legalvalscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Width" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>Width of the text box including its label (if present), in columns. Full screen is 16 columns. Leave blank to auto-size up to the widest available space.</sci:help>
						<sci:legalval/>
						<sci:legalval>one wide</sci:legalval>
						<sci:legalval>two wide</sci:legalval>
						<sci:legalval>three wide</sci:legalval>
						<sci:legalval>four wide</sci:legalval>
						<sci:legalval>five wide</sci:legalval>
						<sci:legalval>six wide</sci:legalval>
						<sci:legalval>seven wide</sci:legalval>
						<sci:legalval>eight wide</sci:legalval>
						<sci:legalval>nine wide</sci:legalval>
						<sci:legalval>ten wide</sci:legalval>
						<sci:legalval>eleven wide</sci:legalval>
						<sci:legalval>twelve wide</sci:legalval>
						<sci:legalval>thirteen wide</sci:legalval>
						<sci:legalval>fourteen wide</sci:legalval>
						<sci:legalval>fifteen wide</sci:legalval>
						<sci:legalval>sixteen wide</sci:legalval>
					</sci:arg>
					<sci:arg name="Placeholder" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>Placeholder</sci:help>
					</sci:arg>
					<sci:arg name="Label" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>Label</sci:help>
						<sci:member>Label Location</sci:member>
						<sci:validscript>SetInvalidDetails(ParameterName() . &apos; must be set when the field is set to Required.&apos;);
(Parameter() ne &apos;&apos; and Parameter(&apos;Required&apos;) ) or not Parameter(&apos;Required&apos;)</sci:validscript>
						<sci:value>Last Name</sci:value>
					</sci:arg>
					<sci:arg name="Label Location" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>Location</sci:help>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable &apos;.ParameterName().&apos;, set a Label.&apos;);
Parameter(&apos;Label&apos;) ne &apos;&apos;;</sci:enabledscript>
						<sci:legalval selected="true">Above Field</sci:legalval>
						<sci:legalval>Left of Field</sci:legalval>
					</sci:arg>
					<sci:arg name="Text Box Options" type="GroupType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;Options to control the text box.&lt;/p&gt;</sci:help>
						<sci:member>Number of Lines</sci:member>
						<sci:member>Wrap Multiple Lines</sci:member>
						<sci:member>Is Password</sci:member>
						<sci:member>Is Array</sci:member>
						<sci:member>Array Value Display</sci:member>
					</sci:arg>
					<sci:arg name="Number of Lines" type="LongType" required="true" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;The number of lines of text to display.&lt;/p&gt;</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="Wrap Multiple Lines" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;If &lt;i&gt;Number Of Lines&lt;/i&gt; is greater than 1, this parameter determines whether long lines are wrapped.&lt;/p&gt;</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Is Password" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;If true, the text box will have its content masked with the default browser password character so that it is not visible.&lt;/p&gt;</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Is Array" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Determines whether data will be displayed and submitted as array data. If set to &quot;True&quot;, then &lt;em&gt;Array Value Display&lt;/em&gt; determines the character used to separate array values.&lt;/p&gt;

&lt;p&gt;With a value of &quot;Based on Input Data&quot;, the data type of the &lt;em&gt;Default Value&lt;/em&gt; will be examined. If no &lt;em&gt;Default Value&lt;/em&gt; is provided, then a value of &quot;False&quot; is assumed.&lt;/p&gt;
</sci:help>
						<sci:legalval selected="true">Based on Input Data</sci:legalval>
						<sci:legalval>True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Array Value Display" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Determines the array value separator if data is to be displayed and submitted in array format (as determined by the value of &lt;em&gt;Is Array&lt;/em&gt;.)


</sci:help>
						<sci:enabledscript>enabled := Parameter(&quot;Is Array&quot;) NE &apos;False&apos;;
enabled;</sci:enabledscript>
						<sci:legalval selected="true">Separate by Newlines</sci:legalval>
						<sci:legalval>Separate by Commas</sci:legalval>
					</sci:arg>
					<sci:arg name="Typeahead Options" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>&lt;p&gt;Enable contextual suggestions in the text box. Both local and remote data can be used for suggestions.&lt;/p&gt;
&lt;a href=&quot;javascript:DoLink(&apos;http://twitter.github.io/typeahead.js/examples&apos;)&quot;&gt;Twitter Typeahead&lt;/a&gt;</sci:help>
						<sci:member>Local</sci:member>
						<sci:member>Prefetch</sci:member>
						<sci:member>Remote</sci:member>
						<sci:member>Limit</sci:member>
					</sci:arg>
					<sci:arg name="Local" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;(Optional parameter) Provide a JSON-formatted array like this:&lt;/p&gt;
[&quot;timtrueman&quot;, &quot;JakeHarding&quot;, &quot;vskarich&quot;]</sci:help>
					</sci:arg>
					<sci:arg name="Prefetch" type="ProtocolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>&lt;p&gt;(Optional parameter) Provide a protocol which can generate a list of values to pre-populate this text box when the web page loads. This protocol must produce a text file containing a JSON-encoded array:&lt;/p&gt;
&lt;code&gt;[&quot;BAS-0000001&quot;, &quot;BAS-00000002&quot;]&lt;/code&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Remote" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;(Optional parameter) As the user types into the text box, with each change fetch an updated list of suggestions. Provide an HTTP or HTTPS URL to a web service which returns a JSON-formatted array like this:&lt;/p&gt;
[&quot;timtrueman&quot;, &quot;JakeHarding&quot;, &quot;vskarich&quot;]
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; User input in the text box can be sent to the remote service as a URL parameter %QUERY, so do include %QUERY in your URL.&lt;/p&gt;

&lt;code&gt;https://twitter.com/accounts?q=%QUERY&lt;/code&gt;

&lt;p&gt;Note: to use a Pipeline Pilot protocol that will process the text box value typed in by the user, enter the url below with the protocol GUID and the %QUERY in it. You can omit servername and port:&lt;/p&gt;&lt;p&gt;&lt;code&gt;/auth/launchjob?_compat=1&amp;_protocol={123456}&amp;myparameter=%QUERY&lt;/code&gt;&lt;/p&gt;(do not change the word %QUERY). To help you, we created an example: &lt;code&gt;Protocols\Examples\Semantic UI\Form\Auto-suggest in a Text Box\Search Compounds&lt;/code&gt;.
&lt;p&gt;When using remote typeahead with a Pipeline Pilot protocol, the user must already logged in to Pipeline Pilot via a web client, otherwise typeahead won&apos;t work. If your test isn&apos;t working check that you already logged into webport in your web browser.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Limit" type="LongType" required="false" visibility="visible" multi="false">
						<sci:help>Limit</sci:help>
						<sci:value>10</sci:value>
					</sci:arg>
					<sci:arg name="Autocomplete" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>Enable automatic browser autocomplete on this webform input field?

Autocomplete shows a history of user inputs in the text box when anything is being typed in the box.

This option is overridden if the text box has typeahead enabled. Typeahead displays its hints instead of autocomplete.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
						<sci:value>class_, guid, a1, a2, a3, TypeaheadClass</sci:value>
					</sci:arg>
					<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
						<sci:member>RunToCompletion Categorize Using</sci:member>
						<sci:legalval selected="true">False</sci:legalval>
						<sci:legalval>True - For Each Data Record</sci:legalval>
						<sci:legalval>True - For Each Category</sci:legalval>
					</sci:arg>
					<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
						<sci:member>Parallel Processing Options Batch Size</sci:member>
						<sci:member>Parallel Processing Options Server</sci:member>
						<sci:member>Parallel Processing Options Preserve Order</sci:member>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
						<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
#rtcForEachCategory := (Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
elsif (#rtcForEachCategory) then
	SetDisabledDetails(&quot;This parameter is not applicable when &apos;RunToCompletion&apos; is set to &apos;True - For Each Category&apos;&quot;);
end if;
#parallel and not #rtcForEachCategory;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
						<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
						<sci:member>Parallel Processing Options Server Processes</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
						<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Run subprotocol on grid engine if available.</sci:help>
						<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
						<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Constant GUID" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Override an automatically set GUID inside the component with this value.&lt;/p&gt; &lt;p&gt;If set, HTML element(s) will have their IDs set using this value instead of a randomly generated one.&lt;/p&gt;&lt;p&gt;Spaces or special characters are not allowed, only alphanumeric. The ID is case-sensitive.&lt;/p&gt;
</sci:help>
						<sci:validscript>SetInvalidDetails(ParameterName() . &apos; must be alphanumeric. Spaces or special characters are not allowed.&apos;);
numValues(rMatch(Parameter(), &apos;[^a-zA-Z0-9]+&apos;, &apos;ig&apos;)) == 0;</sci:validscript>
						<sci:legalval/>
						<sci:legalval>$(Constant GUID)</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval>ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="Popup" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
							<sci:propval name="SCI_InitializeUsingOrigType" ishidden="true">GroupType</sci:propval>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup displays additional information in a temporary message.</sci:help>
						<sci:member>Popup Content</sci:member>
						<sci:member>Basic Popup</sci:member>
						<sci:member>Popup Appearance</sci:member>
						<sci:member>Behavior</sci:member>
					</sci:arg>
					<sci:arg name="Popup Content" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup Content</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>Popup content. (HTML is allowed).</sci:help>
					</sci:arg>
					<sci:arg name="Basic Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Basic Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can provide basic or extended formatting.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Popup Appearance" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup Appearance</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>Appearance</sci:help>
						<sci:member>Popup Width</sci:member>
						<sci:member>Fluid Popup</sci:member>
						<sci:member>Popup Size</sci:member>
						<sci:member>Flowing Popup</sci:member>
						<sci:member>Inverted Popup</sci:member>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable &apos;.ParameterName().&apos;, set Basic Popup to False&apos;);
not Parameter(&apos;Basic Popup&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Popup Width" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup Width</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can be wide or very wide to allow for longer content.</sci:help>
						<sci:legalval/>
						<sci:legalval>wide</sci:legalval>
						<sci:legalval>very wide</sci:legalval>
					</sci:arg>
					<sci:arg name="Fluid Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Fluid Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A fluid popup will take up the entire width of its  container.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Popup Size" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup Size</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can vary in font size.</sci:help>
						<sci:legalval/>
						<sci:legalval>mini</sci:legalval>
						<sci:legalval>tiny</sci:legalval>
						<sci:legalval>small</sci:legalval>
						<sci:legalval>large</sci:legalval>
						<sci:legalval>huge</sci:legalval>
					</sci:arg>
					<sci:arg name="Flowing Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Flowing Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can have no maximum width and continue to flow to fit its content.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Inverted Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Inverted Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can have its colors inverted.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Behavior" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Behavior</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>Behavior</sci:help>
						<sci:member>Show On</sci:member>
					</sci:arg>
					<sci:arg name="Show On" type="StringType" required="true" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Show On</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>When to show the popup. Hover (mouseover), click, focus (when a form element such as a text box is in focus).</sci:help>
						<sci:legalval selected="true">hover</sci:legalval>
						<sci:legalval>click</sci:legalval>
						<sci:legalval>focus</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Text Box (Semantic UI)</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>ReportSubProtocolNode</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>790</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{9F37F5CB-5B08-4AE7-BAC5-FA0394004CD8}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>618 -820</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Text Box (Semantic UI).</sci:value>
						<sci:value>&lt;p&gt;A text box is an area where you can enter and edit content.  A text box can be a simple, single-line text box, a multiple-line text box, or a password field.&lt;/p&gt;
&lt;p&gt;Validation and typeahead parameters are available.&lt;/p&gt;</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
						<sci:value>None</sci:value>
						<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>16.1.0.1140</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval>Owner Access Only</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>bondadx2</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Sat Jul 23 17:59:02 2016</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>104</sci:value>
					</sci:arg>
					<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Processing Order</sci:help>
						<sci:value>DrainTopDown</sci:value>
					</sci:arg>
					<sci:arg name="OriginalPackage" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>OriginalPackage</sci:help>
						<sci:value>scitegic/coreutils</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Semantic UI\Forms\Functional Elements\Text Box (Semantic UI)</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol/>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="Text Box (Semantic UI)" version="2">
					<sci:arg name="Parameter to Map" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;The name of a parameter on the target protocol that this component&apos;s value should be mapped to.&lt;/p&gt;</sci:help>
						<sci:member>Default Value</sci:member>
						<sci:member>Validation Options</sci:member>
						<sci:value>shipping-address</sci:value>
					</sci:arg>
					<sci:arg name="Default Value" type="ExpressionType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:help>&lt;p&gt;The initial value contained in the text box.  To have a blank text box, enter &apos;&apos; (two single quotes).&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Tis parameter is ExpressionType. You can enter a value in quotes, a global variable with  the @ notation, or a property name on the incoming data stream.&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;
&lt;li&gt;
Due to inconsistent input value attribute handling by various browsers, it is recommended that the Default Value parameter not include leading or trailing whitespace. Depending on the browser, this whitespace may be omitted when the form is submitted. A possible workaround is to flank the entire value with a special character that can then be stripped when the input value is processed in the work protocol.
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Validation Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:member>Advanced</sci:member>
						<sci:member>Basic Rules</sci:member>
					</sci:arg>
					<sci:arg name="Basic Rules" type="TextType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>&lt;p&gt;(Optional) basic validation rules, e.g. not empty, numbers only, etc.
&lt;/p&gt;
&lt;p&gt;For available rules, refer to &lt;a href=&quot;javascript:DoLink(&apos;http://jqueryvalidation.org/documentation&apos;)&quot;&gt;http://jqueryvalidation.org/documentation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;A list of all recognized basic rules (several rules may be combined):&lt;/p&gt;
&lt;br&gt;	required: true,
&lt;br&gt;	minlength: 3,
&lt;br&gt;	maxlength: 5,
&lt;br&gt;	rangelength: [2, 6],
&lt;br&gt;	min: 0.5,
&lt;br&gt;	max: 10.1,
&lt;br&gt;	range: [-5, 25.6],
&lt;br&gt;	email: true,
&lt;br&gt;	url: true,
&lt;br&gt;	date: true,
&lt;br&gt;	dateISO: true,
&lt;br&gt;	number: true,
&lt;br&gt;	digits: true,&lt;br&gt;
</sci:help>
						<sci:value>/* (Optional) basic validation rules, e.g. not empty, numbers only, etc.

	For available rules, refer to http://jqueryvalidation.org/documentation

	A list of all recognized basic rules (several rules may be combined):

	required: true,
	minlength: 3,
	maxlength: 5,
	rangelength: [2, 6],
	min: 0.5,
	max: 10.1,
	range: [-5, 25.6],
	email: true,
	url: true,
	date: true,
	dateISO: true,
	number: true,
	digits: true,

	There should be no comma on the last rule.
*/
</sci:value>
					</sci:arg>
					<sci:arg name="Advanced" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:member>Validator Protocol</sci:member>
					</sci:arg>
					<sci:arg name="Validator Protocol" type="ProtocolLinkType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>&lt;p&gt;(Optional) A protocol to perform input value validation.&lt;/p&gt;

&lt;p&gt;Make a new protocol using the template protocol (Labspace/Validator Protocol Template) and modify it to return True if the validation is successful, and a double-quote-enclosed string (a message) if the validation is unsuccessful.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Appearance" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:help>Appearance</sci:help>
						<sci:member>Required</sci:member>
						<sci:member>Enabled</sci:member>
						<sci:member>Width</sci:member>
						<sci:member>Placeholder</sci:member>
						<sci:member>Label</sci:member>
						<sci:member>Text Box Options</sci:member>
						<sci:member>Typeahead Options</sci:member>
						<sci:member>Autocomplete</sci:member>
					</sci:arg>
					<sci:arg name="Required" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>Required?</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Enabled" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>State</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>Enabled?</sci:help>
						<sci:legalvalscript>if (Parameter(&apos;Required&apos;)) then
		resize(lvals, 1);
	    lvals[1] := True;
	else
		resize(lvals, 2);
	    lvals[1] := True; lvals[2] := False;
	end if;
	SetLegalValues(lvals);</sci:legalvalscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Width" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>Width of the text box including its label (if present), in columns. Full screen is 16 columns. Leave blank to auto-size up to the widest available space.</sci:help>
						<sci:legalval/>
						<sci:legalval>one wide</sci:legalval>
						<sci:legalval>two wide</sci:legalval>
						<sci:legalval>three wide</sci:legalval>
						<sci:legalval>four wide</sci:legalval>
						<sci:legalval>five wide</sci:legalval>
						<sci:legalval>six wide</sci:legalval>
						<sci:legalval>seven wide</sci:legalval>
						<sci:legalval>eight wide</sci:legalval>
						<sci:legalval>nine wide</sci:legalval>
						<sci:legalval>ten wide</sci:legalval>
						<sci:legalval>eleven wide</sci:legalval>
						<sci:legalval selected="true">twelve wide</sci:legalval>
						<sci:legalval>thirteen wide</sci:legalval>
						<sci:legalval>fourteen wide</sci:legalval>
						<sci:legalval>fifteen wide</sci:legalval>
						<sci:legalval>sixteen wide</sci:legalval>
					</sci:arg>
					<sci:arg name="Placeholder" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>Placeholder</sci:help>
						<sci:value>Street Address</sci:value>
					</sci:arg>
					<sci:arg name="Label" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>Label</sci:help>
						<sci:member>Label Location</sci:member>
						<sci:validscript>SetInvalidDetails(ParameterName() . &apos; must be set when the field is set to Required.&apos;);
(Parameter() ne &apos;&apos; and Parameter(&apos;Required&apos;) ) or not Parameter(&apos;Required&apos;)</sci:validscript>
					</sci:arg>
					<sci:arg name="Label Location" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>Location</sci:help>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable &apos;.ParameterName().&apos;, set a Label.&apos;);
Parameter(&apos;Label&apos;) ne &apos;&apos;;</sci:enabledscript>
						<sci:legalval selected="true">Above Field</sci:legalval>
						<sci:legalval>Left of Field</sci:legalval>
					</sci:arg>
					<sci:arg name="Text Box Options" type="GroupType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;Options to control the text box.&lt;/p&gt;</sci:help>
						<sci:member>Number of Lines</sci:member>
						<sci:member>Wrap Multiple Lines</sci:member>
						<sci:member>Is Password</sci:member>
						<sci:member>Is Array</sci:member>
						<sci:member>Array Value Display</sci:member>
					</sci:arg>
					<sci:arg name="Number of Lines" type="LongType" required="true" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;The number of lines of text to display.&lt;/p&gt;</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="Wrap Multiple Lines" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;If &lt;i&gt;Number Of Lines&lt;/i&gt; is greater than 1, this parameter determines whether long lines are wrapped.&lt;/p&gt;</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Is Password" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;If true, the text box will have its content masked with the default browser password character so that it is not visible.&lt;/p&gt;</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Is Array" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Determines whether data will be displayed and submitted as array data. If set to &quot;True&quot;, then &lt;em&gt;Array Value Display&lt;/em&gt; determines the character used to separate array values.&lt;/p&gt;

&lt;p&gt;With a value of &quot;Based on Input Data&quot;, the data type of the &lt;em&gt;Default Value&lt;/em&gt; will be examined. If no &lt;em&gt;Default Value&lt;/em&gt; is provided, then a value of &quot;False&quot; is assumed.&lt;/p&gt;
</sci:help>
						<sci:legalval selected="true">Based on Input Data</sci:legalval>
						<sci:legalval>True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Array Value Display" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Determines the array value separator if data is to be displayed and submitted in array format (as determined by the value of &lt;em&gt;Is Array&lt;/em&gt;.)


</sci:help>
						<sci:enabledscript>enabled := Parameter(&quot;Is Array&quot;) NE &apos;False&apos;;
enabled;</sci:enabledscript>
						<sci:legalval selected="true">Separate by Newlines</sci:legalval>
						<sci:legalval>Separate by Commas</sci:legalval>
					</sci:arg>
					<sci:arg name="Typeahead Options" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>&lt;p&gt;Enable contextual suggestions in the text box. Both local and remote data can be used for suggestions.&lt;/p&gt;
&lt;a href=&quot;javascript:DoLink(&apos;http://twitter.github.io/typeahead.js/examples&apos;)&quot;&gt;Twitter Typeahead&lt;/a&gt;</sci:help>
						<sci:member>Local</sci:member>
						<sci:member>Prefetch</sci:member>
						<sci:member>Remote</sci:member>
						<sci:member>Limit</sci:member>
					</sci:arg>
					<sci:arg name="Local" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;(Optional parameter) Provide a JSON-formatted array like this:&lt;/p&gt;
[&quot;timtrueman&quot;, &quot;JakeHarding&quot;, &quot;vskarich&quot;]</sci:help>
					</sci:arg>
					<sci:arg name="Prefetch" type="ProtocolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>&lt;p&gt;(Optional parameter) Provide a protocol which can generate a list of values to pre-populate this text box when the web page loads. This protocol must produce a text file containing a JSON-encoded array:&lt;/p&gt;
&lt;code&gt;[&quot;BAS-0000001&quot;, &quot;BAS-00000002&quot;]&lt;/code&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Remote" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;(Optional parameter) As the user types into the text box, with each change fetch an updated list of suggestions. Provide an HTTP or HTTPS URL to a web service which returns a JSON-formatted array like this:&lt;/p&gt;
[&quot;timtrueman&quot;, &quot;JakeHarding&quot;, &quot;vskarich&quot;]
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; User input in the text box can be sent to the remote service as a URL parameter %QUERY, so do include %QUERY in your URL.&lt;/p&gt;

&lt;code&gt;https://twitter.com/accounts?q=%QUERY&lt;/code&gt;

&lt;p&gt;Note: to use a Pipeline Pilot protocol that will process the text box value typed in by the user, enter the url below with the protocol GUID and the %QUERY in it. You can omit servername and port:&lt;/p&gt;&lt;p&gt;&lt;code&gt;/auth/launchjob?_compat=1&amp;_protocol={123456}&amp;myparameter=%QUERY&lt;/code&gt;&lt;/p&gt;(do not change the word %QUERY). To help you, we created an example: &lt;code&gt;Protocols\Examples\Semantic UI\Form\Auto-suggest in a Text Box\Search Compounds&lt;/code&gt;.
&lt;p&gt;When using remote typeahead with a Pipeline Pilot protocol, the user must already logged in to Pipeline Pilot via a web client, otherwise typeahead won&apos;t work. If your test isn&apos;t working check that you already logged into webport in your web browser.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Limit" type="LongType" required="false" visibility="visible" multi="false">
						<sci:help>Limit</sci:help>
						<sci:value>10</sci:value>
					</sci:arg>
					<sci:arg name="Autocomplete" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>Enable automatic browser autocomplete on this webform input field?

Autocomplete shows a history of user inputs in the text box when anything is being typed in the box.

This option is overridden if the text box has typeahead enabled. Typeahead displays its hints instead of autocomplete.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
						<sci:value>class_, guid, a1, a2, a3, TypeaheadClass</sci:value>
					</sci:arg>
					<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
						<sci:member>RunToCompletion Categorize Using</sci:member>
						<sci:legalval selected="true">False</sci:legalval>
						<sci:legalval>True - For Each Data Record</sci:legalval>
						<sci:legalval>True - For Each Category</sci:legalval>
					</sci:arg>
					<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
						<sci:member>Parallel Processing Options Batch Size</sci:member>
						<sci:member>Parallel Processing Options Server</sci:member>
						<sci:member>Parallel Processing Options Preserve Order</sci:member>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
						<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
#rtcForEachCategory := (Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
elsif (#rtcForEachCategory) then
	SetDisabledDetails(&quot;This parameter is not applicable when &apos;RunToCompletion&apos; is set to &apos;True - For Each Category&apos;&quot;);
end if;
#parallel and not #rtcForEachCategory;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
						<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
						<sci:member>Parallel Processing Options Server Processes</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
						<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Run subprotocol on grid engine if available.</sci:help>
						<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
						<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Constant GUID" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Override an automatically set GUID inside the component with this value.&lt;/p&gt; &lt;p&gt;If set, HTML element(s) will have their IDs set using this value instead of a randomly generated one.&lt;/p&gt;&lt;p&gt;Spaces or special characters are not allowed, only alphanumeric. The ID is case-sensitive.&lt;/p&gt;
</sci:help>
						<sci:validscript>SetInvalidDetails(ParameterName() . &apos; must be alphanumeric. Spaces or special characters are not allowed.&apos;);
numValues(rMatch(Parameter(), &apos;[^a-zA-Z0-9]+&apos;, &apos;ig&apos;)) == 0;</sci:validscript>
						<sci:legalval/>
						<sci:legalval>$(Constant GUID)</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval>ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="Popup" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
							<sci:propval name="SCI_InitializeUsingOrigType" ishidden="true">GroupType</sci:propval>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup displays additional information in a temporary message.</sci:help>
						<sci:member>Popup Content</sci:member>
						<sci:member>Basic Popup</sci:member>
						<sci:member>Popup Appearance</sci:member>
						<sci:member>Behavior</sci:member>
					</sci:arg>
					<sci:arg name="Popup Content" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup Content</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>Popup content. (HTML is allowed).</sci:help>
					</sci:arg>
					<sci:arg name="Basic Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Basic Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can provide basic or extended formatting.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Popup Appearance" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup Appearance</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>Appearance</sci:help>
						<sci:member>Popup Width</sci:member>
						<sci:member>Fluid Popup</sci:member>
						<sci:member>Popup Size</sci:member>
						<sci:member>Flowing Popup</sci:member>
						<sci:member>Inverted Popup</sci:member>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable &apos;.ParameterName().&apos;, set Basic Popup to False&apos;);
not Parameter(&apos;Basic Popup&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Popup Width" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup Width</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can be wide or very wide to allow for longer content.</sci:help>
						<sci:legalval/>
						<sci:legalval>wide</sci:legalval>
						<sci:legalval>very wide</sci:legalval>
					</sci:arg>
					<sci:arg name="Fluid Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Fluid Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A fluid popup will take up the entire width of its  container.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Popup Size" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup Size</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can vary in font size.</sci:help>
						<sci:legalval/>
						<sci:legalval>mini</sci:legalval>
						<sci:legalval>tiny</sci:legalval>
						<sci:legalval>small</sci:legalval>
						<sci:legalval>large</sci:legalval>
						<sci:legalval>huge</sci:legalval>
					</sci:arg>
					<sci:arg name="Flowing Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Flowing Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can have no maximum width and continue to flow to fit its content.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Inverted Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Inverted Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can have its colors inverted.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Behavior" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Behavior</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>Behavior</sci:help>
						<sci:member>Show On</sci:member>
					</sci:arg>
					<sci:arg name="Show On" type="StringType" required="true" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Show On</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>When to show the popup. Hover (mouseover), click, focus (when a form element such as a text box is in focus).</sci:help>
						<sci:legalval selected="true">hover</sci:legalval>
						<sci:legalval>click</sci:legalval>
						<sci:legalval>focus</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Text Box (Semantic UI)</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>ReportSubProtocolNode</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>790</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{9F37F5CB-5B08-4AE7-BAC5-FA0394004CD8}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>618 -1195</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Text Box (Semantic UI).</sci:value>
						<sci:value>&lt;p&gt;A text box is an area where you can enter and edit content.  A text box can be a simple, single-line text box, a multiple-line text box, or a password field.&lt;/p&gt;
&lt;p&gt;Validation and typeahead parameters are available.&lt;/p&gt;</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
						<sci:value>None</sci:value>
						<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>16.1.0.1140</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval>Owner Access Only</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>bondadx2</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Sat Jul 23 17:59:02 2016</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>119</sci:value>
					</sci:arg>
					<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Processing Order</sci:help>
						<sci:value>DrainTopDown</sci:value>
					</sci:arg>
					<sci:arg name="OriginalPackage" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>OriginalPackage</sci:help>
						<sci:value>scitegic/coreutils</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Semantic UI\Forms\Functional Elements\Text Box (Semantic UI)</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol/>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="Horizontal Field Group (Semantic UI)" version="2">
					<sci:arg name="Number of Fields" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Number of Fields</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:legalval/>
						<sci:legalval>one</sci:legalval>
						<sci:legalval selected="true">two</sci:legalval>
						<sci:legalval>three</sci:legalval>
						<sci:legalval>four</sci:legalval>
						<sci:legalval>five</sci:legalval>
						<sci:legalval>six</sci:legalval>
						<sci:legalval>seven</sci:legalval>
						<sci:legalval>eight</sci:legalval>
						<sci:legalval>nine</sci:legalval>
						<sci:legalval>ten</sci:legalval>
						<sci:legalval>eleven</sci:legalval>
						<sci:legalval>twelve</sci:legalval>
						<sci:legalval>thirteen</sci:legalval>
						<sci:legalval>fourteen</sci:legalval>
						<sci:legalval>fifteen</sci:legalval>
						<sci:legalval>sixteen</sci:legalval>
					</sci:arg>
					<sci:arg name="Appearance" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:member>Label</sci:member>
						<sci:member>Width</sci:member>
					</sci:arg>
					<sci:arg name="Label" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>Label will appear above the field group.</sci:help>
						<sci:value>Billing Address</sci:value>
					</sci:arg>
					<sci:arg name="Width" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>Width of the text box including its label (if present), in columns. Full screen is 16 columns. Leave blank to auto-size up to the widest available space.</sci:help>
						<sci:legalval/>
						<sci:legalval>one wide</sci:legalval>
						<sci:legalval>two wide</sci:legalval>
						<sci:legalval>three wide</sci:legalval>
						<sci:legalval>four wide</sci:legalval>
						<sci:legalval>five wide</sci:legalval>
						<sci:legalval>six wide</sci:legalval>
						<sci:legalval>seven wide</sci:legalval>
						<sci:legalval>eight wide</sci:legalval>
						<sci:legalval>nine wide</sci:legalval>
						<sci:legalval>ten wide</sci:legalval>
						<sci:legalval>eleven wide</sci:legalval>
						<sci:legalval>twelve wide</sci:legalval>
						<sci:legalval>thirteen wide</sci:legalval>
						<sci:legalval>fourteen wide</sci:legalval>
						<sci:legalval>fifteen wide</sci:legalval>
						<sci:legalval>sixteen wide</sci:legalval>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
						<sci:member>RunToCompletion Categorize Using</sci:member>
						<sci:legalval selected="true">False</sci:legalval>
						<sci:legalval>True - For Each Data Record</sci:legalval>
						<sci:legalval>True - For Each Category</sci:legalval>
					</sci:arg>
					<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
						<sci:member>Parallel Processing Options Batch Size</sci:member>
						<sci:member>Parallel Processing Options Server</sci:member>
						<sci:member>Parallel Processing Options Preserve Order</sci:member>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
						<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
#rtcForEachCategory := (Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
elsif (#rtcForEachCategory) then
	SetDisabledDetails(&quot;This parameter is not applicable when &apos;RunToCompletion&apos; is set to &apos;True - For Each Category&apos;&quot;);
end if;
#parallel and not #rtcForEachCategory;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
						<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
						<sci:member>Parallel Processing Options Server Processes</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
						<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Run subprotocol on grid engine if available.</sci:help>
						<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
						<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:value>ComponentReturnsPass</sci:value>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval>ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Horizontal Field Group (Semantic UI)</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>ReportSubProtocolNode</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>790</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{77FD9923-E478-4AE3-BFA9-CBE5479D3AEF}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>978 -1395</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Horizontal Field Group (Semantic UI).</sci:value>
						<sci:value>&lt;p&gt;A text box is an area where you can enter and edit content.  A text box can be a simple, single-line text box, a multiple-line text box, or a password field.&lt;/p&gt;
&lt;p&gt;Validation and typeahead parameters are available.&lt;/p&gt;</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
						<sci:value>None</sci:value>
						<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>16.1.0.1140</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval>Owner Access Only</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>bondadx2</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Tue Jun 14 10:41:27 2016</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>120</sci:value>
					</sci:arg>
					<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Processing Order</sci:help>
						<sci:value>DrainTopDown</sci:value>
					</sci:arg>
					<sci:arg name="OriginalPackage" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>OriginalPackage</sci:help>
						<sci:value>scitegic/coreutils</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Modified</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Semantic UI\Forms\Formatting Elements\Horizontal Field Group (Semantic UI)</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol/>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="Text Box (Semantic UI)" version="2">
					<sci:arg name="Parameter to Map" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;The name of a parameter on the target protocol that this component&apos;s value should be mapped to.&lt;/p&gt;</sci:help>
						<sci:member>Default Value</sci:member>
						<sci:member>Validation Options</sci:member>
						<sci:value>sipping-address-2</sci:value>
					</sci:arg>
					<sci:arg name="Default Value" type="ExpressionType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:help>&lt;p&gt;The initial value contained in the text box.  To have a blank text box, enter &apos;&apos; (two single quotes).&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Tis parameter is ExpressionType. You can enter a value in quotes, a global variable with  the @ notation, or a property name on the incoming data stream.&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;
&lt;li&gt;
Due to inconsistent input value attribute handling by various browsers, it is recommended that the Default Value parameter not include leading or trailing whitespace. Depending on the browser, this whitespace may be omitted when the form is submitted. A possible workaround is to flank the entire value with a special character that can then be stripped when the input value is processed in the work protocol.
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Validation Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:member>Advanced</sci:member>
						<sci:member>Basic Rules</sci:member>
					</sci:arg>
					<sci:arg name="Basic Rules" type="TextType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>&lt;p&gt;(Optional) basic validation rules, e.g. not empty, numbers only, etc.
&lt;/p&gt;
&lt;p&gt;For available rules, refer to &lt;a href=&quot;javascript:DoLink(&apos;http://jqueryvalidation.org/documentation&apos;)&quot;&gt;http://jqueryvalidation.org/documentation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;A list of all recognized basic rules (several rules may be combined):&lt;/p&gt;
&lt;br&gt;	required: true,
&lt;br&gt;	minlength: 3,
&lt;br&gt;	maxlength: 5,
&lt;br&gt;	rangelength: [2, 6],
&lt;br&gt;	min: 0.5,
&lt;br&gt;	max: 10.1,
&lt;br&gt;	range: [-5, 25.6],
&lt;br&gt;	email: true,
&lt;br&gt;	url: true,
&lt;br&gt;	date: true,
&lt;br&gt;	dateISO: true,
&lt;br&gt;	number: true,
&lt;br&gt;	digits: true,&lt;br&gt;
</sci:help>
						<sci:value>/* (Optional) basic validation rules, e.g. not empty, numbers only, etc.

	For available rules, refer to http://jqueryvalidation.org/documentation

	A list of all recognized basic rules (several rules may be combined):

	required: true,
	minlength: 3,
	maxlength: 5,
	rangelength: [2, 6],
	min: 0.5,
	max: 10.1,
	range: [-5, 25.6],
	email: true,
	url: true,
	date: true,
	dateISO: true,
	number: true,
	digits: true,

	There should be no comma on the last rule.
*/
</sci:value>
					</sci:arg>
					<sci:arg name="Advanced" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:member>Validator Protocol</sci:member>
					</sci:arg>
					<sci:arg name="Validator Protocol" type="ProtocolLinkType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>&lt;p&gt;(Optional) A protocol to perform input value validation.&lt;/p&gt;

&lt;p&gt;Make a new protocol using the template protocol (Labspace/Validator Protocol Template) and modify it to return True if the validation is successful, and a double-quote-enclosed string (a message) if the validation is unsuccessful.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Appearance" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:help>Appearance</sci:help>
						<sci:member>Required</sci:member>
						<sci:member>Enabled</sci:member>
						<sci:member>Width</sci:member>
						<sci:member>Placeholder</sci:member>
						<sci:member>Label</sci:member>
						<sci:member>Text Box Options</sci:member>
						<sci:member>Typeahead Options</sci:member>
						<sci:member>Autocomplete</sci:member>
					</sci:arg>
					<sci:arg name="Required" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>Required?</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Enabled" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>State</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>Enabled?</sci:help>
						<sci:legalvalscript>if (Parameter(&apos;Required&apos;)) then
		resize(lvals, 1);
	    lvals[1] := True;
	else
		resize(lvals, 2);
	    lvals[1] := True; lvals[2] := False;
	end if;
	SetLegalValues(lvals);</sci:legalvalscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Width" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>Width of the text box including its label (if present), in columns. Full screen is 16 columns. Leave blank to auto-size up to the widest available space.</sci:help>
						<sci:legalval/>
						<sci:legalval>one wide</sci:legalval>
						<sci:legalval>two wide</sci:legalval>
						<sci:legalval>three wide</sci:legalval>
						<sci:legalval>four wide</sci:legalval>
						<sci:legalval>five wide</sci:legalval>
						<sci:legalval selected="true">six wide</sci:legalval>
						<sci:legalval>seven wide</sci:legalval>
						<sci:legalval>eight wide</sci:legalval>
						<sci:legalval>nine wide</sci:legalval>
						<sci:legalval>ten wide</sci:legalval>
						<sci:legalval>eleven wide</sci:legalval>
						<sci:legalval>twelve wide</sci:legalval>
						<sci:legalval>thirteen wide</sci:legalval>
						<sci:legalval>fourteen wide</sci:legalval>
						<sci:legalval>fifteen wide</sci:legalval>
						<sci:legalval>sixteen wide</sci:legalval>
					</sci:arg>
					<sci:arg name="Placeholder" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>Placeholder</sci:help>
						<sci:value>Apt #</sci:value>
					</sci:arg>
					<sci:arg name="Label" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>Label</sci:help>
						<sci:member>Label Location</sci:member>
						<sci:validscript>SetInvalidDetails(ParameterName() . &apos; must be set when the field is set to Required.&apos;);
(Parameter() ne &apos;&apos; and Parameter(&apos;Required&apos;) ) or not Parameter(&apos;Required&apos;)</sci:validscript>
					</sci:arg>
					<sci:arg name="Label Location" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>Location</sci:help>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable &apos;.ParameterName().&apos;, set a Label.&apos;);
Parameter(&apos;Label&apos;) ne &apos;&apos;;</sci:enabledscript>
						<sci:legalval selected="true">Above Field</sci:legalval>
						<sci:legalval>Left of Field</sci:legalval>
					</sci:arg>
					<sci:arg name="Text Box Options" type="GroupType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;Options to control the text box.&lt;/p&gt;</sci:help>
						<sci:member>Number of Lines</sci:member>
						<sci:member>Wrap Multiple Lines</sci:member>
						<sci:member>Is Password</sci:member>
						<sci:member>Is Array</sci:member>
						<sci:member>Array Value Display</sci:member>
					</sci:arg>
					<sci:arg name="Number of Lines" type="LongType" required="true" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;The number of lines of text to display.&lt;/p&gt;</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="Wrap Multiple Lines" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;If &lt;i&gt;Number Of Lines&lt;/i&gt; is greater than 1, this parameter determines whether long lines are wrapped.&lt;/p&gt;</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Is Password" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;If true, the text box will have its content masked with the default browser password character so that it is not visible.&lt;/p&gt;</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Is Array" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Determines whether data will be displayed and submitted as array data. If set to &quot;True&quot;, then &lt;em&gt;Array Value Display&lt;/em&gt; determines the character used to separate array values.&lt;/p&gt;

&lt;p&gt;With a value of &quot;Based on Input Data&quot;, the data type of the &lt;em&gt;Default Value&lt;/em&gt; will be examined. If no &lt;em&gt;Default Value&lt;/em&gt; is provided, then a value of &quot;False&quot; is assumed.&lt;/p&gt;
</sci:help>
						<sci:legalval selected="true">Based on Input Data</sci:legalval>
						<sci:legalval>True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Array Value Display" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Determines the array value separator if data is to be displayed and submitted in array format (as determined by the value of &lt;em&gt;Is Array&lt;/em&gt;.)


</sci:help>
						<sci:enabledscript>enabled := Parameter(&quot;Is Array&quot;) NE &apos;False&apos;;
enabled;</sci:enabledscript>
						<sci:legalval selected="true">Separate by Newlines</sci:legalval>
						<sci:legalval>Separate by Commas</sci:legalval>
					</sci:arg>
					<sci:arg name="Typeahead Options" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>&lt;p&gt;Enable contextual suggestions in the text box. Both local and remote data can be used for suggestions.&lt;/p&gt;
&lt;a href=&quot;javascript:DoLink(&apos;http://twitter.github.io/typeahead.js/examples&apos;)&quot;&gt;Twitter Typeahead&lt;/a&gt;</sci:help>
						<sci:member>Local</sci:member>
						<sci:member>Prefetch</sci:member>
						<sci:member>Remote</sci:member>
						<sci:member>Limit</sci:member>
					</sci:arg>
					<sci:arg name="Local" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;(Optional parameter) Provide a JSON-formatted array like this:&lt;/p&gt;
[&quot;timtrueman&quot;, &quot;JakeHarding&quot;, &quot;vskarich&quot;]</sci:help>
					</sci:arg>
					<sci:arg name="Prefetch" type="ProtocolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>&lt;p&gt;(Optional parameter) Provide a protocol which can generate a list of values to pre-populate this text box when the web page loads. This protocol must produce a text file containing a JSON-encoded array:&lt;/p&gt;
&lt;code&gt;[&quot;BAS-0000001&quot;, &quot;BAS-00000002&quot;]&lt;/code&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Remote" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;(Optional parameter) As the user types into the text box, with each change fetch an updated list of suggestions. Provide an HTTP or HTTPS URL to a web service which returns a JSON-formatted array like this:&lt;/p&gt;
[&quot;timtrueman&quot;, &quot;JakeHarding&quot;, &quot;vskarich&quot;]
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; User input in the text box can be sent to the remote service as a URL parameter %QUERY, so do include %QUERY in your URL.&lt;/p&gt;

&lt;code&gt;https://twitter.com/accounts?q=%QUERY&lt;/code&gt;

&lt;p&gt;Note: to use a Pipeline Pilot protocol that will process the text box value typed in by the user, enter the url below with the protocol GUID and the %QUERY in it. You can omit servername and port:&lt;/p&gt;&lt;p&gt;&lt;code&gt;/auth/launchjob?_compat=1&amp;_protocol={123456}&amp;myparameter=%QUERY&lt;/code&gt;&lt;/p&gt;(do not change the word %QUERY). To help you, we created an example: &lt;code&gt;Protocols\Examples\Semantic UI\Form\Auto-suggest in a Text Box\Search Compounds&lt;/code&gt;.
&lt;p&gt;When using remote typeahead with a Pipeline Pilot protocol, the user must already logged in to Pipeline Pilot via a web client, otherwise typeahead won&apos;t work. If your test isn&apos;t working check that you already logged into webport in your web browser.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Limit" type="LongType" required="false" visibility="visible" multi="false">
						<sci:help>Limit</sci:help>
						<sci:value>10</sci:value>
					</sci:arg>
					<sci:arg name="Autocomplete" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>Enable automatic browser autocomplete on this webform input field?

Autocomplete shows a history of user inputs in the text box when anything is being typed in the box.

This option is overridden if the text box has typeahead enabled. Typeahead displays its hints instead of autocomplete.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
						<sci:value>class_, guid, a1, a2, a3, TypeaheadClass</sci:value>
					</sci:arg>
					<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
						<sci:member>RunToCompletion Categorize Using</sci:member>
						<sci:legalval selected="true">False</sci:legalval>
						<sci:legalval>True - For Each Data Record</sci:legalval>
						<sci:legalval>True - For Each Category</sci:legalval>
					</sci:arg>
					<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
						<sci:member>Parallel Processing Options Batch Size</sci:member>
						<sci:member>Parallel Processing Options Server</sci:member>
						<sci:member>Parallel Processing Options Preserve Order</sci:member>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
						<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
#rtcForEachCategory := (Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
elsif (#rtcForEachCategory) then
	SetDisabledDetails(&quot;This parameter is not applicable when &apos;RunToCompletion&apos; is set to &apos;True - For Each Category&apos;&quot;);
end if;
#parallel and not #rtcForEachCategory;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
						<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
						<sci:member>Parallel Processing Options Server Processes</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
						<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Run subprotocol on grid engine if available.</sci:help>
						<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
						<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Constant GUID" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Override an automatically set GUID inside the component with this value.&lt;/p&gt; &lt;p&gt;If set, HTML element(s) will have their IDs set using this value instead of a randomly generated one.&lt;/p&gt;&lt;p&gt;Spaces or special characters are not allowed, only alphanumeric. The ID is case-sensitive.&lt;/p&gt;
</sci:help>
						<sci:validscript>SetInvalidDetails(ParameterName() . &apos; must be alphanumeric. Spaces or special characters are not allowed.&apos;);
numValues(rMatch(Parameter(), &apos;[^a-zA-Z0-9]+&apos;, &apos;ig&apos;)) == 0;</sci:validscript>
						<sci:legalval/>
						<sci:legalval>$(Constant GUID)</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval>ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="Popup" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
							<sci:propval name="SCI_InitializeUsingOrigType" ishidden="true">GroupType</sci:propval>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup displays additional information in a temporary message.</sci:help>
						<sci:member>Popup Content</sci:member>
						<sci:member>Basic Popup</sci:member>
						<sci:member>Popup Appearance</sci:member>
						<sci:member>Behavior</sci:member>
					</sci:arg>
					<sci:arg name="Popup Content" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup Content</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>Popup content. (HTML is allowed).</sci:help>
					</sci:arg>
					<sci:arg name="Basic Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Basic Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can provide basic or extended formatting.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Popup Appearance" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup Appearance</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>Appearance</sci:help>
						<sci:member>Popup Width</sci:member>
						<sci:member>Fluid Popup</sci:member>
						<sci:member>Popup Size</sci:member>
						<sci:member>Flowing Popup</sci:member>
						<sci:member>Inverted Popup</sci:member>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable &apos;.ParameterName().&apos;, set Basic Popup to False&apos;);
not Parameter(&apos;Basic Popup&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Popup Width" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup Width</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can be wide or very wide to allow for longer content.</sci:help>
						<sci:legalval/>
						<sci:legalval>wide</sci:legalval>
						<sci:legalval>very wide</sci:legalval>
					</sci:arg>
					<sci:arg name="Fluid Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Fluid Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A fluid popup will take up the entire width of its  container.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Popup Size" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup Size</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can vary in font size.</sci:help>
						<sci:legalval/>
						<sci:legalval>mini</sci:legalval>
						<sci:legalval>tiny</sci:legalval>
						<sci:legalval>small</sci:legalval>
						<sci:legalval>large</sci:legalval>
						<sci:legalval>huge</sci:legalval>
					</sci:arg>
					<sci:arg name="Flowing Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Flowing Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can have no maximum width and continue to flow to fit its content.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Inverted Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Inverted Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can have its colors inverted.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Behavior" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Behavior</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>Behavior</sci:help>
						<sci:member>Show On</sci:member>
					</sci:arg>
					<sci:arg name="Show On" type="StringType" required="true" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Show On</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>When to show the popup. Hover (mouseover), click, focus (when a form element such as a text box is in focus).</sci:help>
						<sci:legalval selected="true">hover</sci:legalval>
						<sci:legalval>click</sci:legalval>
						<sci:legalval>focus</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Text Box (Semantic UI)</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>ReportSubProtocolNode</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>790</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{9F37F5CB-5B08-4AE7-BAC5-FA0394004CD8}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>618 -1595</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Text Box (Semantic UI).</sci:value>
						<sci:value>&lt;p&gt;A text box is an area where you can enter and edit content.  A text box can be a simple, single-line text box, a multiple-line text box, or a password field.&lt;/p&gt;
&lt;p&gt;Validation and typeahead parameters are available.&lt;/p&gt;</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
						<sci:value>None</sci:value>
						<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>16.1.0.1140</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval>Owner Access Only</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>bondadx2</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Sat Jul 23 17:59:02 2016</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>121</sci:value>
					</sci:arg>
					<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Processing Order</sci:help>
						<sci:value>DrainTopDown</sci:value>
					</sci:arg>
					<sci:arg name="OriginalPackage" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>OriginalPackage</sci:help>
						<sci:value>scitegic/coreutils</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Semantic UI\Forms\Functional Elements\Text Box (Semantic UI)</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol/>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="Delimited Text Text Reader" version="2">
					<sci:arg name="DelimitedText" type="TextType" required="true" visibility="visible" multi="false">
						<sci:help>The contents of a delimited text file. This is a way to include a delimited text file in a protocol without sending an additional file.</sci:help>
						<sci:value>Code,State
,
AL,Alabama
AK,Alaska
AZ,Arizona</sci:value>
					</sci:arg>
					<sci:arg name="Delimiter" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>Specifies the character that separates fields. Options include:

 - FigureOut: Determines the type automatically.
 - Tab: For tab-delimited fields.
 - Space: For space-delimited fields.
 - Comma: For comma-delimited fields.
 - Colon: For colon-delimited fields.
 - Semicolon: For semicolon-delimited fields.</sci:help>
						<sci:member>MultipleValueDelimiter</sci:member>
						<sci:legalval>FigureOut</sci:legalval>
						<sci:legalval>Tab</sci:legalval>
						<sci:legalval>Space</sci:legalval>
						<sci:legalval selected="true">Comma</sci:legalval>
						<sci:legalval>Colon</sci:legalval>
						<sci:legalval>Semicolon</sci:legalval>
					</sci:arg>
					<sci:arg name="MultipleValueDelimiter" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>The delimiter to use between multiple values contained in a single property. If the multiple value delimited exists in any of the input strings in any property, they are separated into an array of values. If &quot;None&quot;, 
values are never separated into multiple values.</sci:help>
						<sci:legalval selected="true">None</sci:legalval>
						<sci:legalval>Semicolon</sci:legalval>
						<sci:legalval>Colon</sci:legalval>
						<sci:legalval>Comma</sci:legalval>
						<sci:legalval>Linefeed</sci:legalval>
					</sci:arg>
					<sci:arg name="HasColumnNames" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>When True, property names are taken from the first line of data in the file. When False, properties are named Column1,Column2, etc.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{7B3502D7-FA57-4EB5-838B-FE6AB0BF0E69}" uimpl="true">
						<sci:help>Lists the set of temporary files which will be converted by the network to true temporary file names</sci:help>
						<sci:value>temp</sci:value>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval>ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Form" type="ProtocolType" required="false" visibility="nevershow" multi="false">
						<sci:help>The path to a protocol that will render an HTML user interface for this protocol.  This optional parameter is used by Webport to provide a custom user interface for a protocol.</sci:help>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>EmptyProtocol</sci:value>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Fri Jan 25 11:39:03 2013</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Delimited Text Text Reader</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>DOCUMENTNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{B39C2E91-1649-4B04-8504-F21CE6943C6B}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>306 -2020</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Read Delimited Text kept with this component as a parameter value</sci:value>
						<sci:value>This can be useful when you wish to send someone an example with the data contained with the protocol in a readable format. Just open the delimited file with a text viewer such as Notepad, copy the contents, and paste it into the &lt;I&gt;DelimitedText&lt;/I&gt; parameter.

Note that this component will be deprecated in the future -- you should use the right-click context &lt;I&gt;Initialize Using&lt;/I&gt; option &lt;I&gt;Provided Content&lt;/I&gt; on the &lt;I&gt;Source&lt;/I&gt; parameter of the &lt;I&gt;Delimited Text Reader&lt;/I&gt;.</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>9.0.1.13</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Options</sci:help>
					</sci:arg>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>125</sci:value>
					</sci:arg>
					<sci:arg name="OriginalComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>OriginalComponentGUID</sci:help>
						<sci:value>{B39C2E91-1649-4B04-8504-F21CE6943C6B}</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Data Access and Manipulation\Utilities\Debug\Delimited Text Text Reader</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol/>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="List Box (Semantic UI)" version="2">
					<sci:arg name="Parameter to Map" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;The name of a parameter on the target protocol that this component&apos;s value should be mapped to.&lt;/p&gt;</sci:help>
						<sci:value>State</sci:value>
					</sci:arg>
					<sci:arg name="Text" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;The text, or property containing the text, to be shown as an entry in the list box.&lt;/p&gt;</sci:help>
						<sci:member>Number of Displayed Rows</sci:member>
						<sci:member>Allow Multiple Selections</sci:member>
						<sci:member>Selected</sci:member>
						<sci:member>Value</sci:member>
						<sci:value>Code</sci:value>
					</sci:arg>
					<sci:arg name="Value" type="ExpressionType" required="false" visibility="visible" multi="false">
						<sci:help>The value that will be submitted for each item in the list. If not specified, the value of &lt;i&gt;Text&lt;/i&gt; will be submitted.

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;

&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
Due to inconsistent input value attribute handling by various browsers, it is recommended that the Value parameter not include leading or trailing whitespace. Depending on the browser, this whitespace may be omitted when the form is submitted. A possible workaround is to flank the entire value with a special character that can then be stripped when the input value is processed in the work protocol.
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
</sci:help>
					</sci:arg>
					<sci:arg name="Allow Multiple Selections" type="BoolType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;If true, multiple selections can be made in the list box.  Otherwise, only one entry can be selected.&lt;/p&gt;</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Selected" type="ExpressionType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;An optional PilotScript expression evaluating to True or False that determines if the current entry is pre-selected in the list box. For example, if the Text parameter is set to a property &apos;MyPet&apos; and you want to have a value &apos;Cat&apos; selected, then do the following:&lt;/p&gt;

&lt;code&gt;MyPet eq &apos;Cat&apos;;&lt;/code&gt;

&lt;p&gt;If you want the last item in a single selection list box to be pre-selected, simply enter True.&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;

&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
</sci:help>
					</sci:arg>
					<sci:arg name="Appearance" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:member>Enabled</sci:member>
						<sci:member>Searchable</sci:member>
						<sci:member>Width</sci:member>
						<sci:member>Label</sci:member>
					</sci:arg>
					<sci:arg name="Enabled" type="BoolType" required="true" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Searchable" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>Make the list box searchable?</sci:help>
						<sci:member>Full Text Search</sci:member>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Width" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>Width of the list box including its label (if present), in columns. Full screen is 16 columns. Leave blank to auto-size up to the widest available space.</sci:help>
						<sci:legalval/>
						<sci:legalval>one wide</sci:legalval>
						<sci:legalval>two wide</sci:legalval>
						<sci:legalval>three wide</sci:legalval>
						<sci:legalval>four wide</sci:legalval>
						<sci:legalval>five wide</sci:legalval>
						<sci:legalval>six wide</sci:legalval>
						<sci:legalval>seven wide</sci:legalval>
						<sci:legalval>eight wide</sci:legalval>
						<sci:legalval>nine wide</sci:legalval>
						<sci:legalval>ten wide</sci:legalval>
						<sci:legalval>eleven wide</sci:legalval>
						<sci:legalval>twelve wide</sci:legalval>
						<sci:legalval>thirteen wide</sci:legalval>
						<sci:legalval>fourteen wide</sci:legalval>
						<sci:legalval>fifteen wide</sci:legalval>
						<sci:legalval>sixteen wide</sci:legalval>
					</sci:arg>
					<sci:arg name="Label" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:member>Label Location</sci:member>
						<sci:value>State</sci:value>
					</sci:arg>
					<sci:arg name="Label Location" type="StringType" required="true" visibility="visible" multi="false">
						<sci:enabledscript>SetDisabledDetails(&apos;To enable &apos;.ParameterName().&apos;, set a Label.&apos;);
Parameter(&apos;Label&apos;) ne &apos;&apos;;</sci:enabledscript>
						<sci:legalval selected="true">Above Field</sci:legalval>
						<sci:legalval>Left of Field</sci:legalval>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
						<sci:value>_s,  _ss, multiple_, guid</sci:value>
					</sci:arg>
					<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
						<sci:member>RunToCompletion Categorize Using</sci:member>
						<sci:legalval selected="true">False</sci:legalval>
						<sci:legalval>True - For Each Data Record</sci:legalval>
						<sci:legalval>True - For Each Category</sci:legalval>
					</sci:arg>
					<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
						<sci:member>Parallel Processing Options Batch Size</sci:member>
						<sci:member>Parallel Processing Options Server</sci:member>
						<sci:member>Parallel Processing Options Preserve Order</sci:member>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
						<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
#rtcForEachCategory := (Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
elsif (#rtcForEachCategory) then
	SetDisabledDetails(&quot;This parameter is not applicable when &apos;RunToCompletion&apos; is set to &apos;True - For Each Category&apos;&quot;);
end if;
#parallel and not #rtcForEachCategory;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
						<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
						<sci:member>Parallel Processing Options Server Processes</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
						<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Run subprotocol on grid engine if available.</sci:help>
						<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
						<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Constant GUID" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Override an automatically set GUID inside the component with this value.&lt;/p&gt; &lt;p&gt;If set, HTML element(s) will have their IDs set using this value instead of a randomly generated one.&lt;/p&gt;&lt;p&gt;Spaces or special characters are not allowed, only alphanumeric. The ID is case-sensitive.&lt;/p&gt;
</sci:help>
						<sci:validscript>SetInvalidDetails(ParameterName() . &apos; must be alphanumeric. Spaces or special characters are not allowed.&apos;);
numValues(rMatch(Parameter(), &apos;[^a-zA-Z0-9]+&apos;, &apos;ig&apos;)) == 0;</sci:validscript>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:value>ComponentReturnsPass</sci:value>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval>ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="Popup" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
							<sci:propval name="SCI_InitializeUsingOrigType" ishidden="true">GroupType</sci:propval>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup displays additional information in a temporary message.</sci:help>
						<sci:member>Popup Content</sci:member>
						<sci:member>Basic Popup</sci:member>
						<sci:member>Popup Appearance</sci:member>
						<sci:member>Behavior</sci:member>
					</sci:arg>
					<sci:arg name="Popup Content" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup Content</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>Popup content. (HTML is allowed).</sci:help>
					</sci:arg>
					<sci:arg name="Basic Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Basic Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can provide basic or extended formatting.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Popup Appearance" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup Appearance</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:member>Popup Width</sci:member>
						<sci:member>Fluid Popup</sci:member>
						<sci:member>Popup Size</sci:member>
						<sci:member>Flowing Popup</sci:member>
						<sci:member>Inverted Popup</sci:member>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable &apos;.ParameterName().&apos;, set Basic Popup to False&apos;);
not Parameter(&apos;Basic Popup&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Popup Width" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup Width</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can be wide or very wide to allow for longer content.</sci:help>
						<sci:legalval/>
						<sci:legalval>wide</sci:legalval>
						<sci:legalval>very wide</sci:legalval>
					</sci:arg>
					<sci:arg name="Fluid Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Fluid Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A fluid popup will take up the entire width of its  container.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Popup Size" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup Size</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can vary in font size.</sci:help>
						<sci:legalval/>
						<sci:legalval>mini</sci:legalval>
						<sci:legalval>tiny</sci:legalval>
						<sci:legalval>small</sci:legalval>
						<sci:legalval>large</sci:legalval>
						<sci:legalval>huge</sci:legalval>
					</sci:arg>
					<sci:arg name="Flowing Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Flowing Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can have no maximum width and continue to flow to fit its content.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Inverted Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Inverted Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can have its colors inverted.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Behavior" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Behavior</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:member>Show On</sci:member>
					</sci:arg>
					<sci:arg name="Show On" type="StringType" required="true" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Show On</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>When to show the popup. Hover (mouseover), click, focus (when a form element such as a text box is in focus).</sci:help>
						<sci:legalval selected="true">hover</sci:legalval>
						<sci:legalval>click</sci:legalval>
						<sci:legalval>focus</sci:legalval>
					</sci:arg>
					<sci:arg name="Full Text Search" type="StringType" required="true" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Full Text Search</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>&lt;p&gt;Specifying &quot;exact&quot; will force the exact search to be matched somewhere in the string, even in the middle of the string: e.g. typing &lt;code&gt;bar&lt;/code&gt; will match &lt;code&gt;barge&lt;/code&gt; and &lt;code&gt;mybarge&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Specifying &quot;true&quot; will use a fuzzy full text search anywhere in the string: e.g. typing &lt;code&gt;bar&lt;/code&gt; will match &lt;code&gt;barge&lt;/code&gt; and &lt;code&gt;mybarge&lt;/code&gt; and &lt;code&gt;bear&lt;/code&gt; and &lt;code&gt;mybear&lt;/code&gt; and &lt;code&gt;myboar&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Specifying &quot;false&quot; will force an exact search only starting at the beginning of the string: e.g. typing &lt;code&gt;bar&lt;/code&gt; will match &lt;code&gt;barge&lt;/code&gt; but not &lt;code&gt;mybarge&lt;/code&gt; and not &lt;code&gt;boar&lt;/code&gt;.&lt;/p&gt;</sci:help>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable &apos;.ParameterName().&apos;, set &quot;Searchable&quot; to True&apos;);
Parameter(&apos;Searchable&apos;);</sci:enabledscript>
						<sci:legalval selected="true">exact</sci:legalval>
						<sci:legalval>true</sci:legalval>
						<sci:legalval>false</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Number of Displayed Rows" type="LongType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;The number of rows to show in the list box.  If the number of items exceeds the number of rows, then the list box will contain a scroll bar.&lt;/p&gt;

&lt;p&gt;To create a drop-down list, set the number of rows to 1.&lt;/p&gt;</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>List Box (Semantic UI)</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>ReportSubProtocolNode</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>790</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{63F39E52-E567-45F4-84C9-E412817F26EF}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>618 -2020</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>List Box (Semantic UI).</sci:value>
						<sci:value>Used to select one or more items from a list, to be passed to the work protocol. Single or multi-select can be set. If multiple values are selected, they are passed as an array.

This component accepts both regular data records and array data. If multiple records with array data are received, a list box for each data record will be created.

You can set the number of rows to be displayed. If the number of rows is less than the number of values to be displayed, then a vertical scroll bar is automatically added. To create a drop-down list, set the number of rows to be displayed to 1.

</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
						<sci:value>None</sci:value>
						<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>16.1.0.1140</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval>Owner Access Only</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>bondadx2</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Sun Dec 17 13:41:30 2017</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>122</sci:value>
					</sci:arg>
					<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Processing Order</sci:help>
						<sci:value>DrainTopDown</sci:value>
					</sci:arg>
					<sci:arg name="OriginalPackage" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>OriginalPackage</sci:help>
						<sci:value>scitegic/coreutils</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Modified</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Semantic UI\Forms\Functional Elements\List Box (Semantic UI)</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol/>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="Horizontal Field Group (Semantic UI)" version="2">
					<sci:arg name="Number of Fields" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Number of Fields</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:legalval/>
						<sci:legalval>one</sci:legalval>
						<sci:legalval selected="true">two</sci:legalval>
						<sci:legalval>three</sci:legalval>
						<sci:legalval>four</sci:legalval>
						<sci:legalval>five</sci:legalval>
						<sci:legalval>six</sci:legalval>
						<sci:legalval>seven</sci:legalval>
						<sci:legalval>eight</sci:legalval>
						<sci:legalval>nine</sci:legalval>
						<sci:legalval>ten</sci:legalval>
						<sci:legalval>eleven</sci:legalval>
						<sci:legalval>twelve</sci:legalval>
						<sci:legalval>thirteen</sci:legalval>
						<sci:legalval>fourteen</sci:legalval>
						<sci:legalval>fifteen</sci:legalval>
						<sci:legalval>sixteen</sci:legalval>
					</sci:arg>
					<sci:arg name="Appearance" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:member>Label</sci:member>
						<sci:member>Width</sci:member>
					</sci:arg>
					<sci:arg name="Label" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>Label will appear above the field group.</sci:help>
					</sci:arg>
					<sci:arg name="Width" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>Width of the text box including its label (if present), in columns. Full screen is 16 columns. Leave blank to auto-size up to the widest available space.</sci:help>
						<sci:legalval/>
						<sci:legalval>one wide</sci:legalval>
						<sci:legalval>two wide</sci:legalval>
						<sci:legalval>three wide</sci:legalval>
						<sci:legalval>four wide</sci:legalval>
						<sci:legalval>five wide</sci:legalval>
						<sci:legalval>six wide</sci:legalval>
						<sci:legalval>seven wide</sci:legalval>
						<sci:legalval>eight wide</sci:legalval>
						<sci:legalval>nine wide</sci:legalval>
						<sci:legalval>ten wide</sci:legalval>
						<sci:legalval>eleven wide</sci:legalval>
						<sci:legalval>twelve wide</sci:legalval>
						<sci:legalval>thirteen wide</sci:legalval>
						<sci:legalval>fourteen wide</sci:legalval>
						<sci:legalval>fifteen wide</sci:legalval>
						<sci:legalval>sixteen wide</sci:legalval>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
						<sci:member>RunToCompletion Categorize Using</sci:member>
						<sci:legalval selected="true">False</sci:legalval>
						<sci:legalval>True - For Each Data Record</sci:legalval>
						<sci:legalval>True - For Each Category</sci:legalval>
					</sci:arg>
					<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
						<sci:member>Parallel Processing Options Batch Size</sci:member>
						<sci:member>Parallel Processing Options Server</sci:member>
						<sci:member>Parallel Processing Options Preserve Order</sci:member>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
						<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
#rtcForEachCategory := (Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
elsif (#rtcForEachCategory) then
	SetDisabledDetails(&quot;This parameter is not applicable when &apos;RunToCompletion&apos; is set to &apos;True - For Each Category&apos;&quot;);
end if;
#parallel and not #rtcForEachCategory;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
						<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
						<sci:member>Parallel Processing Options Server Processes</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
						<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Run subprotocol on grid engine if available.</sci:help>
						<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
						<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:value>ComponentReturnsPass</sci:value>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval>ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Horizontal Field Group (Semantic UI)</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>ReportSubProtocolNode</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>790</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{77FD9923-E478-4AE3-BFA9-CBE5479D3AEF}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>978 -2195</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Horizontal Field Group (Semantic UI).</sci:value>
						<sci:value>&lt;p&gt;A text box is an area where you can enter and edit content.  A text box can be a simple, single-line text box, a multiple-line text box, or a password field.&lt;/p&gt;
&lt;p&gt;Validation and typeahead parameters are available.&lt;/p&gt;</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
						<sci:value>None</sci:value>
						<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>16.1.0.1140</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval>Owner Access Only</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>bondadx2</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Tue Jun 14 10:41:27 2016</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>124</sci:value>
					</sci:arg>
					<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Processing Order</sci:help>
						<sci:value>DrainTopDown</sci:value>
					</sci:arg>
					<sci:arg name="OriginalPackage" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>OriginalPackage</sci:help>
						<sci:value>scitegic/coreutils</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Modified</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Semantic UI\Forms\Formatting Elements\Horizontal Field Group (Semantic UI)</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol/>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="Delimited Text Text Reader" version="2">
					<sci:arg name="DelimitedText" type="TextType" required="true" visibility="visible" multi="false">
						<sci:help>The contents of a delimited text file. This is a way to include a delimited text file in a protocol without sending an additional file.</sci:help>
						<sci:value>Code,Country
,
LA,Lala Land
CA,Canada
US,United States</sci:value>
					</sci:arg>
					<sci:arg name="Delimiter" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>Specifies the character that separates fields. Options include:

 - FigureOut: Determines the type automatically.
 - Tab: For tab-delimited fields.
 - Space: For space-delimited fields.
 - Comma: For comma-delimited fields.
 - Colon: For colon-delimited fields.
 - Semicolon: For semicolon-delimited fields.</sci:help>
						<sci:member>MultipleValueDelimiter</sci:member>
						<sci:legalval>FigureOut</sci:legalval>
						<sci:legalval>Tab</sci:legalval>
						<sci:legalval>Space</sci:legalval>
						<sci:legalval selected="true">Comma</sci:legalval>
						<sci:legalval>Colon</sci:legalval>
						<sci:legalval>Semicolon</sci:legalval>
					</sci:arg>
					<sci:arg name="MultipleValueDelimiter" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>The delimiter to use between multiple values contained in a single property. If the multiple value delimited exists in any of the input strings in any property, they are separated into an array of values. If &quot;None&quot;, 
values are never separated into multiple values.</sci:help>
						<sci:legalval selected="true">None</sci:legalval>
						<sci:legalval>Semicolon</sci:legalval>
						<sci:legalval>Colon</sci:legalval>
						<sci:legalval>Comma</sci:legalval>
						<sci:legalval>Linefeed</sci:legalval>
					</sci:arg>
					<sci:arg name="HasColumnNames" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>When True, property names are taken from the first line of data in the file. When False, properties are named Column1,Column2, etc.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{7B3502D7-FA57-4EB5-838B-FE6AB0BF0E69}" uimpl="true">
						<sci:help>Lists the set of temporary files which will be converted by the network to true temporary file names</sci:help>
						<sci:value>temp</sci:value>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval>ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Form" type="ProtocolType" required="false" visibility="nevershow" multi="false">
						<sci:help>The path to a protocol that will render an HTML user interface for this protocol.  This optional parameter is used by Webport to provide a custom user interface for a protocol.</sci:help>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>EmptyProtocol</sci:value>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Fri Jan 25 11:39:03 2013</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Delimited Text Text Reader</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>DOCUMENTNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{B39C2E91-1649-4B04-8504-F21CE6943C6B}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>306 -2345</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Read Delimited Text kept with this component as a parameter value</sci:value>
						<sci:value>This can be useful when you wish to send someone an example with the data contained with the protocol in a readable format. Just open the delimited file with a text viewer such as Notepad, copy the contents, and paste it into the &lt;I&gt;DelimitedText&lt;/I&gt; parameter.

Note that this component will be deprecated in the future -- you should use the right-click context &lt;I&gt;Initialize Using&lt;/I&gt; option &lt;I&gt;Provided Content&lt;/I&gt; on the &lt;I&gt;Source&lt;/I&gt; parameter of the &lt;I&gt;Delimited Text Reader&lt;/I&gt;.</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>9.0.1.13</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Options</sci:help>
					</sci:arg>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>126</sci:value>
					</sci:arg>
					<sci:arg name="OriginalComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>OriginalComponentGUID</sci:help>
						<sci:value>{B39C2E91-1649-4B04-8504-F21CE6943C6B}</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Data Access and Manipulation\Utilities\Debug\Delimited Text Text Reader</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol/>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="List Box (Semantic UI)" version="2">
					<sci:arg name="Parameter to Map" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;The name of a parameter on the target protocol that this component&apos;s value should be mapped to.&lt;/p&gt;</sci:help>
						<sci:value>Country</sci:value>
					</sci:arg>
					<sci:arg name="Text" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;The text, or property containing the text, to be shown as an entry in the list box.&lt;/p&gt;</sci:help>
						<sci:member>Number of Displayed Rows</sci:member>
						<sci:member>Allow Multiple Selections</sci:member>
						<sci:member>Selected</sci:member>
						<sci:member>Value</sci:member>
						<sci:value>Code</sci:value>
					</sci:arg>
					<sci:arg name="Value" type="ExpressionType" required="false" visibility="visible" multi="false">
						<sci:help>The value that will be submitted for each item in the list. If not specified, the value of &lt;i&gt;Text&lt;/i&gt; will be submitted.

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;

&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
Due to inconsistent input value attribute handling by various browsers, it is recommended that the Value parameter not include leading or trailing whitespace. Depending on the browser, this whitespace may be omitted when the form is submitted. A possible workaround is to flank the entire value with a special character that can then be stripped when the input value is processed in the work protocol.
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
</sci:help>
					</sci:arg>
					<sci:arg name="Allow Multiple Selections" type="BoolType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;If true, multiple selections can be made in the list box.  Otherwise, only one entry can be selected.&lt;/p&gt;</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Selected" type="ExpressionType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;An optional PilotScript expression evaluating to True or False that determines if the current entry is pre-selected in the list box. For example, if the Text parameter is set to a property &apos;MyPet&apos; and you want to have a value &apos;Cat&apos; selected, then do the following:&lt;/p&gt;

&lt;code&gt;MyPet eq &apos;Cat&apos;;&lt;/code&gt;

&lt;p&gt;If you want the last item in a single selection list box to be pre-selected, simply enter True.&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;

&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
</sci:help>
					</sci:arg>
					<sci:arg name="Appearance" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:member>Enabled</sci:member>
						<sci:member>Searchable</sci:member>
						<sci:member>Width</sci:member>
						<sci:member>Label</sci:member>
					</sci:arg>
					<sci:arg name="Enabled" type="BoolType" required="true" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Searchable" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>Make the list box searchable?</sci:help>
						<sci:member>Full Text Search</sci:member>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Width" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>Width of the list box including its label (if present), in columns. Full screen is 16 columns. Leave blank to auto-size up to the widest available space.</sci:help>
						<sci:legalval/>
						<sci:legalval>one wide</sci:legalval>
						<sci:legalval>two wide</sci:legalval>
						<sci:legalval>three wide</sci:legalval>
						<sci:legalval>four wide</sci:legalval>
						<sci:legalval>five wide</sci:legalval>
						<sci:legalval>six wide</sci:legalval>
						<sci:legalval>seven wide</sci:legalval>
						<sci:legalval>eight wide</sci:legalval>
						<sci:legalval>nine wide</sci:legalval>
						<sci:legalval>ten wide</sci:legalval>
						<sci:legalval>eleven wide</sci:legalval>
						<sci:legalval>twelve wide</sci:legalval>
						<sci:legalval>thirteen wide</sci:legalval>
						<sci:legalval>fourteen wide</sci:legalval>
						<sci:legalval>fifteen wide</sci:legalval>
						<sci:legalval>sixteen wide</sci:legalval>
					</sci:arg>
					<sci:arg name="Label" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:member>Label Location</sci:member>
						<sci:value>Country</sci:value>
					</sci:arg>
					<sci:arg name="Label Location" type="StringType" required="true" visibility="visible" multi="false">
						<sci:enabledscript>SetDisabledDetails(&apos;To enable &apos;.ParameterName().&apos;, set a Label.&apos;);
Parameter(&apos;Label&apos;) ne &apos;&apos;;</sci:enabledscript>
						<sci:legalval selected="true">Above Field</sci:legalval>
						<sci:legalval>Left of Field</sci:legalval>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
						<sci:value>_s,  _ss, multiple_, guid</sci:value>
					</sci:arg>
					<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
						<sci:member>RunToCompletion Categorize Using</sci:member>
						<sci:legalval selected="true">False</sci:legalval>
						<sci:legalval>True - For Each Data Record</sci:legalval>
						<sci:legalval>True - For Each Category</sci:legalval>
					</sci:arg>
					<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
						<sci:member>Parallel Processing Options Batch Size</sci:member>
						<sci:member>Parallel Processing Options Server</sci:member>
						<sci:member>Parallel Processing Options Preserve Order</sci:member>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
						<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
#rtcForEachCategory := (Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
elsif (#rtcForEachCategory) then
	SetDisabledDetails(&quot;This parameter is not applicable when &apos;RunToCompletion&apos; is set to &apos;True - For Each Category&apos;&quot;);
end if;
#parallel and not #rtcForEachCategory;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
						<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
						<sci:member>Parallel Processing Options Server Processes</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
						<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Run subprotocol on grid engine if available.</sci:help>
						<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
						<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Constant GUID" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Override an automatically set GUID inside the component with this value.&lt;/p&gt; &lt;p&gt;If set, HTML element(s) will have their IDs set using this value instead of a randomly generated one.&lt;/p&gt;&lt;p&gt;Spaces or special characters are not allowed, only alphanumeric. The ID is case-sensitive.&lt;/p&gt;
</sci:help>
						<sci:validscript>SetInvalidDetails(ParameterName() . &apos; must be alphanumeric. Spaces or special characters are not allowed.&apos;);
numValues(rMatch(Parameter(), &apos;[^a-zA-Z0-9]+&apos;, &apos;ig&apos;)) == 0;</sci:validscript>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:value>ComponentReturnsPass</sci:value>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval>ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="Popup" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
							<sci:propval name="SCI_InitializeUsingOrigType" ishidden="true">GroupType</sci:propval>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup displays additional information in a temporary message.</sci:help>
						<sci:member>Popup Content</sci:member>
						<sci:member>Basic Popup</sci:member>
						<sci:member>Popup Appearance</sci:member>
						<sci:member>Behavior</sci:member>
					</sci:arg>
					<sci:arg name="Popup Content" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup Content</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>Popup content. (HTML is allowed).</sci:help>
					</sci:arg>
					<sci:arg name="Basic Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Basic Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can provide basic or extended formatting.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Popup Appearance" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup Appearance</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:member>Popup Width</sci:member>
						<sci:member>Fluid Popup</sci:member>
						<sci:member>Popup Size</sci:member>
						<sci:member>Flowing Popup</sci:member>
						<sci:member>Inverted Popup</sci:member>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable &apos;.ParameterName().&apos;, set Basic Popup to False&apos;);
not Parameter(&apos;Basic Popup&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Popup Width" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup Width</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can be wide or very wide to allow for longer content.</sci:help>
						<sci:legalval/>
						<sci:legalval>wide</sci:legalval>
						<sci:legalval>very wide</sci:legalval>
					</sci:arg>
					<sci:arg name="Fluid Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Fluid Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A fluid popup will take up the entire width of its  container.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Popup Size" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup Size</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can vary in font size.</sci:help>
						<sci:legalval/>
						<sci:legalval>mini</sci:legalval>
						<sci:legalval>tiny</sci:legalval>
						<sci:legalval>small</sci:legalval>
						<sci:legalval>large</sci:legalval>
						<sci:legalval>huge</sci:legalval>
					</sci:arg>
					<sci:arg name="Flowing Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Flowing Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can have no maximum width and continue to flow to fit its content.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Inverted Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Inverted Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can have its colors inverted.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Behavior" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Behavior</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:member>Show On</sci:member>
					</sci:arg>
					<sci:arg name="Show On" type="StringType" required="true" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Show On</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>When to show the popup. Hover (mouseover), click, focus (when a form element such as a text box is in focus).</sci:help>
						<sci:legalval selected="true">hover</sci:legalval>
						<sci:legalval>click</sci:legalval>
						<sci:legalval>focus</sci:legalval>
					</sci:arg>
					<sci:arg name="Full Text Search" type="StringType" required="true" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Full Text Search</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>&lt;p&gt;Specifying &quot;exact&quot; will force the exact search to be matched somewhere in the string, even in the middle of the string: e.g. typing &lt;code&gt;bar&lt;/code&gt; will match &lt;code&gt;barge&lt;/code&gt; and &lt;code&gt;mybarge&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Specifying &quot;true&quot; will use a fuzzy full text search anywhere in the string: e.g. typing &lt;code&gt;bar&lt;/code&gt; will match &lt;code&gt;barge&lt;/code&gt; and &lt;code&gt;mybarge&lt;/code&gt; and &lt;code&gt;bear&lt;/code&gt; and &lt;code&gt;mybear&lt;/code&gt; and &lt;code&gt;myboar&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Specifying &quot;false&quot; will force an exact search only starting at the beginning of the string: e.g. typing &lt;code&gt;bar&lt;/code&gt; will match &lt;code&gt;barge&lt;/code&gt; but not &lt;code&gt;mybarge&lt;/code&gt; and not &lt;code&gt;boar&lt;/code&gt;.&lt;/p&gt;</sci:help>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable &apos;.ParameterName().&apos;, set &quot;Searchable&quot; to True&apos;);
Parameter(&apos;Searchable&apos;);</sci:enabledscript>
						<sci:legalval selected="true">exact</sci:legalval>
						<sci:legalval>true</sci:legalval>
						<sci:legalval>false</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Number of Displayed Rows" type="LongType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;The number of rows to show in the list box.  If the number of items exceeds the number of rows, then the list box will contain a scroll bar.&lt;/p&gt;

&lt;p&gt;To create a drop-down list, set the number of rows to 1.&lt;/p&gt;</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>List Box (Semantic UI)</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>ReportSubProtocolNode</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>790</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{63F39E52-E567-45F4-84C9-E412817F26EF}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>618 -2345</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>List Box (Semantic UI).</sci:value>
						<sci:value>Used to select one or more items from a list, to be passed to the work protocol. Single or multi-select can be set. If multiple values are selected, they are passed as an array.

This component accepts both regular data records and array data. If multiple records with array data are received, a list box for each data record will be created.

You can set the number of rows to be displayed. If the number of rows is less than the number of values to be displayed, then a vertical scroll bar is automatically added. To create a drop-down list, set the number of rows to be displayed to 1.

</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
						<sci:value>None</sci:value>
						<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>16.1.0.1140</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval>Owner Access Only</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>bondadx2</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Sun Dec 17 13:41:30 2017</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>123</sci:value>
					</sci:arg>
					<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Processing Order</sci:help>
						<sci:value>DrainTopDown</sci:value>
					</sci:arg>
					<sci:arg name="OriginalPackage" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>OriginalPackage</sci:help>
						<sci:value>scitegic/coreutils</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Modified</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Semantic UI\Forms\Functional Elements\List Box (Semantic UI)</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol/>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="Form Section Header (Semantic UI)" version="2">
					<sci:arg name="Header Text" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>The text of the form section header, e.g. Shipping Infomation.</sci:help>
						<sci:value>Billing Information</sci:value>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
						<sci:member>RunToCompletion Categorize Using</sci:member>
						<sci:legalval selected="true">False</sci:legalval>
						<sci:legalval>True - For Each Data Record</sci:legalval>
						<sci:legalval>True - For Each Category</sci:legalval>
					</sci:arg>
					<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
						<sci:member>Parallel Processing Options Batch Size</sci:member>
						<sci:member>Parallel Processing Options Server</sci:member>
						<sci:member>Parallel Processing Options Preserve Order</sci:member>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
						<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
#rtcForEachCategory := (Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
elsif (#rtcForEachCategory) then
	SetDisabledDetails(&quot;This parameter is not applicable when &apos;RunToCompletion&apos; is set to &apos;True - For Each Category&apos;&quot;);
end if;
#parallel and not #rtcForEachCategory;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="false">
						<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
						<sci:member>Parallel Processing Options Server Processes</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
						<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Run subprotocol on grid engine if available.</sci:help>
						<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid Grid Options</sci:member>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Grid Options" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Use this to specify grid engine specific command line parameters to the job submission command. Leave blank to use defaults.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval>ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Form Section Header (Semantic UI)</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>ReportSubProtocolNode</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>790</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{8C0474A2-41D8-4027-ACA4-FFA84714204F}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>978 -2870</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Form Section Header (Semantic UI).</sci:value>
						<sci:value>&lt;p&gt;A header for a form section.&lt;/p&gt;</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
						<sci:value>None</sci:value>
						<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>9.2.0.484</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval>Owner Access Only</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>bondadx2</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Fri Apr 22 16:48:19 2016</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>110</sci:value>
					</sci:arg>
					<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Processing Order</sci:help>
						<sci:value>DrainTopDown</sci:value>
					</sci:arg>
					<sci:arg name="OriginalPackage" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>OriginalPackage</sci:help>
						<sci:value>scitegic/coreutils</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Semantic UI\Forms\Formatting Elements\Form Section Header (Semantic UI)</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol/>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="Input Form (Semantic UI)" version="2">
					<sci:arg name="Work Protocol" type="WorkProtocolType" required="true" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Path to the work protocol that should be executed when you click the submit button.  However, if the submit button itself specifies a different work protocol, that protocol will be executed instead.&lt;/p&gt;
			
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;&lt;li&gt;If the form is submitted using the keyboard (e.g., you hit Enter in a textbox), then this protocol will be run, but without the additional parameters from any of the submit buttons.&lt;/li&gt;
&lt;li&gt;Parameter validation can be implemented by calling a JavaScript function from an onsubmit attribute.&lt;/li&gt;&lt;/ul&gt;</sci:help>
						<sci:member>Display Results As</sci:member>
						<sci:value>500</sci:value>
						<sci:value>a</sci:value>
						<sci:value>False</sci:value>
						<sci:value>UGxlYXNlIHdhaXQgd2hpbGUgdGhlIGRvY3VtZW50IGxvYWRz</sci:value>
						<sci:value>Current</sci:value>
					</sci:arg>
					<sci:arg name="Display Results As" type="LinkOptionsType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;Describes where to display the result of the work protocol. Options such as &quot;New Web Port tab&quot; and &quot;Left Web Port pane&quot; are only applicable if the protocol is run through Web Port.  If the protocol is run outside of Web Port, such options are ignored (default to &quot;Same Window&quot;).&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Name" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;The optional name of a form.  If you have a submit button that exists outside of the form, it can refer to this form by the name supplied in this parameter.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Additional Data to Pass" type="GroupType" required="false" visibility="visible" multi="false">
						<sci:help>Any additional name/value pairs that should be sent to the work protocol but which should have no visual representation in this report.  Typically these are global variables that are needed in the work protocol.

Any number of additional name/value pairs can be supplied.  To create new entries, you may add new parameters with the names &quot;Additional Parameter X&quot; and &quot;Additional Value X&quot; where X is the next integer in the series.</sci:help>
						<sci:member>Additional Parameter 1</sci:member>
						<sci:member>Additional Value 1</sci:member>
						<sci:member>Additional Parameter 2</sci:member>
						<sci:member>Additional Value 2</sci:member>
						<sci:member>Additional Parameter 3</sci:member>
						<sci:member>Additional Value 3</sci:member>
						<sci:member>Additional Parameter 4</sci:member>
						<sci:member>Additional Value 4</sci:member>
					</sci:arg>
					<sci:arg name="Additional Parameter 1" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;The name of a parameter to be passed to the work protocol.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Additional Value 1" type="ExpressionType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;The value of a parameter to be passed to the work protocol.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Additional Parameter 2" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;The name of a parameter to be passed to the work protocol.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Additional Value 2" type="ExpressionType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;The value of a parameter to be passed to the work protocol.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Additional Parameter 3" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;The name of a parameter to be passed to the work protocol.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Additional Value 3" type="ExpressionType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;The value of a parameter to be passed to the work protocol.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Additional Parameter 4" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;The name of a parameter to be passed to the work protocol.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Additional Value 4" type="ExpressionType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;The value of a parameter to be passed to the work protocol.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Custom Form Classes" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>Additional (if any) CSS classes to be added to the form element in HTML.</sci:help>
					</sci:arg>
					<sci:arg name="Advanced Validation" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>&lt;p&gt;These parameters define group validations.&lt;/p&gt; &lt;p&gt;For example, only one of the two listboxes must be non-empty but not both. Or all textboxes in a group must have non-empty values.&lt;/p&gt;</sci:help>
						<sci:member>ALL (Group 4)</sci:member>
						<sci:member>ANY (Group 1)</sci:member>
						<sci:member>ANY (Group 2)</sci:member>
						<sci:member>ALL (Group 3)</sci:member>
						<sci:member>ONE (Group 5)</sci:member>
						<sci:member>ONE (Group 6)</sci:member>
					</sci:arg>
					<sci:arg name="ANY (Group 1)" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;Provide a comma-separated list of names. The input form will not allow users to submit until at least one of the elements in this group has a non-empty value.&lt;/p&gt;
&lt;p&gt;Each name must be the value of the &lt;strong&gt;Parameter to Map&lt;/strong&gt; on a Text Box, List Box, Date Box, File Chooser, or Checkbox.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="ANY (Group 2)" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>&lt;p&gt;Provide a comma-separated list of names. The input form will not allow users to submit until at least one of the elements in this group has a non-empty value.&lt;/p&gt;
&lt;p&gt;Each name must be the value of the &lt;strong&gt;Parameter to Map&lt;/strong&gt; on a Text Box, List Box, Date Box, File Chooser, or Checkbox.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="ALL (Group 3)" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;Provide a comma-separated list of names. The input form will not allow users to submit until all elements in this group have a non-empty value.&lt;/p&gt;
&lt;p&gt;Each name must be the value of the &lt;strong&gt;Parameter to Map&lt;/strong&gt; on a Text Box, List Box, Date Box, File Chooser, or Checkbox.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="ALL (Group 4)" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;Provide a comma-separated list of names. The input form will not allow users to submit until all elements in this group have a non-empty value.&lt;/p&gt;
&lt;p&gt;Each name must be the value of the &lt;strong&gt;Parameter to Map&lt;/strong&gt; on a Text Box, List Box, Date Box, File Chooser, or Checkbox.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="ONE (Group 5)" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;Provide a comma-separated list of names. The input form will not allow users to submit unless exactly one element in this group has a non-empty value.&lt;/p&gt;
&lt;p&gt;Each name must be the value of the &lt;strong&gt;Parameter to Map&lt;/strong&gt; on a Text Box, List Box, Date Box, File Chooser, or Checkbox.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="ONE (Group 6)" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;Provide a comma-separated list of names. The input form will not allow users to submit unless exactly one element in this group has a non-empty value.&lt;/p&gt;
&lt;p&gt;Each name must be the value of the &lt;strong&gt;Parameter to Map&lt;/strong&gt; on a Text Box, List Box, Date Box, File Chooser, or Checkbox.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
						<sci:value>guid</sci:value>
					</sci:arg>
					<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
						<sci:member>RunToCompletion Categorize Using</sci:member>
						<sci:legalval selected="true">False</sci:legalval>
						<sci:legalval>True - For Each Data Record</sci:legalval>
						<sci:legalval>True - For Each Category</sci:legalval>
					</sci:arg>
					<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
						<sci:member>Parallel Processing Options Batch Size</sci:member>
						<sci:member>Parallel Processing Options Server</sci:member>
						<sci:member>Parallel Processing Options Preserve Order</sci:member>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
						<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
#rtcForEachCategory := (Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
elsif (#rtcForEachCategory) then
	SetDisabledDetails(&quot;This parameter is not applicable when &apos;RunToCompletion&apos; is set to &apos;True - For Each Category&apos;&quot;);
end if;
#parallel and not #rtcForEachCategory;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
						<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
						<sci:member>Parallel Processing Options Server Processes</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
						<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Run subprotocol on grid engine if available.</sci:help>
						<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
						<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Validation Pause ms" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
						<sci:help>When remote validation of textboxes is enabled, how many milliseconds to wait after the user finished typing in the box, before validating their input?

This helps fast typers who would be annoyed by intrusive validation.</sci:help>
						<sci:legalval selected="true">300</sci:legalval>
						<sci:legalval>500</sci:legalval>
						<sci:legalval>700</sci:legalval>
						<sci:legalval>1000</sci:legalval>
						<sci:legalval>1500</sci:legalval>
						<sci:legalval>2000</sci:legalval>
					</sci:arg>
					<sci:arg name="Constant GUID" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Override an automatically set GUID inside the component with this value.&lt;/p&gt; &lt;p&gt;If set, HTML element(s) will have their IDs set using this value instead of a randomly generated one.&lt;/p&gt;&lt;p&gt;Spaces or special characters are not allowed, only alphanumeric. The ID is case-sensitive.&lt;/p&gt;
</sci:help>
						<sci:validscript>SetInvalidDetails(ParameterName() . &apos; must be alphanumeric. Spaces or special characters are not allowed.&apos;);
numValues(rMatch(Parameter(), &apos;[^a-zA-Z0-9]+&apos;, &apos;ig&apos;)) == 0;</sci:validscript>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Input Form (Semantic UI)</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>ReportSubProtocolNode</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>790</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{5C3525D9-B2E9-49AB-BD21-08E1C2A65AB3}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>1674 -3195</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Input Form (Semantic UI) with validation capabilities.</sci:value>
						<sci:value>&lt;p&gt;An input form with added capabilities such as validation, form layout, and optional custom CSS classes.&lt;/p&gt;</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
						<sci:value>None</sci:value>
						<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>16.1.0.1140</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval>Owner Access Only</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>bondadx2</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Tue Jun 28 10:59:03 2016</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Processing Order</sci:help>
						<sci:value>DrainTopDown</sci:value>
					</sci:arg>
					<sci:arg name="OriginalPackage" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>OriginalPackage</sci:help>
						<sci:value>scitegic/coreutils</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Modified</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Semantic UI\Forms\Input Form (Semantic UI)</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol/>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="HTML Report Viewer (Semantic UI)" version="2">
					<sci:arg name="Title" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;The optional title of the HTML document. The title is also used as part of the report&apos;s file name.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Permanent URL" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>Display this protocol&apos;s starter URL in the browser address bar. Users will be able to bookmark the start protocol page that way. &lt;p&gt;&lt;strong&gt;Note: the protocol must be saved in Pipeline Pilot for this to work.&lt;/strong&gt;&lt;/p&gt;</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Advanced Options" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>Advanced Options</sci:help>
						<sci:member>Include Format and Position CSS</sci:member>
						<sci:member>Animate Link Underlines</sci:member>
						<sci:member>Theme</sci:member>
						<sci:member>Web Browser</sci:member>
					</sci:arg>
					<sci:arg name="Theme" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;Choose a visual theme for the content.&lt;/p&gt;
&lt;p&gt;&lt;ul&gt;
&lt;li&gt;2.2.1: released 06/2016&lt;/li&gt;
&lt;li&gt;Default (v 2.1.8): released 02/2016&lt;/li&gt;
&lt;/ul&gt;
Semantic UI release history with detailed notes:
&lt;a href=&quot;https://github.com/Semantic-Org/Semantic-UI/releases&quot;&gt;https://github.com/Semantic-Org/Semantic-UI/releases&lt;a&gt;
&lt;/p&gt;
&lt;p&gt;When the component collection is updated with a new Semantic UI release, the components in unmodified existing protocols will continue to point to a set release version. You can also point this parameter to a newer release if you wish by right-clicking the component and Replace with Latest Version then selecting a newer semantic theme release.&lt;/p&gt;
To add a new custom theme (e.g. developed in-house): do not change this component. Just add a new subfolder to the &lt;code&gt;ScitegicRoot\apps\saber\semantic\dataroot\data\assets\semantic\&lt;/code&gt; file folder. The subfolder should contain a compiled customized copy of the Semantic UI distribution. &lt;strong&gt;The name of the subfolder should be alphanumeric and it cannot contain spaces or special characters.&lt;/strong&gt;</sci:help>
						<sci:legalvalscript>//SetLegalValues(&apos;Default&apos;);
SetLegalValues(RunProtocol(&apos;{4460A9EB-E8FA-42F0-A0ED-D35964047B39}&apos;));</sci:legalvalscript>
						<sci:value>2.4.1</sci:value>
					</sci:arg>
					<sci:arg name="Include Format and Position CSS" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>If set to &lt;strong&gt;True&lt;/strong&gt;, all native Pipeline Pilot format and position settings will be included in the output document. Otherwise all native Pipeline Pilot formatting will be ignored.</sci:help>
						<sci:member>Add Page Margins</sci:member>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Add Page Margins" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>When not using native Scitegic CSS, add page margins. This will add small margins on each side of the page. Scitegic styles already include this.</sci:help>
						<sci:enabledscript>not Parameter(&apos;Include Format and Position CSS&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Animate Link Underlines" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>When hovering over a link, the link&apos;s underline is revealed by animating it out from the center.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Web Browser" type="StringType" required="true" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Web Browser</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>&lt;p&gt;
This parameter is only relevant when running the protocol in the Pipeline Pilot Professional Client. When running the protocol from a web hyperlink or a URL the value of this parameter is ignored.
&lt;/p&gt;
&lt;p&gt;
The value specifies which web browser to open on your desktop to view the report.
&lt;/p&gt;</sci:help>
						<sci:legalval selected="true">Default</sci:legalval>
						<sci:legalval>Internet Explorer</sci:legalval>
						<sci:legalval>Chrome</sci:legalval>
						<sci:legalval>Firefox</sci:legalval>
					</sci:arg>
					<sci:arg name="Output Mode" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Allows some alternative formatting and position settings to be used that may cause the HTML report output to behave and look more like the HTML generated with previous versions of Pipeline Pilot. This parameter is intended to be set on writers in protocols developed with previous versions of Pipeline Pilot where the output looks or behaves differently when run with the current version.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Always use the value of &quot;Default&quot; for new protocols or protocols under active development. The latest Reporting components may not behave correctly in HTML reports written with a non-default mode.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When set to &quot;Pipeline Pilot 7.5&quot;, this parameter rolls back some of the improvements made in the name of standards compliance and formatting consistency, including:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;The report will not include the HTML 4.01 Doctype declaration, which will cause Internet Explorer to render the report using quirks mode.&lt;/li&gt;
	&lt;li&gt;Position rules will not be strictly enforced, so Internet Explorer 6 will render borders and padding outside the specified width.&lt;/li&gt;
	&lt;li&gt;Horizontal alignment of block objects will not be supported, so you will not be able to, for example, center-align a table.&lt;/li&gt;
	&lt;li&gt;The page margins will not be set.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
						<sci:legalval selected="true">Default</sci:legalval>
						<sci:legalval>Pipeline Pilot 7.5</sci:legalval>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
						<sci:help>Lists the set of temporary files which will be converted by the network to true temporary file names</sci:help>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
						<sci:help>Lists a set of properties (without the @) to be created on the property list for this protocol.
Other properties are created on the global property list
and so are accessible from all protocols.</sci:help>
						<sci:value>ServerFilePath, ServerFilePathZIP, ServerFilePathForwardSlashes</sci:value>
					</sci:arg>
					<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
						<sci:help>When the network is run, whether we process once or until done for each process call</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Accept Bootstrap" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
						<sci:help>Allow the use of Web Design (Bootstrap) collection components with the Semantic UI viewer? Generally speaking, this parameter should always be set to False to prevent the inadvertent mixing of the two frameworks.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Web Browsers" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false" uimpl="true">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Web Browsers</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:member>Chrome</sci:member>
						<sci:member>Firefox</sci:member>
						<sci:member>Internet Explorer</sci:member>
						<sci:member>Set IE Compatibility</sci:member>
					</sci:arg>
					<sci:arg name="Set IE Compatibility" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Set IE Compatibility</sci:value>
								<sci:value>Set IE Compatibility</sci:value>
								<sci:value>Set IE Compatibility</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>&lt;p&gt;When this flag is set to True (default), IE compatibility in the report is set to IE 10 (the minimum support level for Pipeline Pilot). For most users of IE, this should provide a stable environment to view Pipeline Pilot reports.
&lt;/p&gt;
&lt;/p&gt;Switch off this setting, if necessary, to allow Internet Explorer to display content in the highest mode available. This is only required for users who view the report in Internet Explorer 11 or above and who need to enable facilities not available in IE 10 mode, such as WebGL and some HTML5/CSS features.
&lt;/p&gt;
&lt;p&gt;Note that even if you are viewing the report in another browser, other users may subsequently run the protocol or view the report in Internet Explorer, and so you may still need to set this IE Compatibility setting - but only in the rare case that your report requires something beyond the default IE 10 compatibility.
&lt;/p&gt;</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Internet Explorer" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Internet Explorer</sci:value>
								<sci:value>Internet Explorer</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>The location for Internet Explorer</sci:help>
						<sci:value>iexplore</sci:value>
					</sci:arg>
					<sci:arg name="Chrome" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Chrome</sci:value>
								<sci:value>Chrome</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>The location for Chrome</sci:help>
						<sci:value>chrome</sci:value>
					</sci:arg>
					<sci:arg name="Firefox" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Firefox</sci:value>
								<sci:value>Firefox</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>The location for Firefox</sci:help>
						<sci:value>firefox</sci:value>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval>ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>DrainTopDown</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>
						<sci:legalval>Owner Access Only</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>dbondarev</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Sat Apr 07 23:20:34 2018</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>HTML Report Viewer (Semantic UI)</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>ReportViewerNode</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>SubProtocol</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{185627DA-2D3A-41F3-BC57-ABDB16E41D1A}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>1962 -3195</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Displays the results of a reporting protocol in HTML5 format</sci:value>
						<sci:value>&lt;p&gt;This component accepts reporting objects as input (e.g., tables, text and images), and displays the output as an HTML file in Internet Explorer.&lt;/p&gt;</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>This component accepts reporting objects as input.</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>16.1.0.1140</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>88</sci:value>
					</sci:arg>
					<sci:arg name="OriginalPackage" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>OriginalPackage</sci:help>
						<sci:value>scitegic/report</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Semantic UI\Viewers and Writers\HTML Report Viewer (Semantic UI)</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol/>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="Delimited Text Text Reader" version="2">
					<sci:arg name="DelimitedText" type="TextType" required="true" visibility="visible" multi="false">
						<sci:help>The contents of a delimited text file. This is a way to include a delimited text file in a protocol without sending an additional file.</sci:help>
						<sci:value>Card
 
Visa
Amex
Discover
中国银联</sci:value>
					</sci:arg>
					<sci:arg name="Delimiter" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>Specifies the character that separates fields. Options include:

 - FigureOut: Determines the type automatically.
 - Tab: For tab-delimited fields.
 - Space: For space-delimited fields.
 - Comma: For comma-delimited fields.
 - Colon: For colon-delimited fields.
 - Semicolon: For semicolon-delimited fields.</sci:help>
						<sci:member>MultipleValueDelimiter</sci:member>
						<sci:legalval>FigureOut</sci:legalval>
						<sci:legalval>Tab</sci:legalval>
						<sci:legalval>Space</sci:legalval>
						<sci:legalval selected="true">Comma</sci:legalval>
						<sci:legalval>Colon</sci:legalval>
						<sci:legalval>Semicolon</sci:legalval>
					</sci:arg>
					<sci:arg name="MultipleValueDelimiter" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>The delimiter to use between multiple values contained in a single property. If the multiple value delimited exists in any of the input strings in any property, they are separated into an array of values. If &quot;None&quot;, 
values are never separated into multiple values.</sci:help>
						<sci:legalval selected="true">None</sci:legalval>
						<sci:legalval>Semicolon</sci:legalval>
						<sci:legalval>Colon</sci:legalval>
						<sci:legalval>Comma</sci:legalval>
						<sci:legalval>Linefeed</sci:legalval>
					</sci:arg>
					<sci:arg name="HasColumnNames" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>When True, property names are taken from the first line of data in the file. When False, properties are named Column1,Column2, etc.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{7B3502D7-FA57-4EB5-838B-FE6AB0BF0E69}" uimpl="true">
						<sci:help>Lists the set of temporary files which will be converted by the network to true temporary file names</sci:help>
						<sci:value>temp</sci:value>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval>ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Form" type="ProtocolType" required="false" visibility="nevershow" multi="false">
						<sci:help>The path to a protocol that will render an HTML user interface for this protocol.  This optional parameter is used by Webport to provide a custom user interface for a protocol.</sci:help>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>EmptyProtocol</sci:value>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Fri Jan 25 11:39:03 2013</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Delimited Text Text Reader</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>DOCUMENTNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{B39C2E91-1649-4B04-8504-F21CE6943C6B}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>378 -3295</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Read Delimited Text kept with this component as a parameter value</sci:value>
						<sci:value>This can be useful when you wish to send someone an example with the data contained with the protocol in a readable format. Just open the delimited file with a text viewer such as Notepad, copy the contents, and paste it into the &lt;I&gt;DelimitedText&lt;/I&gt; parameter.

Note that this component will be deprecated in the future -- you should use the right-click context &lt;I&gt;Initialize Using&lt;/I&gt; option &lt;I&gt;Provided Content&lt;/I&gt; on the &lt;I&gt;Source&lt;/I&gt; parameter of the &lt;I&gt;Delimited Text Reader&lt;/I&gt;.</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>9.0.1.13</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Options</sci:help>
					</sci:arg>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>50</sci:value>
					</sci:arg>
					<sci:arg name="OriginalComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>OriginalComponentGUID</sci:help>
						<sci:value>{B39C2E91-1649-4B04-8504-F21CE6943C6B}</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Data Access and Manipulation\Utilities\Debug\Delimited Text Text Reader</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol/>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="List Box (Semantic UI)" version="2">
					<sci:arg name="Parameter to Map" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;The name of a parameter on the target protocol that this component&apos;s value should be mapped to.&lt;/p&gt;</sci:help>
						<sci:value>card-type</sci:value>
					</sci:arg>
					<sci:arg name="Text" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;The text, or property containing the text, to be shown as an entry in the list box.&lt;/p&gt;</sci:help>
						<sci:member>Number of Displayed Rows</sci:member>
						<sci:member>Allow Multiple Selections</sci:member>
						<sci:member>Selected</sci:member>
						<sci:member>Value</sci:member>
						<sci:value>Card</sci:value>
					</sci:arg>
					<sci:arg name="Value" type="ExpressionType" required="false" visibility="visible" multi="false">
						<sci:help>The value that will be submitted for each item in the list. If not specified, the value of &lt;i&gt;Text&lt;/i&gt; will be submitted.

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;

&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
Due to inconsistent input value attribute handling by various browsers, it is recommended that the Value parameter not include leading or trailing whitespace. Depending on the browser, this whitespace may be omitted when the form is submitted. A possible workaround is to flank the entire value with a special character that can then be stripped when the input value is processed in the work protocol.
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
</sci:help>
					</sci:arg>
					<sci:arg name="Allow Multiple Selections" type="BoolType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;If true, multiple selections can be made in the list box.  Otherwise, only one entry can be selected.&lt;/p&gt;</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Selected" type="ExpressionType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;An optional PilotScript expression evaluating to True or False that determines if the current entry is pre-selected in the list box. For example, if the Text parameter is set to a property &apos;MyPet&apos; and you want to have a value &apos;Cat&apos; selected, then do the following:&lt;/p&gt;

&lt;code&gt;MyPet eq &apos;Cat&apos;;&lt;/code&gt;

&lt;p&gt;If you want the last item in a single selection list box to be pre-selected, simply enter True.&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;

&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
</sci:help>
					</sci:arg>
					<sci:arg name="Appearance" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:member>Enabled</sci:member>
						<sci:member>Searchable</sci:member>
						<sci:member>Width</sci:member>
						<sci:member>Label</sci:member>
					</sci:arg>
					<sci:arg name="Enabled" type="BoolType" required="true" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Searchable" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>Make the list box searchable?</sci:help>
						<sci:member>Full Text Search</sci:member>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Width" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>Width of the list box including its label (if present), in columns. Full screen is 16 columns. Leave blank to auto-size up to the widest available space.</sci:help>
						<sci:legalval/>
						<sci:legalval>one wide</sci:legalval>
						<sci:legalval>two wide</sci:legalval>
						<sci:legalval selected="true">three wide</sci:legalval>
						<sci:legalval>four wide</sci:legalval>
						<sci:legalval>five wide</sci:legalval>
						<sci:legalval>six wide</sci:legalval>
						<sci:legalval>seven wide</sci:legalval>
						<sci:legalval>eight wide</sci:legalval>
						<sci:legalval>nine wide</sci:legalval>
						<sci:legalval>ten wide</sci:legalval>
						<sci:legalval>eleven wide</sci:legalval>
						<sci:legalval>twelve wide</sci:legalval>
						<sci:legalval>thirteen wide</sci:legalval>
						<sci:legalval>fourteen wide</sci:legalval>
						<sci:legalval>fifteen wide</sci:legalval>
						<sci:legalval>sixteen wide</sci:legalval>
					</sci:arg>
					<sci:arg name="Label" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:member>Label Location</sci:member>
						<sci:value>Card Type</sci:value>
					</sci:arg>
					<sci:arg name="Label Location" type="StringType" required="true" visibility="visible" multi="false">
						<sci:enabledscript>SetDisabledDetails(&apos;To enable &apos;.ParameterName().&apos;, set a Label.&apos;);
Parameter(&apos;Label&apos;) ne &apos;&apos;;</sci:enabledscript>
						<sci:legalval selected="true">Above Field</sci:legalval>
						<sci:legalval>Left of Field</sci:legalval>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
						<sci:value>_s,  _ss, multiple_, guid</sci:value>
					</sci:arg>
					<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
						<sci:member>RunToCompletion Categorize Using</sci:member>
						<sci:legalval selected="true">False</sci:legalval>
						<sci:legalval>True - For Each Data Record</sci:legalval>
						<sci:legalval>True - For Each Category</sci:legalval>
					</sci:arg>
					<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
						<sci:member>Parallel Processing Options Batch Size</sci:member>
						<sci:member>Parallel Processing Options Server</sci:member>
						<sci:member>Parallel Processing Options Preserve Order</sci:member>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
						<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
#rtcForEachCategory := (Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
elsif (#rtcForEachCategory) then
	SetDisabledDetails(&quot;This parameter is not applicable when &apos;RunToCompletion&apos; is set to &apos;True - For Each Category&apos;&quot;);
end if;
#parallel and not #rtcForEachCategory;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
						<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
						<sci:member>Parallel Processing Options Server Processes</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
						<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Run subprotocol on grid engine if available.</sci:help>
						<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
						<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Constant GUID" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Override an automatically set GUID inside the component with this value.&lt;/p&gt; &lt;p&gt;If set, HTML element(s) will have their IDs set using this value instead of a randomly generated one.&lt;/p&gt;&lt;p&gt;Spaces or special characters are not allowed, only alphanumeric. The ID is case-sensitive.&lt;/p&gt;
</sci:help>
						<sci:validscript>SetInvalidDetails(ParameterName() . &apos; must be alphanumeric. Spaces or special characters are not allowed.&apos;);
numValues(rMatch(Parameter(), &apos;[^a-zA-Z0-9]+&apos;, &apos;ig&apos;)) == 0;</sci:validscript>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:value>ComponentReturnsPass</sci:value>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval>ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="Popup" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
							<sci:propval name="SCI_InitializeUsingOrigType" ishidden="true">GroupType</sci:propval>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup displays additional information in a temporary message.</sci:help>
						<sci:member>Popup Content</sci:member>
						<sci:member>Basic Popup</sci:member>
						<sci:member>Popup Appearance</sci:member>
						<sci:member>Behavior</sci:member>
					</sci:arg>
					<sci:arg name="Popup Content" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup Content</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>Popup content. (HTML is allowed).</sci:help>
					</sci:arg>
					<sci:arg name="Basic Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Basic Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can provide basic or extended formatting.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Popup Appearance" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup Appearance</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:member>Popup Width</sci:member>
						<sci:member>Fluid Popup</sci:member>
						<sci:member>Popup Size</sci:member>
						<sci:member>Flowing Popup</sci:member>
						<sci:member>Inverted Popup</sci:member>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable &apos;.ParameterName().&apos;, set Basic Popup to False&apos;);
not Parameter(&apos;Basic Popup&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Popup Width" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup Width</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can be wide or very wide to allow for longer content.</sci:help>
						<sci:legalval/>
						<sci:legalval>wide</sci:legalval>
						<sci:legalval>very wide</sci:legalval>
					</sci:arg>
					<sci:arg name="Fluid Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Fluid Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A fluid popup will take up the entire width of its  container.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Popup Size" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup Size</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can vary in font size.</sci:help>
						<sci:legalval/>
						<sci:legalval>mini</sci:legalval>
						<sci:legalval>tiny</sci:legalval>
						<sci:legalval>small</sci:legalval>
						<sci:legalval>large</sci:legalval>
						<sci:legalval>huge</sci:legalval>
					</sci:arg>
					<sci:arg name="Flowing Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Flowing Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can have no maximum width and continue to flow to fit its content.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Inverted Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Inverted Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can have its colors inverted.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Behavior" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Behavior</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:member>Show On</sci:member>
					</sci:arg>
					<sci:arg name="Show On" type="StringType" required="true" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Show On</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>When to show the popup. Hover (mouseover), click, focus (when a form element such as a text box is in focus).</sci:help>
						<sci:legalval selected="true">hover</sci:legalval>
						<sci:legalval>click</sci:legalval>
						<sci:legalval>focus</sci:legalval>
					</sci:arg>
					<sci:arg name="Full Text Search" type="StringType" required="true" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Full Text Search</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>&lt;p&gt;Specifying &quot;exact&quot; will force the exact search to be matched somewhere in the string, even in the middle of the string: e.g. typing &lt;code&gt;bar&lt;/code&gt; will match &lt;code&gt;barge&lt;/code&gt; and &lt;code&gt;mybarge&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Specifying &quot;true&quot; will use a fuzzy full text search anywhere in the string: e.g. typing &lt;code&gt;bar&lt;/code&gt; will match &lt;code&gt;barge&lt;/code&gt; and &lt;code&gt;mybarge&lt;/code&gt; and &lt;code&gt;bear&lt;/code&gt; and &lt;code&gt;mybear&lt;/code&gt; and &lt;code&gt;myboar&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Specifying &quot;false&quot; will force an exact search only starting at the beginning of the string: e.g. typing &lt;code&gt;bar&lt;/code&gt; will match &lt;code&gt;barge&lt;/code&gt; but not &lt;code&gt;mybarge&lt;/code&gt; and not &lt;code&gt;boar&lt;/code&gt;.&lt;/p&gt;</sci:help>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable &apos;.ParameterName().&apos;, set &quot;Searchable&quot; to True&apos;);
Parameter(&apos;Searchable&apos;);</sci:enabledscript>
						<sci:legalval selected="true">exact</sci:legalval>
						<sci:legalval>true</sci:legalval>
						<sci:legalval>false</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Number of Displayed Rows" type="LongType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;The number of rows to show in the list box.  If the number of items exceeds the number of rows, then the list box will contain a scroll bar.&lt;/p&gt;

&lt;p&gt;To create a drop-down list, set the number of rows to 1.&lt;/p&gt;</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>List Box (Semantic UI)</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>ReportSubProtocolNode</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>790</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{63F39E52-E567-45F4-84C9-E412817F26EF}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>666 -3295</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>List Box (Semantic UI).</sci:value>
						<sci:value>Used to select one or more items from a list, to be passed to the work protocol. Single or multi-select can be set. If multiple values are selected, they are passed as an array.

This component accepts both regular data records and array data. If multiple records with array data are received, a list box for each data record will be created.

You can set the number of rows to be displayed. If the number of rows is less than the number of values to be displayed, then a vertical scroll bar is automatically added. To create a drop-down list, set the number of rows to be displayed to 1.

</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
						<sci:value>None</sci:value>
						<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>16.1.0.1140</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval>Owner Access Only</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>bondadx2</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Sun Dec 17 13:41:30 2017</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>127</sci:value>
					</sci:arg>
					<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Processing Order</sci:help>
						<sci:value>DrainTopDown</sci:value>
					</sci:arg>
					<sci:arg name="OriginalPackage" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>OriginalPackage</sci:help>
						<sci:value>scitegic/coreutils</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Modified</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Semantic UI\Forms\Functional Elements\List Box (Semantic UI)</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol/>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="Text Box (Semantic UI)" version="2">
					<sci:arg name="Parameter to Map" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;The name of a parameter on the target protocol that this component&apos;s value should be mapped to.&lt;/p&gt;</sci:help>
						<sci:member>Default Value</sci:member>
						<sci:member>Validation Options</sci:member>
						<sci:value>card-number</sci:value>
					</sci:arg>
					<sci:arg name="Default Value" type="ExpressionType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:help>&lt;p&gt;The initial value contained in the text box.  To have a blank text box, enter &apos;&apos; (two single quotes).&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Tis parameter is ExpressionType. You can enter a value in quotes, a global variable with  the @ notation, or a property name on the incoming data stream.&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;
&lt;li&gt;
Due to inconsistent input value attribute handling by various browsers, it is recommended that the Default Value parameter not include leading or trailing whitespace. Depending on the browser, this whitespace may be omitted when the form is submitted. A possible workaround is to flank the entire value with a special character that can then be stripped when the input value is processed in the work protocol.
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Validation Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:member>Advanced</sci:member>
						<sci:member>Basic Rules</sci:member>
					</sci:arg>
					<sci:arg name="Basic Rules" type="TextType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>&lt;p&gt;(Optional) basic validation rules, e.g. not empty, numbers only, etc.
&lt;/p&gt;
&lt;p&gt;For available rules, refer to &lt;a href=&quot;javascript:DoLink(&apos;http://jqueryvalidation.org/documentation&apos;)&quot;&gt;http://jqueryvalidation.org/documentation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;A list of all recognized basic rules (several rules may be combined):&lt;/p&gt;
&lt;br&gt;	required: true,
&lt;br&gt;	minlength: 3,
&lt;br&gt;	maxlength: 5,
&lt;br&gt;	rangelength: [2, 6],
&lt;br&gt;	min: 0.5,
&lt;br&gt;	max: 10.1,
&lt;br&gt;	range: [-5, 25.6],
&lt;br&gt;	email: true,
&lt;br&gt;	url: true,
&lt;br&gt;	date: true,
&lt;br&gt;	dateISO: true,
&lt;br&gt;	number: true,
&lt;br&gt;	digits: true,&lt;br&gt;
</sci:help>
						<sci:value>/* (Optional) basic validation rules, e.g. not empty, numbers only, etc.

	For available rules, refer to http://jqueryvalidation.org/documentation

	A list of all recognized basic rules (several rules may be combined):

	required: true,
	minlength: 3,
	maxlength: 5,
	rangelength: [2, 6],
	min: 0.5,
	max: 10.1,
	range: [-5, 25.6],
	email: true,
	url: true,
	date: true,
	dateISO: true,
	number: true,
	digits: true,

	There should be no comma on the last rule.
*/
digits:	true,
minlength: 16,
maxlength: 16</sci:value>
					</sci:arg>
					<sci:arg name="Advanced" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:member>Validator Protocol</sci:member>
					</sci:arg>
					<sci:arg name="Validator Protocol" type="ProtocolLinkType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>&lt;p&gt;(Optional) A protocol to perform input value validation.&lt;/p&gt;

&lt;p&gt;Make a new protocol using the template protocol (Labspace/Validator Protocol Template) and modify it to return True if the validation is successful, and a double-quote-enclosed string (a message) if the validation is unsuccessful.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Appearance" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:help>Appearance</sci:help>
						<sci:member>Required</sci:member>
						<sci:member>Enabled</sci:member>
						<sci:member>Width</sci:member>
						<sci:member>Placeholder</sci:member>
						<sci:member>Label</sci:member>
						<sci:member>Text Box Options</sci:member>
						<sci:member>Typeahead Options</sci:member>
						<sci:member>Autocomplete</sci:member>
					</sci:arg>
					<sci:arg name="Required" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>Required?</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Enabled" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>State</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>Enabled?</sci:help>
						<sci:legalvalscript>if (Parameter(&apos;Required&apos;)) then
		resize(lvals, 1);
	    lvals[1] := True;
	else
		resize(lvals, 2);
	    lvals[1] := True; lvals[2] := False;
	end if;
	SetLegalValues(lvals);</sci:legalvalscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Width" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>Width of the text box including its label (if present), in columns. Full screen is 16 columns. Leave blank to auto-size up to the widest available space.</sci:help>
						<sci:legalval/>
						<sci:legalval>one wide</sci:legalval>
						<sci:legalval>two wide</sci:legalval>
						<sci:legalval>three wide</sci:legalval>
						<sci:legalval>four wide</sci:legalval>
						<sci:legalval>five wide</sci:legalval>
						<sci:legalval selected="true">six wide</sci:legalval>
						<sci:legalval>seven wide</sci:legalval>
						<sci:legalval>eight wide</sci:legalval>
						<sci:legalval>nine wide</sci:legalval>
						<sci:legalval>ten wide</sci:legalval>
						<sci:legalval>eleven wide</sci:legalval>
						<sci:legalval>twelve wide</sci:legalval>
						<sci:legalval>thirteen wide</sci:legalval>
						<sci:legalval>fourteen wide</sci:legalval>
						<sci:legalval>fifteen wide</sci:legalval>
						<sci:legalval>sixteen wide</sci:legalval>
					</sci:arg>
					<sci:arg name="Placeholder" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>Placeholder</sci:help>
						<sci:value>Card #</sci:value>
					</sci:arg>
					<sci:arg name="Label" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>Label</sci:help>
						<sci:member>Label Location</sci:member>
						<sci:validscript>SetInvalidDetails(ParameterName() . &apos; must be set when the field is set to Required.&apos;);
(Parameter() ne &apos;&apos; and Parameter(&apos;Required&apos;) ) or not Parameter(&apos;Required&apos;)</sci:validscript>
						<sci:value>Card Number</sci:value>
					</sci:arg>
					<sci:arg name="Label Location" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>Location</sci:help>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable &apos;.ParameterName().&apos;, set a Label.&apos;);
Parameter(&apos;Label&apos;) ne &apos;&apos;;</sci:enabledscript>
						<sci:legalval selected="true">Above Field</sci:legalval>
						<sci:legalval>Left of Field</sci:legalval>
					</sci:arg>
					<sci:arg name="Text Box Options" type="GroupType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;Options to control the text box.&lt;/p&gt;</sci:help>
						<sci:member>Number of Lines</sci:member>
						<sci:member>Wrap Multiple Lines</sci:member>
						<sci:member>Is Password</sci:member>
						<sci:member>Is Array</sci:member>
						<sci:member>Array Value Display</sci:member>
					</sci:arg>
					<sci:arg name="Number of Lines" type="LongType" required="true" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;The number of lines of text to display.&lt;/p&gt;</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="Wrap Multiple Lines" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;If &lt;i&gt;Number Of Lines&lt;/i&gt; is greater than 1, this parameter determines whether long lines are wrapped.&lt;/p&gt;</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Is Password" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;If true, the text box will have its content masked with the default browser password character so that it is not visible.&lt;/p&gt;</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Is Array" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Determines whether data will be displayed and submitted as array data. If set to &quot;True&quot;, then &lt;em&gt;Array Value Display&lt;/em&gt; determines the character used to separate array values.&lt;/p&gt;

&lt;p&gt;With a value of &quot;Based on Input Data&quot;, the data type of the &lt;em&gt;Default Value&lt;/em&gt; will be examined. If no &lt;em&gt;Default Value&lt;/em&gt; is provided, then a value of &quot;False&quot; is assumed.&lt;/p&gt;
</sci:help>
						<sci:legalval selected="true">Based on Input Data</sci:legalval>
						<sci:legalval>True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Array Value Display" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Determines the array value separator if data is to be displayed and submitted in array format (as determined by the value of &lt;em&gt;Is Array&lt;/em&gt;.)


</sci:help>
						<sci:enabledscript>enabled := Parameter(&quot;Is Array&quot;) NE &apos;False&apos;;
enabled;</sci:enabledscript>
						<sci:legalval selected="true">Separate by Newlines</sci:legalval>
						<sci:legalval>Separate by Commas</sci:legalval>
					</sci:arg>
					<sci:arg name="Typeahead Options" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>&lt;p&gt;Enable contextual suggestions in the text box. Both local and remote data can be used for suggestions.&lt;/p&gt;
&lt;a href=&quot;javascript:DoLink(&apos;http://twitter.github.io/typeahead.js/examples&apos;)&quot;&gt;Twitter Typeahead&lt;/a&gt;</sci:help>
						<sci:member>Local</sci:member>
						<sci:member>Prefetch</sci:member>
						<sci:member>Remote</sci:member>
						<sci:member>Limit</sci:member>
					</sci:arg>
					<sci:arg name="Local" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;(Optional parameter) Provide a JSON-formatted array like this:&lt;/p&gt;
[&quot;timtrueman&quot;, &quot;JakeHarding&quot;, &quot;vskarich&quot;]</sci:help>
					</sci:arg>
					<sci:arg name="Prefetch" type="ProtocolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>&lt;p&gt;(Optional parameter) Provide a protocol which can generate a list of values to pre-populate this text box when the web page loads. This protocol must produce a text file containing a JSON-encoded array:&lt;/p&gt;
&lt;code&gt;[&quot;BAS-0000001&quot;, &quot;BAS-00000002&quot;]&lt;/code&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Remote" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;(Optional parameter) As the user types into the text box, with each change fetch an updated list of suggestions. Provide an HTTP or HTTPS URL to a web service which returns a JSON-formatted array like this:&lt;/p&gt;
[&quot;timtrueman&quot;, &quot;JakeHarding&quot;, &quot;vskarich&quot;]
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; User input in the text box can be sent to the remote service as a URL parameter %QUERY, so do include %QUERY in your URL.&lt;/p&gt;

&lt;code&gt;https://twitter.com/accounts?q=%QUERY&lt;/code&gt;

&lt;p&gt;Note: to use a Pipeline Pilot protocol that will process the text box value typed in by the user, enter the url below with the protocol GUID and the %QUERY in it. You can omit servername and port:&lt;/p&gt;&lt;p&gt;&lt;code&gt;/auth/launchjob?_compat=1&amp;_protocol={123456}&amp;myparameter=%QUERY&lt;/code&gt;&lt;/p&gt;(do not change the word %QUERY). To help you, we created an example: &lt;code&gt;Protocols\Examples\Semantic UI\Form\Auto-suggest in a Text Box\Search Compounds&lt;/code&gt;.
&lt;p&gt;When using remote typeahead with a Pipeline Pilot protocol, the user must already logged in to Pipeline Pilot via a web client, otherwise typeahead won&apos;t work. If your test isn&apos;t working check that you already logged into webport in your web browser.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Limit" type="LongType" required="false" visibility="visible" multi="false">
						<sci:help>Limit</sci:help>
						<sci:value>10</sci:value>
					</sci:arg>
					<sci:arg name="Autocomplete" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>Enable automatic browser autocomplete on this webform input field?

Autocomplete shows a history of user inputs in the text box when anything is being typed in the box.

This option is overridden if the text box has typeahead enabled. Typeahead displays its hints instead of autocomplete.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
						<sci:value>class_, guid, a1, a2, a3, TypeaheadClass</sci:value>
					</sci:arg>
					<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
						<sci:member>RunToCompletion Categorize Using</sci:member>
						<sci:legalval selected="true">False</sci:legalval>
						<sci:legalval>True - For Each Data Record</sci:legalval>
						<sci:legalval>True - For Each Category</sci:legalval>
					</sci:arg>
					<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
						<sci:member>Parallel Processing Options Batch Size</sci:member>
						<sci:member>Parallel Processing Options Server</sci:member>
						<sci:member>Parallel Processing Options Preserve Order</sci:member>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
						<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
#rtcForEachCategory := (Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
elsif (#rtcForEachCategory) then
	SetDisabledDetails(&quot;This parameter is not applicable when &apos;RunToCompletion&apos; is set to &apos;True - For Each Category&apos;&quot;);
end if;
#parallel and not #rtcForEachCategory;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
						<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
						<sci:member>Parallel Processing Options Server Processes</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
						<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Run subprotocol on grid engine if available.</sci:help>
						<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
						<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Constant GUID" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Override an automatically set GUID inside the component with this value.&lt;/p&gt; &lt;p&gt;If set, HTML element(s) will have their IDs set using this value instead of a randomly generated one.&lt;/p&gt;&lt;p&gt;Spaces or special characters are not allowed, only alphanumeric. The ID is case-sensitive.&lt;/p&gt;
</sci:help>
						<sci:validscript>SetInvalidDetails(ParameterName() . &apos; must be alphanumeric. Spaces or special characters are not allowed.&apos;);
numValues(rMatch(Parameter(), &apos;[^a-zA-Z0-9]+&apos;, &apos;ig&apos;)) == 0;</sci:validscript>
						<sci:legalval/>
						<sci:legalval>$(Constant GUID)</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval>ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="Popup" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
							<sci:propval name="SCI_InitializeUsingOrigType" ishidden="true">GroupType</sci:propval>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup displays additional information in a temporary message.</sci:help>
						<sci:member>Popup Content</sci:member>
						<sci:member>Basic Popup</sci:member>
						<sci:member>Popup Appearance</sci:member>
						<sci:member>Behavior</sci:member>
					</sci:arg>
					<sci:arg name="Popup Content" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup Content</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>Popup content. (HTML is allowed).</sci:help>
					</sci:arg>
					<sci:arg name="Basic Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Basic Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can provide basic or extended formatting.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Popup Appearance" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup Appearance</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>Appearance</sci:help>
						<sci:member>Popup Width</sci:member>
						<sci:member>Fluid Popup</sci:member>
						<sci:member>Popup Size</sci:member>
						<sci:member>Flowing Popup</sci:member>
						<sci:member>Inverted Popup</sci:member>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable &apos;.ParameterName().&apos;, set Basic Popup to False&apos;);
not Parameter(&apos;Basic Popup&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Popup Width" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup Width</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can be wide or very wide to allow for longer content.</sci:help>
						<sci:legalval/>
						<sci:legalval>wide</sci:legalval>
						<sci:legalval>very wide</sci:legalval>
					</sci:arg>
					<sci:arg name="Fluid Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Fluid Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A fluid popup will take up the entire width of its  container.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Popup Size" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup Size</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can vary in font size.</sci:help>
						<sci:legalval/>
						<sci:legalval>mini</sci:legalval>
						<sci:legalval>tiny</sci:legalval>
						<sci:legalval>small</sci:legalval>
						<sci:legalval>large</sci:legalval>
						<sci:legalval>huge</sci:legalval>
					</sci:arg>
					<sci:arg name="Flowing Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Flowing Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can have no maximum width and continue to flow to fit its content.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Inverted Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Inverted Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can have its colors inverted.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Behavior" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Behavior</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>Behavior</sci:help>
						<sci:member>Show On</sci:member>
					</sci:arg>
					<sci:arg name="Show On" type="StringType" required="true" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Show On</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>When to show the popup. Hover (mouseover), click, focus (when a form element such as a text box is in focus).</sci:help>
						<sci:legalval selected="true">hover</sci:legalval>
						<sci:legalval>click</sci:legalval>
						<sci:legalval>focus</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Text Box (Semantic UI)</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>ReportSubProtocolNode</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>790</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{9F37F5CB-5B08-4AE7-BAC5-FA0394004CD8}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>666 -3695</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Text Box (Semantic UI).</sci:value>
						<sci:value>&lt;p&gt;A text box is an area where you can enter and edit content.  A text box can be a simple, single-line text box, a multiple-line text box, or a password field.&lt;/p&gt;
&lt;p&gt;Validation and typeahead parameters are available.&lt;/p&gt;</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
						<sci:value>None</sci:value>
						<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>16.1.0.1140</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval>Owner Access Only</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>bondadx2</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Sat Jul 23 17:59:02 2016</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>128</sci:value>
					</sci:arg>
					<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Processing Order</sci:help>
						<sci:value>DrainTopDown</sci:value>
					</sci:arg>
					<sci:arg name="OriginalPackage" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>OriginalPackage</sci:help>
						<sci:value>scitegic/coreutils</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Semantic UI\Forms\Functional Elements\Text Box (Semantic UI)</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol/>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="Horizontal Field Group (Semantic UI)" version="2">
					<sci:arg name="Number of Fields" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Number of Fields</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:legalval/>
						<sci:legalval>one</sci:legalval>
						<sci:legalval>two</sci:legalval>
						<sci:legalval>three</sci:legalval>
						<sci:legalval>four</sci:legalval>
						<sci:legalval>five</sci:legalval>
						<sci:legalval>six</sci:legalval>
						<sci:legalval>seven</sci:legalval>
						<sci:legalval>eight</sci:legalval>
						<sci:legalval>nine</sci:legalval>
						<sci:legalval>ten</sci:legalval>
						<sci:legalval>eleven</sci:legalval>
						<sci:legalval>twelve</sci:legalval>
						<sci:legalval>thirteen</sci:legalval>
						<sci:legalval>fourteen</sci:legalval>
						<sci:legalval>fifteen</sci:legalval>
						<sci:legalval>sixteen</sci:legalval>
					</sci:arg>
					<sci:arg name="Appearance" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:member>Label</sci:member>
						<sci:member>Width</sci:member>
					</sci:arg>
					<sci:arg name="Label" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>Label will appear above the field group.</sci:help>
					</sci:arg>
					<sci:arg name="Width" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>Width of the text box including its label (if present), in columns. Full screen is 16 columns. Leave blank to auto-size up to the widest available space.</sci:help>
						<sci:legalval/>
						<sci:legalval>one wide</sci:legalval>
						<sci:legalval>two wide</sci:legalval>
						<sci:legalval>three wide</sci:legalval>
						<sci:legalval>four wide</sci:legalval>
						<sci:legalval>five wide</sci:legalval>
						<sci:legalval>six wide</sci:legalval>
						<sci:legalval>seven wide</sci:legalval>
						<sci:legalval>eight wide</sci:legalval>
						<sci:legalval>nine wide</sci:legalval>
						<sci:legalval>ten wide</sci:legalval>
						<sci:legalval>eleven wide</sci:legalval>
						<sci:legalval>twelve wide</sci:legalval>
						<sci:legalval>thirteen wide</sci:legalval>
						<sci:legalval>fourteen wide</sci:legalval>
						<sci:legalval>fifteen wide</sci:legalval>
						<sci:legalval>sixteen wide</sci:legalval>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
						<sci:member>RunToCompletion Categorize Using</sci:member>
						<sci:legalval selected="true">False</sci:legalval>
						<sci:legalval>True - For Each Data Record</sci:legalval>
						<sci:legalval>True - For Each Category</sci:legalval>
					</sci:arg>
					<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
						<sci:member>Parallel Processing Options Batch Size</sci:member>
						<sci:member>Parallel Processing Options Server</sci:member>
						<sci:member>Parallel Processing Options Preserve Order</sci:member>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
						<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
#rtcForEachCategory := (Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
elsif (#rtcForEachCategory) then
	SetDisabledDetails(&quot;This parameter is not applicable when &apos;RunToCompletion&apos; is set to &apos;True - For Each Category&apos;&quot;);
end if;
#parallel and not #rtcForEachCategory;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
						<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
						<sci:member>Parallel Processing Options Server Processes</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
						<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Run subprotocol on grid engine if available.</sci:help>
						<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
						<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:value>ComponentReturnsPass</sci:value>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval>ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Horizontal Field Group (Semantic UI)</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>ReportSubProtocolNode</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>790</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{77FD9923-E478-4AE3-BFA9-CBE5479D3AEF}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>1002 -3695</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Horizontal Field Group (Semantic UI).</sci:value>
						<sci:value>&lt;p&gt;A text box is an area where you can enter and edit content.  A text box can be a simple, single-line text box, a multiple-line text box, or a password field.&lt;/p&gt;
&lt;p&gt;Validation and typeahead parameters are available.&lt;/p&gt;</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
						<sci:value>None</sci:value>
						<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>16.1.0.1140</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval>Owner Access Only</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>bondadx2</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Tue Jun 14 10:41:27 2016</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>130</sci:value>
					</sci:arg>
					<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Processing Order</sci:help>
						<sci:value>DrainTopDown</sci:value>
					</sci:arg>
					<sci:arg name="OriginalPackage" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>OriginalPackage</sci:help>
						<sci:value>scitegic/coreutils</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Modified</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Semantic UI\Forms\Formatting Elements\Horizontal Field Group (Semantic UI)</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol/>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="Text Box (Semantic UI)" version="2">
					<sci:arg name="Parameter to Map" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;The name of a parameter on the target protocol that this component&apos;s value should be mapped to.&lt;/p&gt;</sci:help>
						<sci:member>Default Value</sci:member>
						<sci:member>Validation Options</sci:member>
						<sci:value>card-cvc</sci:value>
					</sci:arg>
					<sci:arg name="Default Value" type="ExpressionType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:help>&lt;p&gt;The initial value contained in the text box.  To have a blank text box, enter &apos;&apos; (two single quotes).&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Tis parameter is ExpressionType. You can enter a value in quotes, a global variable with  the @ notation, or a property name on the incoming data stream.&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;
&lt;li&gt;
Due to inconsistent input value attribute handling by various browsers, it is recommended that the Default Value parameter not include leading or trailing whitespace. Depending on the browser, this whitespace may be omitted when the form is submitted. A possible workaround is to flank the entire value with a special character that can then be stripped when the input value is processed in the work protocol.
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Validation Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:member>Advanced</sci:member>
						<sci:member>Basic Rules</sci:member>
					</sci:arg>
					<sci:arg name="Basic Rules" type="TextType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>&lt;p&gt;(Optional) basic validation rules, e.g. not empty, numbers only, etc.
&lt;/p&gt;
&lt;p&gt;For available rules, refer to &lt;a href=&quot;javascript:DoLink(&apos;http://jqueryvalidation.org/documentation&apos;)&quot;&gt;http://jqueryvalidation.org/documentation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;A list of all recognized basic rules (several rules may be combined):&lt;/p&gt;
&lt;br&gt;	required: true,
&lt;br&gt;	minlength: 3,
&lt;br&gt;	maxlength: 5,
&lt;br&gt;	rangelength: [2, 6],
&lt;br&gt;	min: 0.5,
&lt;br&gt;	max: 10.1,
&lt;br&gt;	range: [-5, 25.6],
&lt;br&gt;	email: true,
&lt;br&gt;	url: true,
&lt;br&gt;	date: true,
&lt;br&gt;	dateISO: true,
&lt;br&gt;	number: true,
&lt;br&gt;	digits: true,&lt;br&gt;
</sci:help>
						<sci:value>/* (Optional) basic validation rules, e.g. not empty, numbers only, etc.

	For available rules, refer to http://jqueryvalidation.org/documentation

	A list of all recognized basic rules (several rules may be combined):

	required: true,
	minlength: 3,
	maxlength: 5,
	rangelength: [2, 6],
	min: 0.5,
	max: 10.1,
	range: [-5, 25.6],
	email: true,
	url: true,
	date: true,
	dateISO: true,
	number: true,
	digits: true,

	There should be no comma on the last rule.
*/
digits: true,
rangelength: [3,3]</sci:value>
					</sci:arg>
					<sci:arg name="Advanced" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:member>Validator Protocol</sci:member>
					</sci:arg>
					<sci:arg name="Validator Protocol" type="ProtocolLinkType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>&lt;p&gt;(Optional) A protocol to perform input value validation.&lt;/p&gt;

&lt;p&gt;Make a new protocol using the template protocol (Labspace/Validator Protocol Template) and modify it to return True if the validation is successful, and a double-quote-enclosed string (a message) if the validation is unsuccessful.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Appearance" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:help>Appearance</sci:help>
						<sci:member>Required</sci:member>
						<sci:member>Enabled</sci:member>
						<sci:member>Width</sci:member>
						<sci:member>Placeholder</sci:member>
						<sci:member>Label</sci:member>
						<sci:member>Text Box Options</sci:member>
						<sci:member>Typeahead Options</sci:member>
						<sci:member>Autocomplete</sci:member>
					</sci:arg>
					<sci:arg name="Required" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>Required?</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Enabled" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>State</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>Enabled?</sci:help>
						<sci:legalvalscript>if (Parameter(&apos;Required&apos;)) then
		resize(lvals, 1);
	    lvals[1] := True;
	else
		resize(lvals, 2);
	    lvals[1] := True; lvals[2] := False;
	end if;
	SetLegalValues(lvals);</sci:legalvalscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Width" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>Width of the text box including its label (if present), in columns. Full screen is 16 columns. Leave blank to auto-size up to the widest available space.</sci:help>
						<sci:legalval/>
						<sci:legalval>one wide</sci:legalval>
						<sci:legalval selected="true">two wide</sci:legalval>
						<sci:legalval>three wide</sci:legalval>
						<sci:legalval>four wide</sci:legalval>
						<sci:legalval>five wide</sci:legalval>
						<sci:legalval>six wide</sci:legalval>
						<sci:legalval>seven wide</sci:legalval>
						<sci:legalval>eight wide</sci:legalval>
						<sci:legalval>nine wide</sci:legalval>
						<sci:legalval>ten wide</sci:legalval>
						<sci:legalval>eleven wide</sci:legalval>
						<sci:legalval>twelve wide</sci:legalval>
						<sci:legalval>thirteen wide</sci:legalval>
						<sci:legalval>fourteen wide</sci:legalval>
						<sci:legalval>fifteen wide</sci:legalval>
						<sci:legalval>sixteen wide</sci:legalval>
					</sci:arg>
					<sci:arg name="Placeholder" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>Placeholder</sci:help>
						<sci:value>CVC</sci:value>
					</sci:arg>
					<sci:arg name="Label" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>Label</sci:help>
						<sci:member>Label Location</sci:member>
						<sci:validscript>SetInvalidDetails(ParameterName() . &apos; must be set when the field is set to Required.&apos;);
(Parameter() ne &apos;&apos; and Parameter(&apos;Required&apos;) ) or not Parameter(&apos;Required&apos;)</sci:validscript>
						<sci:value>CVC</sci:value>
					</sci:arg>
					<sci:arg name="Label Location" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>Location</sci:help>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable &apos;.ParameterName().&apos;, set a Label.&apos;);
Parameter(&apos;Label&apos;) ne &apos;&apos;;</sci:enabledscript>
						<sci:legalval selected="true">Above Field</sci:legalval>
						<sci:legalval>Left of Field</sci:legalval>
					</sci:arg>
					<sci:arg name="Text Box Options" type="GroupType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;Options to control the text box.&lt;/p&gt;</sci:help>
						<sci:member>Number of Lines</sci:member>
						<sci:member>Wrap Multiple Lines</sci:member>
						<sci:member>Is Password</sci:member>
						<sci:member>Is Array</sci:member>
						<sci:member>Array Value Display</sci:member>
					</sci:arg>
					<sci:arg name="Number of Lines" type="LongType" required="true" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;The number of lines of text to display.&lt;/p&gt;</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="Wrap Multiple Lines" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;If &lt;i&gt;Number Of Lines&lt;/i&gt; is greater than 1, this parameter determines whether long lines are wrapped.&lt;/p&gt;</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Is Password" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;If true, the text box will have its content masked with the default browser password character so that it is not visible.&lt;/p&gt;</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Is Array" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Determines whether data will be displayed and submitted as array data. If set to &quot;True&quot;, then &lt;em&gt;Array Value Display&lt;/em&gt; determines the character used to separate array values.&lt;/p&gt;

&lt;p&gt;With a value of &quot;Based on Input Data&quot;, the data type of the &lt;em&gt;Default Value&lt;/em&gt; will be examined. If no &lt;em&gt;Default Value&lt;/em&gt; is provided, then a value of &quot;False&quot; is assumed.&lt;/p&gt;
</sci:help>
						<sci:legalval selected="true">Based on Input Data</sci:legalval>
						<sci:legalval>True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Array Value Display" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Determines the array value separator if data is to be displayed and submitted in array format (as determined by the value of &lt;em&gt;Is Array&lt;/em&gt;.)


</sci:help>
						<sci:enabledscript>enabled := Parameter(&quot;Is Array&quot;) NE &apos;False&apos;;
enabled;</sci:enabledscript>
						<sci:legalval selected="true">Separate by Newlines</sci:legalval>
						<sci:legalval>Separate by Commas</sci:legalval>
					</sci:arg>
					<sci:arg name="Typeahead Options" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>&lt;p&gt;Enable contextual suggestions in the text box. Both local and remote data can be used for suggestions.&lt;/p&gt;
&lt;a href=&quot;javascript:DoLink(&apos;http://twitter.github.io/typeahead.js/examples&apos;)&quot;&gt;Twitter Typeahead&lt;/a&gt;</sci:help>
						<sci:member>Local</sci:member>
						<sci:member>Prefetch</sci:member>
						<sci:member>Remote</sci:member>
						<sci:member>Limit</sci:member>
					</sci:arg>
					<sci:arg name="Local" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;(Optional parameter) Provide a JSON-formatted array like this:&lt;/p&gt;
[&quot;timtrueman&quot;, &quot;JakeHarding&quot;, &quot;vskarich&quot;]</sci:help>
					</sci:arg>
					<sci:arg name="Prefetch" type="ProtocolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>&lt;p&gt;(Optional parameter) Provide a protocol which can generate a list of values to pre-populate this text box when the web page loads. This protocol must produce a text file containing a JSON-encoded array:&lt;/p&gt;
&lt;code&gt;[&quot;BAS-0000001&quot;, &quot;BAS-00000002&quot;]&lt;/code&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Remote" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;(Optional parameter) As the user types into the text box, with each change fetch an updated list of suggestions. Provide an HTTP or HTTPS URL to a web service which returns a JSON-formatted array like this:&lt;/p&gt;
[&quot;timtrueman&quot;, &quot;JakeHarding&quot;, &quot;vskarich&quot;]
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; User input in the text box can be sent to the remote service as a URL parameter %QUERY, so do include %QUERY in your URL.&lt;/p&gt;

&lt;code&gt;https://twitter.com/accounts?q=%QUERY&lt;/code&gt;

&lt;p&gt;Note: to use a Pipeline Pilot protocol that will process the text box value typed in by the user, enter the url below with the protocol GUID and the %QUERY in it. You can omit servername and port:&lt;/p&gt;&lt;p&gt;&lt;code&gt;/auth/launchjob?_compat=1&amp;_protocol={123456}&amp;myparameter=%QUERY&lt;/code&gt;&lt;/p&gt;(do not change the word %QUERY). To help you, we created an example: &lt;code&gt;Protocols\Examples\Semantic UI\Form\Auto-suggest in a Text Box\Search Compounds&lt;/code&gt;.
&lt;p&gt;When using remote typeahead with a Pipeline Pilot protocol, the user must already logged in to Pipeline Pilot via a web client, otherwise typeahead won&apos;t work. If your test isn&apos;t working check that you already logged into webport in your web browser.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Limit" type="LongType" required="false" visibility="visible" multi="false">
						<sci:help>Limit</sci:help>
						<sci:value>10</sci:value>
					</sci:arg>
					<sci:arg name="Autocomplete" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>Enable automatic browser autocomplete on this webform input field?

Autocomplete shows a history of user inputs in the text box when anything is being typed in the box.

This option is overridden if the text box has typeahead enabled. Typeahead displays its hints instead of autocomplete.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
						<sci:value>class_, guid, a1, a2, a3, TypeaheadClass</sci:value>
					</sci:arg>
					<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
						<sci:member>RunToCompletion Categorize Using</sci:member>
						<sci:legalval selected="true">False</sci:legalval>
						<sci:legalval>True - For Each Data Record</sci:legalval>
						<sci:legalval>True - For Each Category</sci:legalval>
					</sci:arg>
					<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
						<sci:member>Parallel Processing Options Batch Size</sci:member>
						<sci:member>Parallel Processing Options Server</sci:member>
						<sci:member>Parallel Processing Options Preserve Order</sci:member>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
						<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
#rtcForEachCategory := (Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
elsif (#rtcForEachCategory) then
	SetDisabledDetails(&quot;This parameter is not applicable when &apos;RunToCompletion&apos; is set to &apos;True - For Each Category&apos;&quot;);
end if;
#parallel and not #rtcForEachCategory;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
						<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
						<sci:member>Parallel Processing Options Server Processes</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
						<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Run subprotocol on grid engine if available.</sci:help>
						<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
						<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Constant GUID" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Override an automatically set GUID inside the component with this value.&lt;/p&gt; &lt;p&gt;If set, HTML element(s) will have their IDs set using this value instead of a randomly generated one.&lt;/p&gt;&lt;p&gt;Spaces or special characters are not allowed, only alphanumeric. The ID is case-sensitive.&lt;/p&gt;
</sci:help>
						<sci:validscript>SetInvalidDetails(ParameterName() . &apos; must be alphanumeric. Spaces or special characters are not allowed.&apos;);
numValues(rMatch(Parameter(), &apos;[^a-zA-Z0-9]+&apos;, &apos;ig&apos;)) == 0;</sci:validscript>
						<sci:legalval/>
						<sci:legalval>$(Constant GUID)</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval>ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="Popup" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
							<sci:propval name="SCI_InitializeUsingOrigType" ishidden="true">GroupType</sci:propval>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup displays additional information in a temporary message.</sci:help>
						<sci:member>Popup Content</sci:member>
						<sci:member>Basic Popup</sci:member>
						<sci:member>Popup Appearance</sci:member>
						<sci:member>Behavior</sci:member>
					</sci:arg>
					<sci:arg name="Popup Content" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup Content</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>Popup content. (HTML is allowed).</sci:help>
					</sci:arg>
					<sci:arg name="Basic Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Basic Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can provide basic or extended formatting.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Popup Appearance" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup Appearance</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>Appearance</sci:help>
						<sci:member>Popup Width</sci:member>
						<sci:member>Fluid Popup</sci:member>
						<sci:member>Popup Size</sci:member>
						<sci:member>Flowing Popup</sci:member>
						<sci:member>Inverted Popup</sci:member>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable &apos;.ParameterName().&apos;, set Basic Popup to False&apos;);
not Parameter(&apos;Basic Popup&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Popup Width" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup Width</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can be wide or very wide to allow for longer content.</sci:help>
						<sci:legalval/>
						<sci:legalval>wide</sci:legalval>
						<sci:legalval>very wide</sci:legalval>
					</sci:arg>
					<sci:arg name="Fluid Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Fluid Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A fluid popup will take up the entire width of its  container.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Popup Size" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup Size</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can vary in font size.</sci:help>
						<sci:legalval/>
						<sci:legalval>mini</sci:legalval>
						<sci:legalval>tiny</sci:legalval>
						<sci:legalval>small</sci:legalval>
						<sci:legalval>large</sci:legalval>
						<sci:legalval>huge</sci:legalval>
					</sci:arg>
					<sci:arg name="Flowing Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Flowing Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can have no maximum width and continue to flow to fit its content.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Inverted Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Inverted Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can have its colors inverted.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Behavior" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Behavior</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>Behavior</sci:help>
						<sci:member>Show On</sci:member>
					</sci:arg>
					<sci:arg name="Show On" type="StringType" required="true" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Show On</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>When to show the popup. Hover (mouseover), click, focus (when a form element such as a text box is in focus).</sci:help>
						<sci:legalval selected="true">hover</sci:legalval>
						<sci:legalval>click</sci:legalval>
						<sci:legalval>focus</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Text Box (Semantic UI)</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>ReportSubProtocolNode</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>790</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{9F37F5CB-5B08-4AE7-BAC5-FA0394004CD8}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>666 -4045</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Text Box (Semantic UI).</sci:value>
						<sci:value>&lt;p&gt;A text box is an area where you can enter and edit content.  A text box can be a simple, single-line text box, a multiple-line text box, or a password field.&lt;/p&gt;
&lt;p&gt;Validation and typeahead parameters are available.&lt;/p&gt;</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
						<sci:value>None</sci:value>
						<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>16.1.0.1140</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval>Owner Access Only</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>bondadx2</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Sat Jul 23 17:59:02 2016</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>129</sci:value>
					</sci:arg>
					<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Processing Order</sci:help>
						<sci:value>DrainTopDown</sci:value>
					</sci:arg>
					<sci:arg name="OriginalPackage" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>OriginalPackage</sci:help>
						<sci:value>scitegic/coreutils</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Semantic UI\Forms\Functional Elements\Text Box (Semantic UI)</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol/>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="Delimited Text Text Reader" version="2">
					<sci:arg name="DelimitedText" type="TextType" required="true" visibility="visible" multi="false">
						<sci:help>The contents of a delimited text file. This is a way to include a delimited text file in a protocol without sending an additional file.</sci:help>
						<sci:value>Code,Month
,
1,January
2,February
3,March
4,April
5,May</sci:value>
					</sci:arg>
					<sci:arg name="Delimiter" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>Specifies the character that separates fields. Options include:

 - FigureOut: Determines the type automatically.
 - Tab: For tab-delimited fields.
 - Space: For space-delimited fields.
 - Comma: For comma-delimited fields.
 - Colon: For colon-delimited fields.
 - Semicolon: For semicolon-delimited fields.</sci:help>
						<sci:member>MultipleValueDelimiter</sci:member>
						<sci:legalval>FigureOut</sci:legalval>
						<sci:legalval>Tab</sci:legalval>
						<sci:legalval>Space</sci:legalval>
						<sci:legalval selected="true">Comma</sci:legalval>
						<sci:legalval>Colon</sci:legalval>
						<sci:legalval>Semicolon</sci:legalval>
					</sci:arg>
					<sci:arg name="MultipleValueDelimiter" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>The delimiter to use between multiple values contained in a single property. If the multiple value delimited exists in any of the input strings in any property, they are separated into an array of values. If &quot;None&quot;, 
values are never separated into multiple values.</sci:help>
						<sci:legalval selected="true">None</sci:legalval>
						<sci:legalval>Semicolon</sci:legalval>
						<sci:legalval>Colon</sci:legalval>
						<sci:legalval>Comma</sci:legalval>
						<sci:legalval>Linefeed</sci:legalval>
					</sci:arg>
					<sci:arg name="HasColumnNames" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>When True, property names are taken from the first line of data in the file. When False, properties are named Column1,Column2, etc.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{7B3502D7-FA57-4EB5-838B-FE6AB0BF0E69}" uimpl="true">
						<sci:help>Lists the set of temporary files which will be converted by the network to true temporary file names</sci:help>
						<sci:value>temp</sci:value>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval>ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Form" type="ProtocolType" required="false" visibility="nevershow" multi="false">
						<sci:help>The path to a protocol that will render an HTML user interface for this protocol.  This optional parameter is used by Webport to provide a custom user interface for a protocol.</sci:help>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>EmptyProtocol</sci:value>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Fri Jan 25 11:39:03 2013</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Delimited Text Text Reader</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>DOCUMENTNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{B39C2E91-1649-4B04-8504-F21CE6943C6B}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>330 -4395</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Read Delimited Text kept with this component as a parameter value</sci:value>
						<sci:value>This can be useful when you wish to send someone an example with the data contained with the protocol in a readable format. Just open the delimited file with a text viewer such as Notepad, copy the contents, and paste it into the &lt;I&gt;DelimitedText&lt;/I&gt; parameter.

Note that this component will be deprecated in the future -- you should use the right-click context &lt;I&gt;Initialize Using&lt;/I&gt; option &lt;I&gt;Provided Content&lt;/I&gt; on the &lt;I&gt;Source&lt;/I&gt; parameter of the &lt;I&gt;Delimited Text Reader&lt;/I&gt;.</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>9.0.1.13</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Options</sci:help>
					</sci:arg>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>74</sci:value>
					</sci:arg>
					<sci:arg name="OriginalComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>OriginalComponentGUID</sci:help>
						<sci:value>{B39C2E91-1649-4B04-8504-F21CE6943C6B}</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Data Access and Manipulation\Utilities\Debug\Delimited Text Text Reader</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol/>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="List Box (Semantic UI)" version="2">
					<sci:arg name="Parameter to Map" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;The name of a parameter on the target protocol that this component&apos;s value should be mapped to.&lt;/p&gt;</sci:help>
						<sci:value>card-expire-month</sci:value>
					</sci:arg>
					<sci:arg name="Text" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;The text, or property containing the text, to be shown as an entry in the list box.&lt;/p&gt;</sci:help>
						<sci:member>Number of Displayed Rows</sci:member>
						<sci:member>Allow Multiple Selections</sci:member>
						<sci:member>Selected</sci:member>
						<sci:member>Value</sci:member>
						<sci:value>Month</sci:value>
					</sci:arg>
					<sci:arg name="Value" type="ExpressionType" required="false" visibility="visible" multi="false">
						<sci:help>The value that will be submitted for each item in the list. If not specified, the value of &lt;i&gt;Text&lt;/i&gt; will be submitted.

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;

&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
Due to inconsistent input value attribute handling by various browsers, it is recommended that the Value parameter not include leading or trailing whitespace. Depending on the browser, this whitespace may be omitted when the form is submitted. A possible workaround is to flank the entire value with a special character that can then be stripped when the input value is processed in the work protocol.
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
</sci:help>
						<sci:value>Code</sci:value>
					</sci:arg>
					<sci:arg name="Allow Multiple Selections" type="BoolType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;If true, multiple selections can be made in the list box.  Otherwise, only one entry can be selected.&lt;/p&gt;</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Selected" type="ExpressionType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;An optional PilotScript expression evaluating to True or False that determines if the current entry is pre-selected in the list box. For example, if the Text parameter is set to a property &apos;MyPet&apos; and you want to have a value &apos;Cat&apos; selected, then do the following:&lt;/p&gt;

&lt;code&gt;MyPet eq &apos;Cat&apos;;&lt;/code&gt;

&lt;p&gt;If you want the last item in a single selection list box to be pre-selected, simply enter True.&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;

&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
</sci:help>
					</sci:arg>
					<sci:arg name="Appearance" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:member>Enabled</sci:member>
						<sci:member>Searchable</sci:member>
						<sci:member>Width</sci:member>
						<sci:member>Label</sci:member>
					</sci:arg>
					<sci:arg name="Enabled" type="BoolType" required="true" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Searchable" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>Make the list box searchable?</sci:help>
						<sci:member>Full Text Search</sci:member>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Width" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>Width of the list box including its label (if present), in columns. Full screen is 16 columns. Leave blank to auto-size up to the widest available space.</sci:help>
						<sci:legalval/>
						<sci:legalval>one wide</sci:legalval>
						<sci:legalval>two wide</sci:legalval>
						<sci:legalval selected="true">three wide</sci:legalval>
						<sci:legalval>four wide</sci:legalval>
						<sci:legalval>five wide</sci:legalval>
						<sci:legalval>six wide</sci:legalval>
						<sci:legalval>seven wide</sci:legalval>
						<sci:legalval>eight wide</sci:legalval>
						<sci:legalval>nine wide</sci:legalval>
						<sci:legalval>ten wide</sci:legalval>
						<sci:legalval>eleven wide</sci:legalval>
						<sci:legalval>twelve wide</sci:legalval>
						<sci:legalval>thirteen wide</sci:legalval>
						<sci:legalval>fourteen wide</sci:legalval>
						<sci:legalval>fifteen wide</sci:legalval>
						<sci:legalval>sixteen wide</sci:legalval>
					</sci:arg>
					<sci:arg name="Label" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:member>Label Location</sci:member>
						<sci:value>Expiration</sci:value>
					</sci:arg>
					<sci:arg name="Label Location" type="StringType" required="true" visibility="visible" multi="false">
						<sci:enabledscript>SetDisabledDetails(&apos;To enable &apos;.ParameterName().&apos;, set a Label.&apos;);
Parameter(&apos;Label&apos;) ne &apos;&apos;;</sci:enabledscript>
						<sci:legalval selected="true">Above Field</sci:legalval>
						<sci:legalval>Left of Field</sci:legalval>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
						<sci:value>_s,  _ss, multiple_, guid</sci:value>
					</sci:arg>
					<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
						<sci:member>RunToCompletion Categorize Using</sci:member>
						<sci:legalval selected="true">False</sci:legalval>
						<sci:legalval>True - For Each Data Record</sci:legalval>
						<sci:legalval>True - For Each Category</sci:legalval>
					</sci:arg>
					<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
						<sci:member>Parallel Processing Options Batch Size</sci:member>
						<sci:member>Parallel Processing Options Server</sci:member>
						<sci:member>Parallel Processing Options Preserve Order</sci:member>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
						<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
#rtcForEachCategory := (Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
elsif (#rtcForEachCategory) then
	SetDisabledDetails(&quot;This parameter is not applicable when &apos;RunToCompletion&apos; is set to &apos;True - For Each Category&apos;&quot;);
end if;
#parallel and not #rtcForEachCategory;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
						<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
						<sci:member>Parallel Processing Options Server Processes</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
						<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Run subprotocol on grid engine if available.</sci:help>
						<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
						<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Constant GUID" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Override an automatically set GUID inside the component with this value.&lt;/p&gt; &lt;p&gt;If set, HTML element(s) will have their IDs set using this value instead of a randomly generated one.&lt;/p&gt;&lt;p&gt;Spaces or special characters are not allowed, only alphanumeric. The ID is case-sensitive.&lt;/p&gt;
</sci:help>
						<sci:validscript>SetInvalidDetails(ParameterName() . &apos; must be alphanumeric. Spaces or special characters are not allowed.&apos;);
numValues(rMatch(Parameter(), &apos;[^a-zA-Z0-9]+&apos;, &apos;ig&apos;)) == 0;</sci:validscript>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:value>ComponentReturnsPass</sci:value>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval>ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="Popup" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
							<sci:propval name="SCI_InitializeUsingOrigType" ishidden="true">GroupType</sci:propval>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup displays additional information in a temporary message.</sci:help>
						<sci:member>Popup Content</sci:member>
						<sci:member>Basic Popup</sci:member>
						<sci:member>Popup Appearance</sci:member>
						<sci:member>Behavior</sci:member>
					</sci:arg>
					<sci:arg name="Popup Content" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup Content</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>Popup content. (HTML is allowed).</sci:help>
					</sci:arg>
					<sci:arg name="Basic Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Basic Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can provide basic or extended formatting.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Popup Appearance" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup Appearance</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:member>Popup Width</sci:member>
						<sci:member>Fluid Popup</sci:member>
						<sci:member>Popup Size</sci:member>
						<sci:member>Flowing Popup</sci:member>
						<sci:member>Inverted Popup</sci:member>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable &apos;.ParameterName().&apos;, set Basic Popup to False&apos;);
not Parameter(&apos;Basic Popup&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Popup Width" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup Width</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can be wide or very wide to allow for longer content.</sci:help>
						<sci:legalval/>
						<sci:legalval>wide</sci:legalval>
						<sci:legalval>very wide</sci:legalval>
					</sci:arg>
					<sci:arg name="Fluid Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Fluid Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A fluid popup will take up the entire width of its  container.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Popup Size" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup Size</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can vary in font size.</sci:help>
						<sci:legalval/>
						<sci:legalval>mini</sci:legalval>
						<sci:legalval>tiny</sci:legalval>
						<sci:legalval>small</sci:legalval>
						<sci:legalval>large</sci:legalval>
						<sci:legalval>huge</sci:legalval>
					</sci:arg>
					<sci:arg name="Flowing Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Flowing Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can have no maximum width and continue to flow to fit its content.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Inverted Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Inverted Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can have its colors inverted.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Behavior" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Behavior</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:member>Show On</sci:member>
					</sci:arg>
					<sci:arg name="Show On" type="StringType" required="true" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Show On</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>When to show the popup. Hover (mouseover), click, focus (when a form element such as a text box is in focus).</sci:help>
						<sci:legalval selected="true">hover</sci:legalval>
						<sci:legalval>click</sci:legalval>
						<sci:legalval>focus</sci:legalval>
					</sci:arg>
					<sci:arg name="Full Text Search" type="StringType" required="true" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Full Text Search</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>&lt;p&gt;Specifying &quot;exact&quot; will force the exact search to be matched somewhere in the string, even in the middle of the string: e.g. typing &lt;code&gt;bar&lt;/code&gt; will match &lt;code&gt;barge&lt;/code&gt; and &lt;code&gt;mybarge&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Specifying &quot;true&quot; will use a fuzzy full text search anywhere in the string: e.g. typing &lt;code&gt;bar&lt;/code&gt; will match &lt;code&gt;barge&lt;/code&gt; and &lt;code&gt;mybarge&lt;/code&gt; and &lt;code&gt;bear&lt;/code&gt; and &lt;code&gt;mybear&lt;/code&gt; and &lt;code&gt;myboar&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Specifying &quot;false&quot; will force an exact search only starting at the beginning of the string: e.g. typing &lt;code&gt;bar&lt;/code&gt; will match &lt;code&gt;barge&lt;/code&gt; but not &lt;code&gt;mybarge&lt;/code&gt; and not &lt;code&gt;boar&lt;/code&gt;.&lt;/p&gt;</sci:help>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable &apos;.ParameterName().&apos;, set &quot;Searchable&quot; to True&apos;);
Parameter(&apos;Searchable&apos;);</sci:enabledscript>
						<sci:legalval selected="true">exact</sci:legalval>
						<sci:legalval>true</sci:legalval>
						<sci:legalval>false</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Number of Displayed Rows" type="LongType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;The number of rows to show in the list box.  If the number of items exceeds the number of rows, then the list box will contain a scroll bar.&lt;/p&gt;

&lt;p&gt;To create a drop-down list, set the number of rows to 1.&lt;/p&gt;</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>List Box (Semantic UI)</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>ReportSubProtocolNode</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>790</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{63F39E52-E567-45F4-84C9-E412817F26EF}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>666 -4395</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>List Box (Semantic UI).</sci:value>
						<sci:value>Used to select one or more items from a list, to be passed to the work protocol. Single or multi-select can be set. If multiple values are selected, they are passed as an array.

This component accepts both regular data records and array data. If multiple records with array data are received, a list box for each data record will be created.

You can set the number of rows to be displayed. If the number of rows is less than the number of values to be displayed, then a vertical scroll bar is automatically added. To create a drop-down list, set the number of rows to be displayed to 1.

</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
						<sci:value>None</sci:value>
						<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>16.1.0.1140</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval>Owner Access Only</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>bondadx2</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Sun Dec 17 13:41:30 2017</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>131</sci:value>
					</sci:arg>
					<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Processing Order</sci:help>
						<sci:value>DrainTopDown</sci:value>
					</sci:arg>
					<sci:arg name="OriginalPackage" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>OriginalPackage</sci:help>
						<sci:value>scitegic/coreutils</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Modified</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Semantic UI\Forms\Functional Elements\List Box (Semantic UI)</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol/>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="Text Box (Semantic UI)" version="2">
					<sci:arg name="Parameter to Map" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;The name of a parameter on the target protocol that this component&apos;s value should be mapped to.&lt;/p&gt;</sci:help>
						<sci:member>Default Value</sci:member>
						<sci:member>Validation Options</sci:member>
						<sci:value>card-expire-year</sci:value>
					</sci:arg>
					<sci:arg name="Default Value" type="ExpressionType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:help>&lt;p&gt;The initial value contained in the text box.  To have a blank text box, enter &apos;&apos; (two single quotes).&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Tis parameter is ExpressionType. You can enter a value in quotes, a global variable with  the @ notation, or a property name on the incoming data stream.&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;
&lt;li&gt;
Due to inconsistent input value attribute handling by various browsers, it is recommended that the Default Value parameter not include leading or trailing whitespace. Depending on the browser, this whitespace may be omitted when the form is submitted. A possible workaround is to flank the entire value with a special character that can then be stripped when the input value is processed in the work protocol.
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Validation Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:member>Advanced</sci:member>
						<sci:member>Basic Rules</sci:member>
					</sci:arg>
					<sci:arg name="Basic Rules" type="TextType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>&lt;p&gt;(Optional) basic validation rules, e.g. not empty, numbers only, etc.
&lt;/p&gt;
&lt;p&gt;For available rules, refer to &lt;a href=&quot;javascript:DoLink(&apos;http://jqueryvalidation.org/documentation&apos;)&quot;&gt;http://jqueryvalidation.org/documentation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;A list of all recognized basic rules (several rules may be combined):&lt;/p&gt;
&lt;br&gt;	required: true,
&lt;br&gt;	minlength: 3,
&lt;br&gt;	maxlength: 5,
&lt;br&gt;	rangelength: [2, 6],
&lt;br&gt;	min: 0.5,
&lt;br&gt;	max: 10.1,
&lt;br&gt;	range: [-5, 25.6],
&lt;br&gt;	email: true,
&lt;br&gt;	url: true,
&lt;br&gt;	date: true,
&lt;br&gt;	dateISO: true,
&lt;br&gt;	number: true,
&lt;br&gt;	digits: true,&lt;br&gt;
</sci:help>
						<sci:value>/* (Optional) basic validation rules, e.g. not empty, numbers only, etc.

	For available rules, refer to http://jqueryvalidation.org/documentation

	A list of all recognized basic rules (several rules may be combined):

	required: true,
	minlength: 3,
	maxlength: 5,
	rangelength: [2, 6],
	min: 0.5,
	max: 10.1,
	range: [-5, 25.6],
	email: true,
	url: true,
	date: true,
	dateISO: true,
	number: true,
	digits: true,

	There should be no comma on the last rule.
*/
digits: true,
rangelength: [4,4]</sci:value>
					</sci:arg>
					<sci:arg name="Advanced" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:member>Validator Protocol</sci:member>
					</sci:arg>
					<sci:arg name="Validator Protocol" type="ProtocolLinkType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>&lt;p&gt;(Optional) A protocol to perform input value validation.&lt;/p&gt;

&lt;p&gt;Make a new protocol using the template protocol (Labspace/Validator Protocol Template) and modify it to return True if the validation is successful, and a double-quote-enclosed string (a message) if the validation is unsuccessful.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Appearance" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:help>Appearance</sci:help>
						<sci:member>Required</sci:member>
						<sci:member>Enabled</sci:member>
						<sci:member>Width</sci:member>
						<sci:member>Placeholder</sci:member>
						<sci:member>Label</sci:member>
						<sci:member>Text Box Options</sci:member>
						<sci:member>Typeahead Options</sci:member>
						<sci:member>Autocomplete</sci:member>
					</sci:arg>
					<sci:arg name="Required" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>Required?</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Enabled" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>State</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>Enabled?</sci:help>
						<sci:legalvalscript>if (Parameter(&apos;Required&apos;)) then
		resize(lvals, 1);
	    lvals[1] := True;
	else
		resize(lvals, 2);
	    lvals[1] := True; lvals[2] := False;
	end if;
	SetLegalValues(lvals);</sci:legalvalscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Width" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>Width of the text box including its label (if present), in columns. Full screen is 16 columns. Leave blank to auto-size up to the widest available space.</sci:help>
						<sci:legalval/>
						<sci:legalval>one wide</sci:legalval>
						<sci:legalval selected="true">two wide</sci:legalval>
						<sci:legalval>three wide</sci:legalval>
						<sci:legalval>four wide</sci:legalval>
						<sci:legalval>five wide</sci:legalval>
						<sci:legalval>six wide</sci:legalval>
						<sci:legalval>seven wide</sci:legalval>
						<sci:legalval>eight wide</sci:legalval>
						<sci:legalval>nine wide</sci:legalval>
						<sci:legalval>ten wide</sci:legalval>
						<sci:legalval>eleven wide</sci:legalval>
						<sci:legalval>twelve wide</sci:legalval>
						<sci:legalval>thirteen wide</sci:legalval>
						<sci:legalval>fourteen wide</sci:legalval>
						<sci:legalval>fifteen wide</sci:legalval>
						<sci:legalval>sixteen wide</sci:legalval>
					</sci:arg>
					<sci:arg name="Placeholder" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>Placeholder</sci:help>
						<sci:value>Year</sci:value>
					</sci:arg>
					<sci:arg name="Label" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>Label</sci:help>
						<sci:member>Label Location</sci:member>
						<sci:validscript>SetInvalidDetails(ParameterName() . &apos; must be set when the field is set to Required.&apos;);
(Parameter() ne &apos;&apos; and Parameter(&apos;Required&apos;) ) or not Parameter(&apos;Required&apos;)</sci:validscript>
						<sci:value>&amp;nbsp;</sci:value>
					</sci:arg>
					<sci:arg name="Label Location" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>Location</sci:help>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable &apos;.ParameterName().&apos;, set a Label.&apos;);
Parameter(&apos;Label&apos;) ne &apos;&apos;;</sci:enabledscript>
						<sci:legalval selected="true">Above Field</sci:legalval>
						<sci:legalval>Left of Field</sci:legalval>
					</sci:arg>
					<sci:arg name="Text Box Options" type="GroupType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;Options to control the text box.&lt;/p&gt;</sci:help>
						<sci:member>Number of Lines</sci:member>
						<sci:member>Wrap Multiple Lines</sci:member>
						<sci:member>Is Password</sci:member>
						<sci:member>Is Array</sci:member>
						<sci:member>Array Value Display</sci:member>
					</sci:arg>
					<sci:arg name="Number of Lines" type="LongType" required="true" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;The number of lines of text to display.&lt;/p&gt;</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="Wrap Multiple Lines" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;If &lt;i&gt;Number Of Lines&lt;/i&gt; is greater than 1, this parameter determines whether long lines are wrapped.&lt;/p&gt;</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Is Password" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;If true, the text box will have its content masked with the default browser password character so that it is not visible.&lt;/p&gt;</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Is Array" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Determines whether data will be displayed and submitted as array data. If set to &quot;True&quot;, then &lt;em&gt;Array Value Display&lt;/em&gt; determines the character used to separate array values.&lt;/p&gt;

&lt;p&gt;With a value of &quot;Based on Input Data&quot;, the data type of the &lt;em&gt;Default Value&lt;/em&gt; will be examined. If no &lt;em&gt;Default Value&lt;/em&gt; is provided, then a value of &quot;False&quot; is assumed.&lt;/p&gt;
</sci:help>
						<sci:legalval selected="true">Based on Input Data</sci:legalval>
						<sci:legalval>True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Array Value Display" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Determines the array value separator if data is to be displayed and submitted in array format (as determined by the value of &lt;em&gt;Is Array&lt;/em&gt;.)


</sci:help>
						<sci:enabledscript>enabled := Parameter(&quot;Is Array&quot;) NE &apos;False&apos;;
enabled;</sci:enabledscript>
						<sci:legalval selected="true">Separate by Newlines</sci:legalval>
						<sci:legalval>Separate by Commas</sci:legalval>
					</sci:arg>
					<sci:arg name="Typeahead Options" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>&lt;p&gt;Enable contextual suggestions in the text box. Both local and remote data can be used for suggestions.&lt;/p&gt;
&lt;a href=&quot;javascript:DoLink(&apos;http://twitter.github.io/typeahead.js/examples&apos;)&quot;&gt;Twitter Typeahead&lt;/a&gt;</sci:help>
						<sci:member>Local</sci:member>
						<sci:member>Prefetch</sci:member>
						<sci:member>Remote</sci:member>
						<sci:member>Limit</sci:member>
					</sci:arg>
					<sci:arg name="Local" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;(Optional parameter) Provide a JSON-formatted array like this:&lt;/p&gt;
[&quot;timtrueman&quot;, &quot;JakeHarding&quot;, &quot;vskarich&quot;]</sci:help>
					</sci:arg>
					<sci:arg name="Prefetch" type="ProtocolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>&lt;p&gt;(Optional parameter) Provide a protocol which can generate a list of values to pre-populate this text box when the web page loads. This protocol must produce a text file containing a JSON-encoded array:&lt;/p&gt;
&lt;code&gt;[&quot;BAS-0000001&quot;, &quot;BAS-00000002&quot;]&lt;/code&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Remote" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;(Optional parameter) As the user types into the text box, with each change fetch an updated list of suggestions. Provide an HTTP or HTTPS URL to a web service which returns a JSON-formatted array like this:&lt;/p&gt;
[&quot;timtrueman&quot;, &quot;JakeHarding&quot;, &quot;vskarich&quot;]
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; User input in the text box can be sent to the remote service as a URL parameter %QUERY, so do include %QUERY in your URL.&lt;/p&gt;

&lt;code&gt;https://twitter.com/accounts?q=%QUERY&lt;/code&gt;

&lt;p&gt;Note: to use a Pipeline Pilot protocol that will process the text box value typed in by the user, enter the url below with the protocol GUID and the %QUERY in it. You can omit servername and port:&lt;/p&gt;&lt;p&gt;&lt;code&gt;/auth/launchjob?_compat=1&amp;_protocol={123456}&amp;myparameter=%QUERY&lt;/code&gt;&lt;/p&gt;(do not change the word %QUERY). To help you, we created an example: &lt;code&gt;Protocols\Examples\Semantic UI\Form\Auto-suggest in a Text Box\Search Compounds&lt;/code&gt;.
&lt;p&gt;When using remote typeahead with a Pipeline Pilot protocol, the user must already logged in to Pipeline Pilot via a web client, otherwise typeahead won&apos;t work. If your test isn&apos;t working check that you already logged into webport in your web browser.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Limit" type="LongType" required="false" visibility="visible" multi="false">
						<sci:help>Limit</sci:help>
						<sci:value>10</sci:value>
					</sci:arg>
					<sci:arg name="Autocomplete" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>Enable automatic browser autocomplete on this webform input field?

Autocomplete shows a history of user inputs in the text box when anything is being typed in the box.

This option is overridden if the text box has typeahead enabled. Typeahead displays its hints instead of autocomplete.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
						<sci:value>class_, guid, a1, a2, a3, TypeaheadClass</sci:value>
					</sci:arg>
					<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
						<sci:member>RunToCompletion Categorize Using</sci:member>
						<sci:legalval selected="true">False</sci:legalval>
						<sci:legalval>True - For Each Data Record</sci:legalval>
						<sci:legalval>True - For Each Category</sci:legalval>
					</sci:arg>
					<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
						<sci:member>Parallel Processing Options Batch Size</sci:member>
						<sci:member>Parallel Processing Options Server</sci:member>
						<sci:member>Parallel Processing Options Preserve Order</sci:member>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
						<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
#rtcForEachCategory := (Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
elsif (#rtcForEachCategory) then
	SetDisabledDetails(&quot;This parameter is not applicable when &apos;RunToCompletion&apos; is set to &apos;True - For Each Category&apos;&quot;);
end if;
#parallel and not #rtcForEachCategory;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
						<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
						<sci:member>Parallel Processing Options Server Processes</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
						<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Run subprotocol on grid engine if available.</sci:help>
						<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
						<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Constant GUID" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Override an automatically set GUID inside the component with this value.&lt;/p&gt; &lt;p&gt;If set, HTML element(s) will have their IDs set using this value instead of a randomly generated one.&lt;/p&gt;&lt;p&gt;Spaces or special characters are not allowed, only alphanumeric. The ID is case-sensitive.&lt;/p&gt;
</sci:help>
						<sci:validscript>SetInvalidDetails(ParameterName() . &apos; must be alphanumeric. Spaces or special characters are not allowed.&apos;);
numValues(rMatch(Parameter(), &apos;[^a-zA-Z0-9]+&apos;, &apos;ig&apos;)) == 0;</sci:validscript>
						<sci:legalval/>
						<sci:legalval>$(Constant GUID)</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval>ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="Popup" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
							<sci:propval name="SCI_InitializeUsingOrigType" ishidden="true">GroupType</sci:propval>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup displays additional information in a temporary message.</sci:help>
						<sci:member>Popup Content</sci:member>
						<sci:member>Basic Popup</sci:member>
						<sci:member>Popup Appearance</sci:member>
						<sci:member>Behavior</sci:member>
					</sci:arg>
					<sci:arg name="Popup Content" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup Content</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>Popup content. (HTML is allowed).</sci:help>
					</sci:arg>
					<sci:arg name="Basic Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Basic Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can provide basic or extended formatting.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Popup Appearance" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup Appearance</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>Appearance</sci:help>
						<sci:member>Popup Width</sci:member>
						<sci:member>Fluid Popup</sci:member>
						<sci:member>Popup Size</sci:member>
						<sci:member>Flowing Popup</sci:member>
						<sci:member>Inverted Popup</sci:member>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable &apos;.ParameterName().&apos;, set Basic Popup to False&apos;);
not Parameter(&apos;Basic Popup&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Popup Width" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup Width</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can be wide or very wide to allow for longer content.</sci:help>
						<sci:legalval/>
						<sci:legalval>wide</sci:legalval>
						<sci:legalval>very wide</sci:legalval>
					</sci:arg>
					<sci:arg name="Fluid Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Fluid Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A fluid popup will take up the entire width of its  container.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Popup Size" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup Size</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can vary in font size.</sci:help>
						<sci:legalval/>
						<sci:legalval>mini</sci:legalval>
						<sci:legalval>tiny</sci:legalval>
						<sci:legalval>small</sci:legalval>
						<sci:legalval>large</sci:legalval>
						<sci:legalval>huge</sci:legalval>
					</sci:arg>
					<sci:arg name="Flowing Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Flowing Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can have no maximum width and continue to flow to fit its content.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Inverted Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Inverted Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can have its colors inverted.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Behavior" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Behavior</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>Behavior</sci:help>
						<sci:member>Show On</sci:member>
					</sci:arg>
					<sci:arg name="Show On" type="StringType" required="true" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Show On</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>When to show the popup. Hover (mouseover), click, focus (when a form element such as a text box is in focus).</sci:help>
						<sci:legalval selected="true">hover</sci:legalval>
						<sci:legalval>click</sci:legalval>
						<sci:legalval>focus</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Text Box (Semantic UI)</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>ReportSubProtocolNode</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>790</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{9F37F5CB-5B08-4AE7-BAC5-FA0394004CD8}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>666 -4695</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Text Box (Semantic UI).</sci:value>
						<sci:value>&lt;p&gt;A text box is an area where you can enter and edit content.  A text box can be a simple, single-line text box, a multiple-line text box, or a password field.&lt;/p&gt;
&lt;p&gt;Validation and typeahead parameters are available.&lt;/p&gt;</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
						<sci:value>None</sci:value>
						<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>16.1.0.1140</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval>Owner Access Only</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>bondadx2</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Sat Jul 23 17:59:02 2016</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>132</sci:value>
					</sci:arg>
					<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Processing Order</sci:help>
						<sci:value>DrainTopDown</sci:value>
					</sci:arg>
					<sci:arg name="OriginalPackage" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>OriginalPackage</sci:help>
						<sci:value>scitegic/coreutils</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Semantic UI\Forms\Functional Elements\Text Box (Semantic UI)</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol/>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="Form Section Header (Semantic UI)" version="2">
					<sci:arg name="Header Text" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>The text of the form section header, e.g. Shipping Infomation.</sci:help>
						<sci:value>Receipt</sci:value>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
						<sci:member>RunToCompletion Categorize Using</sci:member>
						<sci:legalval selected="true">False</sci:legalval>
						<sci:legalval>True - For Each Data Record</sci:legalval>
						<sci:legalval>True - For Each Category</sci:legalval>
					</sci:arg>
					<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
						<sci:member>Parallel Processing Options Batch Size</sci:member>
						<sci:member>Parallel Processing Options Server</sci:member>
						<sci:member>Parallel Processing Options Preserve Order</sci:member>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
						<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
#rtcForEachCategory := (Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
elsif (#rtcForEachCategory) then
	SetDisabledDetails(&quot;This parameter is not applicable when &apos;RunToCompletion&apos; is set to &apos;True - For Each Category&apos;&quot;);
end if;
#parallel and not #rtcForEachCategory;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="false">
						<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
						<sci:member>Parallel Processing Options Server Processes</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
						<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Run subprotocol on grid engine if available.</sci:help>
						<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid Grid Options</sci:member>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Grid Options" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Use this to specify grid engine specific command line parameters to the job submission command. Leave blank to use defaults.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval>ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Form Section Header (Semantic UI)</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>ReportSubProtocolNode</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>790</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{8C0474A2-41D8-4027-ACA4-FFA84714204F}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>1002 -5120</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Form Section Header (Semantic UI).</sci:value>
						<sci:value>&lt;p&gt;A header for a form section.&lt;/p&gt;</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
						<sci:value>None</sci:value>
						<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>9.2.0.484</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval>Owner Access Only</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>bondadx2</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Fri Apr 22 16:48:19 2016</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>111</sci:value>
					</sci:arg>
					<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Processing Order</sci:help>
						<sci:value>DrainTopDown</sci:value>
					</sci:arg>
					<sci:arg name="OriginalPackage" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>OriginalPackage</sci:help>
						<sci:value>scitegic/coreutils</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Modified</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Semantic UI\Forms\Formatting Elements\Form Section Header (Semantic UI)</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol/>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="Delimited Text Text Reader" version="2">
					<sci:arg name="DelimitedText" type="TextType" required="true" visibility="visible" multi="false">
						<sci:help>The contents of a delimited text file. This is a way to include a delimited text file in a protocol without sending an additional file.</sci:help>
						<sci:value>Contact
Jenny Hess
Elliot Fu
Christian</sci:value>
					</sci:arg>
					<sci:arg name="Delimiter" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>Specifies the character that separates fields. Options include:

 - FigureOut: Determines the type automatically.
 - Tab: For tab-delimited fields.
 - Space: For space-delimited fields.
 - Comma: For comma-delimited fields.
 - Colon: For colon-delimited fields.
 - Semicolon: For semicolon-delimited fields.</sci:help>
						<sci:member>MultipleValueDelimiter</sci:member>
						<sci:legalval>FigureOut</sci:legalval>
						<sci:legalval>Tab</sci:legalval>
						<sci:legalval>Space</sci:legalval>
						<sci:legalval selected="true">Comma</sci:legalval>
						<sci:legalval>Colon</sci:legalval>
						<sci:legalval>Semicolon</sci:legalval>
					</sci:arg>
					<sci:arg name="MultipleValueDelimiter" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>The delimiter to use between multiple values contained in a single property. If the multiple value delimited exists in any of the input strings in any property, they are separated into an array of values. If &quot;None&quot;, 
values are never separated into multiple values.</sci:help>
						<sci:legalval selected="true">None</sci:legalval>
						<sci:legalval>Semicolon</sci:legalval>
						<sci:legalval>Colon</sci:legalval>
						<sci:legalval>Comma</sci:legalval>
						<sci:legalval>Linefeed</sci:legalval>
					</sci:arg>
					<sci:arg name="HasColumnNames" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>When True, property names are taken from the first line of data in the file. When False, properties are named Column1,Column2, etc.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{7B3502D7-FA57-4EB5-838B-FE6AB0BF0E69}" uimpl="true">
						<sci:help>Lists the set of temporary files which will be converted by the network to true temporary file names</sci:help>
						<sci:value>temp</sci:value>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval>ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Form" type="ProtocolType" required="false" visibility="nevershow" multi="false">
						<sci:help>The path to a protocol that will render an HTML user interface for this protocol.  This optional parameter is used by Webport to provide a custom user interface for a protocol.</sci:help>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>EmptyProtocol</sci:value>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Fri Jan 25 11:39:03 2013</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Delimited Text Text Reader</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>DOCUMENTNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{B39C2E91-1649-4B04-8504-F21CE6943C6B}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>714 -5495</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Read Delimited Text kept with this component as a parameter value</sci:value>
						<sci:value>This can be useful when you wish to send someone an example with the data contained with the protocol in a readable format. Just open the delimited file with a text viewer such as Notepad, copy the contents, and paste it into the &lt;I&gt;DelimitedText&lt;/I&gt; parameter.

Note that this component will be deprecated in the future -- you should use the right-click context &lt;I&gt;Initialize Using&lt;/I&gt; option &lt;I&gt;Provided Content&lt;/I&gt; on the &lt;I&gt;Source&lt;/I&gt; parameter of the &lt;I&gt;Delimited Text Reader&lt;/I&gt;.</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>9.0.1.13</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Options</sci:help>
					</sci:arg>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>78</sci:value>
					</sci:arg>
					<sci:arg name="OriginalComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>OriginalComponentGUID</sci:help>
						<sci:value>{B39C2E91-1649-4B04-8504-F21CE6943C6B}</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Data Access and Manipulation\Utilities\Debug\Delimited Text Text Reader</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol/>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="List Box (Semantic UI)" version="2">
					<sci:arg name="Parameter to Map" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;The name of a parameter on the target protocol that this component&apos;s value should be mapped to.&lt;/p&gt;</sci:help>
						<sci:value>Contacts</sci:value>
					</sci:arg>
					<sci:arg name="Text" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;The text, or property containing the text, to be shown as an entry in the list box.&lt;/p&gt;</sci:help>
						<sci:member>Number of Displayed Rows</sci:member>
						<sci:member>Allow Multiple Selections</sci:member>
						<sci:member>Selected</sci:member>
						<sci:member>Value</sci:member>
						<sci:value>Contact</sci:value>
					</sci:arg>
					<sci:arg name="Value" type="ExpressionType" required="false" visibility="visible" multi="false">
						<sci:help>The value that will be submitted for each item in the list. If not specified, the value of &lt;i&gt;Text&lt;/i&gt; will be submitted.

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;

&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
Due to inconsistent input value attribute handling by various browsers, it is recommended that the Value parameter not include leading or trailing whitespace. Depending on the browser, this whitespace may be omitted when the form is submitted. A possible workaround is to flank the entire value with a special character that can then be stripped when the input value is processed in the work protocol.
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
</sci:help>
					</sci:arg>
					<sci:arg name="Allow Multiple Selections" type="BoolType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;If true, multiple selections can be made in the list box.  Otherwise, only one entry can be selected.&lt;/p&gt;</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Selected" type="ExpressionType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;An optional PilotScript expression evaluating to True or False that determines if the current entry is pre-selected in the list box. For example, if the Text parameter is set to a property &apos;MyPet&apos; and you want to have a value &apos;Cat&apos; selected, then do the following:&lt;/p&gt;

&lt;code&gt;MyPet eq &apos;Cat&apos;;&lt;/code&gt;

&lt;p&gt;If you want the last item in a single selection list box to be pre-selected, simply enter True.&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;

&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
</sci:help>
					</sci:arg>
					<sci:arg name="Appearance" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:member>Enabled</sci:member>
						<sci:member>Searchable</sci:member>
						<sci:member>Width</sci:member>
						<sci:member>Label</sci:member>
					</sci:arg>
					<sci:arg name="Enabled" type="BoolType" required="true" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Searchable" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>Make the list box searchable?</sci:help>
						<sci:member>Full Text Search</sci:member>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Width" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>Width of the list box including its label (if present), in columns. Full screen is 16 columns. Leave blank to auto-size up to the widest available space.</sci:help>
						<sci:legalval/>
						<sci:legalval>one wide</sci:legalval>
						<sci:legalval>two wide</sci:legalval>
						<sci:legalval>three wide</sci:legalval>
						<sci:legalval>four wide</sci:legalval>
						<sci:legalval>five wide</sci:legalval>
						<sci:legalval>six wide</sci:legalval>
						<sci:legalval>seven wide</sci:legalval>
						<sci:legalval>eight wide</sci:legalval>
						<sci:legalval>nine wide</sci:legalval>
						<sci:legalval>ten wide</sci:legalval>
						<sci:legalval>eleven wide</sci:legalval>
						<sci:legalval>twelve wide</sci:legalval>
						<sci:legalval>thirteen wide</sci:legalval>
						<sci:legalval>fourteen wide</sci:legalval>
						<sci:legalval>fifteen wide</sci:legalval>
						<sci:legalval>sixteen wide</sci:legalval>
					</sci:arg>
					<sci:arg name="Label" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:member>Label Location</sci:member>
						<sci:value>Send Receipt To:</sci:value>
					</sci:arg>
					<sci:arg name="Label Location" type="StringType" required="true" visibility="visible" multi="false">
						<sci:enabledscript>SetDisabledDetails(&apos;To enable &apos;.ParameterName().&apos;, set a Label.&apos;);
Parameter(&apos;Label&apos;) ne &apos;&apos;;</sci:enabledscript>
						<sci:legalval selected="true">Above Field</sci:legalval>
						<sci:legalval>Left of Field</sci:legalval>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
						<sci:value>_s,  _ss, multiple_, guid</sci:value>
					</sci:arg>
					<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
						<sci:member>RunToCompletion Categorize Using</sci:member>
						<sci:legalval selected="true">False</sci:legalval>
						<sci:legalval>True - For Each Data Record</sci:legalval>
						<sci:legalval>True - For Each Category</sci:legalval>
					</sci:arg>
					<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
						<sci:member>Parallel Processing Options Batch Size</sci:member>
						<sci:member>Parallel Processing Options Server</sci:member>
						<sci:member>Parallel Processing Options Preserve Order</sci:member>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
						<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
#rtcForEachCategory := (Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
elsif (#rtcForEachCategory) then
	SetDisabledDetails(&quot;This parameter is not applicable when &apos;RunToCompletion&apos; is set to &apos;True - For Each Category&apos;&quot;);
end if;
#parallel and not #rtcForEachCategory;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
						<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
						<sci:member>Parallel Processing Options Server Processes</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
						<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Run subprotocol on grid engine if available.</sci:help>
						<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
						<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Constant GUID" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Override an automatically set GUID inside the component with this value.&lt;/p&gt; &lt;p&gt;If set, HTML element(s) will have their IDs set using this value instead of a randomly generated one.&lt;/p&gt;&lt;p&gt;Spaces or special characters are not allowed, only alphanumeric. The ID is case-sensitive.&lt;/p&gt;
</sci:help>
						<sci:validscript>SetInvalidDetails(ParameterName() . &apos; must be alphanumeric. Spaces or special characters are not allowed.&apos;);
numValues(rMatch(Parameter(), &apos;[^a-zA-Z0-9]+&apos;, &apos;ig&apos;)) == 0;</sci:validscript>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:value>ComponentReturnsPass</sci:value>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval>ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="Popup" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
							<sci:propval name="SCI_InitializeUsingOrigType" ishidden="true">GroupType</sci:propval>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup displays additional information in a temporary message.</sci:help>
						<sci:member>Popup Content</sci:member>
						<sci:member>Basic Popup</sci:member>
						<sci:member>Popup Appearance</sci:member>
						<sci:member>Behavior</sci:member>
					</sci:arg>
					<sci:arg name="Popup Content" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup Content</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>Popup content. (HTML is allowed).</sci:help>
					</sci:arg>
					<sci:arg name="Basic Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Basic Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can provide basic or extended formatting.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Popup Appearance" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup Appearance</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:member>Popup Width</sci:member>
						<sci:member>Fluid Popup</sci:member>
						<sci:member>Popup Size</sci:member>
						<sci:member>Flowing Popup</sci:member>
						<sci:member>Inverted Popup</sci:member>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable &apos;.ParameterName().&apos;, set Basic Popup to False&apos;);
not Parameter(&apos;Basic Popup&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Popup Width" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup Width</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can be wide or very wide to allow for longer content.</sci:help>
						<sci:legalval/>
						<sci:legalval>wide</sci:legalval>
						<sci:legalval>very wide</sci:legalval>
					</sci:arg>
					<sci:arg name="Fluid Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Fluid Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A fluid popup will take up the entire width of its  container.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Popup Size" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup Size</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can vary in font size.</sci:help>
						<sci:legalval/>
						<sci:legalval>mini</sci:legalval>
						<sci:legalval>tiny</sci:legalval>
						<sci:legalval>small</sci:legalval>
						<sci:legalval>large</sci:legalval>
						<sci:legalval>huge</sci:legalval>
					</sci:arg>
					<sci:arg name="Flowing Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Flowing Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can have no maximum width and continue to flow to fit its content.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Inverted Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Inverted Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can have its colors inverted.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Behavior" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Behavior</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:member>Show On</sci:member>
					</sci:arg>
					<sci:arg name="Show On" type="StringType" required="true" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Show On</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>When to show the popup. Hover (mouseover), click, focus (when a form element such as a text box is in focus).</sci:help>
						<sci:legalval selected="true">hover</sci:legalval>
						<sci:legalval>click</sci:legalval>
						<sci:legalval>focus</sci:legalval>
					</sci:arg>
					<sci:arg name="Full Text Search" type="StringType" required="true" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Full Text Search</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>&lt;p&gt;Specifying &quot;exact&quot; will force the exact search to be matched somewhere in the string, even in the middle of the string: e.g. typing &lt;code&gt;bar&lt;/code&gt; will match &lt;code&gt;barge&lt;/code&gt; and &lt;code&gt;mybarge&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Specifying &quot;true&quot; will use a fuzzy full text search anywhere in the string: e.g. typing &lt;code&gt;bar&lt;/code&gt; will match &lt;code&gt;barge&lt;/code&gt; and &lt;code&gt;mybarge&lt;/code&gt; and &lt;code&gt;bear&lt;/code&gt; and &lt;code&gt;mybear&lt;/code&gt; and &lt;code&gt;myboar&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Specifying &quot;false&quot; will force an exact search only starting at the beginning of the string: e.g. typing &lt;code&gt;bar&lt;/code&gt; will match &lt;code&gt;barge&lt;/code&gt; but not &lt;code&gt;mybarge&lt;/code&gt; and not &lt;code&gt;boar&lt;/code&gt;.&lt;/p&gt;</sci:help>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable &apos;.ParameterName().&apos;, set &quot;Searchable&quot; to True&apos;);
Parameter(&apos;Searchable&apos;);</sci:enabledscript>
						<sci:legalval selected="true">exact</sci:legalval>
						<sci:legalval>true</sci:legalval>
						<sci:legalval>false</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Number of Displayed Rows" type="LongType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;The number of rows to show in the list box.  If the number of items exceeds the number of rows, then the list box will contain a scroll bar.&lt;/p&gt;

&lt;p&gt;To create a drop-down list, set the number of rows to 1.&lt;/p&gt;</sci:help>
						<sci:value>5</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>List Box (Semantic UI)</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>ReportSubProtocolNode</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>790</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{63F39E52-E567-45F4-84C9-E412817F26EF}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>1002 -5495</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>List Box (Semantic UI).</sci:value>
						<sci:value>Used to select one or more items from a list, to be passed to the work protocol. Single or multi-select can be set. If multiple values are selected, they are passed as an array.

This component accepts both regular data records and array data. If multiple records with array data are received, a list box for each data record will be created.

You can set the number of rows to be displayed. If the number of rows is less than the number of values to be displayed, then a vertical scroll bar is automatically added. To create a drop-down list, set the number of rows to be displayed to 1.

</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
						<sci:value>None</sci:value>
						<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>16.1.0.1140</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval>Owner Access Only</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>bondadx2</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Sun Dec 17 13:41:30 2017</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>118</sci:value>
					</sci:arg>
					<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Processing Order</sci:help>
						<sci:value>DrainTopDown</sci:value>
					</sci:arg>
					<sci:arg name="OriginalPackage" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>OriginalPackage</sci:help>
						<sci:value>scitegic/coreutils</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Modified</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Semantic UI\Forms\Functional Elements\List Box (Semantic UI)</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol/>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="Checkbox (Semantic UI)" version="2">
					<sci:arg name="Parameter to Map" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;The name of a parameter on the target protocol that this component&apos;s value should be mapped to.&lt;/p&gt;</sci:help>
						<sci:value>noreceipt</sci:value>
					</sci:arg>
					<sci:arg name="Label" type="StringType" required="true" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>label</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:value>Do not include receipt in the package.</sci:value>
					</sci:arg>
					<sci:arg name="Enabled" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Appearance" type="StringType" required="false" visibility="visible" multi="false">
						<sci:legalval/>
						<sci:legalval>toggle</sci:legalval>
						<sci:legalval>slider</sci:legalval>
					</sci:arg>
					<sci:arg name="Checked Value" type="ExpressionType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>The value that will be passed to the work protocol if this checkbox is checked.</sci:help>
						<sci:value>True</sci:value>
					</sci:arg>
					<sci:arg name="Unchecked Value" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>The value that will be passed to the work protocol if this checkbox is not checked.</sci:help>
						<sci:legalval/>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Selected" type="ExpressionType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>&lt;p&gt;Set this to an expression that evaluates to true (e.g., &apos;True&apos;) if the checkbox should be checked when the form loads.&lt;/p&gt;</sci:help>
						<sci:value>True</sci:value>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
						<sci:value>guid, currval_, checked_, label_</sci:value>
					</sci:arg>
					<sci:arg name="Constant GUID" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Override an automatically set GUID inside the component with this value.&lt;/p&gt; &lt;p&gt;If set, HTML element(s) will have their IDs set using this value instead of a randomly generated one.&lt;/p&gt;&lt;p&gt;Spaces or special characters are not allowed, only alphanumeric. The ID is case-sensitive.&lt;/p&gt;</sci:help>
						<sci:validscript>SetInvalidDetails(ParameterName() . &apos; must be alphanumeric. Spaces or special characters are not allowed.&apos;);
numValues(rMatch(Parameter(), &apos;[^a-zA-Z0-9]+&apos;, &apos;ig&apos;)) == 0;</sci:validscript>
					</sci:arg>
					<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
						<sci:member>RunToCompletion Categorize Using</sci:member>
						<sci:legalval selected="true">False</sci:legalval>
						<sci:legalval>True - For Each Data Record</sci:legalval>
						<sci:legalval>True - For Each Category</sci:legalval>
					</sci:arg>
					<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
						<sci:member>Parallel Processing Options Batch Size</sci:member>
						<sci:member>Parallel Processing Options Server</sci:member>
						<sci:member>Parallel Processing Options Preserve Order</sci:member>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
						<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
#rtcForEachCategory := (Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
elsif (#rtcForEachCategory) then
	SetDisabledDetails(&quot;This parameter is not applicable when &apos;RunToCompletion&apos; is set to &apos;True - For Each Category&apos;&quot;);
end if;
#parallel and not #rtcForEachCategory;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="false">
						<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
						<sci:member>Parallel Processing Options Server Processes</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
						<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Run subprotocol on grid engine if available.</sci:help>
						<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid Grid Options</sci:member>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Grid Options" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Use this to specify grid engine specific command line parameters to the job submission command. Leave blank to use defaults.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval>ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="Popup" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
							<sci:propval name="SCI_InitializeUsingOrigType" ishidden="true">GroupType</sci:propval>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup displays additional information in a temporary message.</sci:help>
						<sci:member>Popup Content</sci:member>
						<sci:member>Basic Popup</sci:member>
						<sci:member>Popup Appearance</sci:member>
						<sci:member>Behavior</sci:member>
					</sci:arg>
					<sci:arg name="Popup Content" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup Content</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>Popup content. (HTML is allowed).</sci:help>
					</sci:arg>
					<sci:arg name="Basic Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Basic Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can provide basic or extended formatting.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Popup Appearance" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup Appearance</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:member>Popup Width</sci:member>
						<sci:member>Fluid Popup</sci:member>
						<sci:member>Popup Size</sci:member>
						<sci:member>Flowing Popup</sci:member>
						<sci:member>Inverted Popup</sci:member>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable &apos;.ParameterName().&apos;, set Basic Popup to False&apos;);
not Parameter(&apos;Basic Popup&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Popup Width" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup Width</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can be wide or very wide to allow for longer content.</sci:help>
						<sci:legalval/>
						<sci:legalval>wide</sci:legalval>
						<sci:legalval>very wide</sci:legalval>
					</sci:arg>
					<sci:arg name="Fluid Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Fluid Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A fluid popup will take up the entire width of its  container.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Popup Size" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup Size</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can vary in font size.</sci:help>
						<sci:legalval/>
						<sci:legalval>mini</sci:legalval>
						<sci:legalval>tiny</sci:legalval>
						<sci:legalval>small</sci:legalval>
						<sci:legalval>large</sci:legalval>
						<sci:legalval>huge</sci:legalval>
					</sci:arg>
					<sci:arg name="Flowing Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Flowing Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can have no maximum width and continue to flow to fit its content.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Inverted Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Inverted Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can have its colors inverted.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Behavior" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Behavior</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:member>Show On</sci:member>
					</sci:arg>
					<sci:arg name="Show On" type="StringType" required="true" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Show On</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>When to show the popup. Hover (mouseover), click, focus (when a form element such as a text box is in focus).</sci:help>
						<sci:legalval selected="true">hover</sci:legalval>
						<sci:legalval>click</sci:legalval>
						<sci:legalval>focus</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Checkbox (Semantic UI)</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>ReportSubProtocolNode</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>790</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{91B45466-BD99-4A55-BBFC-6302FCA339E0}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>714 -5820</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Checkbox (Semantic UI).</sci:value>
						<sci:value>The checkbox passes a value to the work protocol when the form is submitted. The value sent depends on the status (checked or unchecked) of the checkbox:

Checked: The Checked Value is sent to the work protocol.
Unchecked: The Unchecked Value is sent to the work protocol.
Note:

This behavior is different from standard HTML forms. In standard HTML, if a checkbox is unchecked, it sends nothing when the enclosing form is submitted.
</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
						<sci:value>None</sci:value>
						<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>16.1.0.1140</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval>Owner Access Only</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>bondadx2</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Tue Jun 14 10:42:57 2016</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>86</sci:value>
					</sci:arg>
					<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Processing Order</sci:help>
						<sci:value>DrainTopDown</sci:value>
					</sci:arg>
					<sci:arg name="OriginalPackage" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>OriginalPackage</sci:help>
						<sci:value>scitegic/coreutils</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Modified</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Semantic UI\Forms\Functional Elements\Checkbox (Semantic UI)</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol/>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="Segment (Semantic UI)" version="2">
					<sci:arg name="Basic" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>A basic segment has no special formatting.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Appearance" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:member>Raised</sci:member>
						<sci:member>Inverted</sci:member>
						<sci:member>Padded</sci:member>
						<sci:member>Compact</sci:member>
						<sci:member>Color</sci:member>
						<sci:member>Emphasized</sci:member>
						<sci:member>Circular</sci:member>
						<sci:member>Floated</sci:member>
						<sci:member>Aligned</sci:member>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable &apos;.ParameterName().&apos;, set Basic to &quot;False&quot;&apos;);
not Parameter(&apos;Basic&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Raised" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>A segment may be formatted to raise above the page.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Inverted" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>A segment can have its colors inverted for contrast.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Padded" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>A segment can increase its padding.</sci:help>
						<sci:legalval/>
						<sci:legalval>padded</sci:legalval>
						<sci:legalval>very padded</sci:legalval>
					</sci:arg>
					<sci:arg name="Compact" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>A segment may take up only as much space as is necessary.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Color" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>A segment can be colored. These colors can be Inverted to become background colors.</sci:help>
						<sci:legalval/>
						<sci:legalval>red</sci:legalval>
						<sci:legalval>orange</sci:legalval>
						<sci:legalval>yellow</sci:legalval>
						<sci:legalval>olive</sci:legalval>
						<sci:legalval>green</sci:legalval>
						<sci:legalval>teal</sci:legalval>
						<sci:legalval>blue</sci:legalval>
						<sci:legalval>violet</sci:legalval>
						<sci:legalval>purple</sci:legalval>
						<sci:legalval>pink</sci:legalval>
						<sci:legalval>brown</sci:legalval>
						<sci:legalval>grey</sci:legalval>
						<sci:legalval>black</sci:legalval>
					</sci:arg>
					<sci:arg name="Emphasized" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>A segment can be formatted to appear more or less noticeable. Inverted colors may also be more or less noticeable.</sci:help>
						<sci:legalval/>
						<sci:legalval>secondary</sci:legalval>
						<sci:legalval>tertiary</sci:legalval>
					</sci:arg>
					<sci:arg name="Circular" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>A segment can be circular. A circular segment will most likely have to have its content manually sized to be equal width and height, otherwise it will flow to the size of your content.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Floated" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>A segment can appear to the left or right of other content.</sci:help>
						<sci:legalval/>
						<sci:legalval>left floated</sci:legalval>
						<sci:legalval>right floated</sci:legalval>
					</sci:arg>
					<sci:arg name="Aligned" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>A segment can have its contained text aligned to a side within the segment.</sci:help>
						<sci:legalval/>
						<sci:legalval>left aligned</sci:legalval>
						<sci:legalval>center aligned</sci:legalval>
						<sci:legalval>right aligned</sci:legalval>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
						<sci:value>raised_, inverted_, compact_, circular_</sci:value>
					</sci:arg>
					<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
						<sci:member>RunToCompletion Categorize Using</sci:member>
						<sci:legalval selected="true">False</sci:legalval>
						<sci:legalval>True - For Each Data Record</sci:legalval>
						<sci:legalval>True - For Each Category</sci:legalval>
					</sci:arg>
					<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
						<sci:member>Parallel Processing Options Batch Size</sci:member>
						<sci:member>Parallel Processing Options Server</sci:member>
						<sci:member>Parallel Processing Options Preserve Order</sci:member>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
						<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
#rtcForEachCategory := (Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
elsif (#rtcForEachCategory) then
	SetDisabledDetails(&quot;This parameter is not applicable when &apos;RunToCompletion&apos; is set to &apos;True - For Each Category&apos;&quot;);
end if;
#parallel and not #rtcForEachCategory;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="false">
						<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
						<sci:member>Parallel Processing Options Server Processes</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
						<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Run subprotocol on grid engine if available.</sci:help>
						<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid Grid Options</sci:member>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Grid Options" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Use this to specify grid engine specific command line parameters to the job submission command. Leave blank to use defaults.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="Popup" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
							<sci:propval name="SCI_InitializeUsingOrigType" ishidden="true">GroupType</sci:propval>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup displays additional information in a temporary message.</sci:help>
						<sci:member>Popup Content</sci:member>
						<sci:member>Basic Popup</sci:member>
						<sci:member>Popup Appearance</sci:member>
						<sci:member>Behavior</sci:member>
					</sci:arg>
					<sci:arg name="Popup Content" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup Content</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>Popup content. (HTML is allowed).</sci:help>
					</sci:arg>
					<sci:arg name="Basic Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Basic Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can provide basic or extended formatting.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Popup Appearance" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup Appearance</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:member>Popup Width</sci:member>
						<sci:member>Fluid Popup</sci:member>
						<sci:member>Popup Size</sci:member>
						<sci:member>Flowing Popup</sci:member>
						<sci:member>Inverted Popup</sci:member>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable &apos;.ParameterName().&apos;, set Basic Popup to False&apos;);
not Parameter(&apos;Basic Popup&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Popup Width" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup Width</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can be wide or very wide to allow for longer content.</sci:help>
						<sci:legalval/>
						<sci:legalval>wide</sci:legalval>
						<sci:legalval>very wide</sci:legalval>
					</sci:arg>
					<sci:arg name="Fluid Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Fluid Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A fluid popup will take up the entire width of its  container.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Popup Size" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup Size</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can vary in font size.</sci:help>
						<sci:legalval/>
						<sci:legalval>mini</sci:legalval>
						<sci:legalval>tiny</sci:legalval>
						<sci:legalval>small</sci:legalval>
						<sci:legalval>large</sci:legalval>
						<sci:legalval>huge</sci:legalval>
					</sci:arg>
					<sci:arg name="Flowing Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Flowing Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can have no maximum width and continue to flow to fit its content.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Inverted Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Inverted Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can have its colors inverted.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Behavior" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Behavior</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:member>Show On</sci:member>
					</sci:arg>
					<sci:arg name="Show On" type="StringType" required="true" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Show On</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>When to show the popup. Hover (mouseover), click, focus (when a form element such as a text box is in focus).</sci:help>
						<sci:legalval selected="true">hover</sci:legalval>
						<sci:legalval>click</sci:legalval>
						<sci:legalval>focus</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Segment (Semantic UI)</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>ReportSubProtocolNode</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>790</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{50AA3464-23DE-4DB1-B92E-2382849BF616}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>1002 -5820</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Segment (Semantic UI).</sci:value>
						<sci:value>&lt;p&gt;A segment is a group of content.&lt;/p&gt;</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
						<sci:value>None</sci:value>
						<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>16.1.0.1140</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval>Owner Access Only</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>bondadx2</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Tue Jun 14 10:55:09 2016</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>117</sci:value>
					</sci:arg>
					<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Processing Order</sci:help>
						<sci:value>DrainTopDown</sci:value>
					</sci:arg>
					<sci:arg name="OriginalPackage" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>OriginalPackage</sci:help>
						<sci:value>scitegic/coreutils</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Semantic UI\Page\Segment (Semantic UI)</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol/>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="Form Submit Button (Semantic UI)" version="2">
					<sci:arg name="Work Protocol" type="WorkProtocolType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Work Protocol</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>&lt;p&gt;The protocol that should be run when this submit button is clicked.  If this is specified, it will override the protocol specified in the parent Input Form component.&lt;/p&gt;</sci:help>
						<sci:member>Display Results As</sci:member>
					</sci:arg>
					<sci:arg name="Display Results As" type="LinkOptionsType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Display Results As</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>&lt;p&gt;Describes where to display the result of the work protocol when this button is clicked, allowing the value specified in the parent input form to be overridden.  Options such as &quot;New Web Port tab&quot; and &quot;Left Web Port pane&quot; are only applicable if the protocol is run through Web Port.  If the protocol is run outside of Web Port, such options are ignored (default to &quot;Same Window&quot;).&lt;/p&gt;

&lt;p&gt;When the value is not set or &quot;Inherit From Parent&quot;, the value specified on the parent input form will be used.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Text" type="ExpressionType" required="true" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Text</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>&lt;p&gt;The text to be shown on the button.&lt;/p&gt;</sci:help>
						<sci:value>&apos;Submit&apos;</sci:value>
					</sci:arg>
					<sci:arg name="Parameter to Map" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Parameter to Map</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>&lt;p&gt;The name of a parameter on the target protocol that this button&apos;s value should be mapped to. The value of the mapped parameter will be the &lt;i&gt;Text&lt;/i&gt; on the button.  If blank, the submit button does not correspond to any parameter.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Form Name" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Form Name</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>&lt;p&gt;The name of an input form component in the report.  If specified, this submit button will submit the form by this name when the button is clicked.  If not specified, the button will submit the form in which the button is contained.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Additional Data to Pass" type="GroupType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Additional Data to Pass</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>Any additional name/value pairs that should be sent to the work protocol but which should have no visual representation in this report.  Typically these are global variables that are needed in the work protocol.

Any number of additional name/value pairs can be supplied.  To create new entries, you may add new parameters with the names &quot;Additional Parameter X&quot; and &quot;Additional Value X&quot; where X is the next integer in the series.</sci:help>
						<sci:member>Additional Parameter 1</sci:member>
						<sci:member>Additional Value 1</sci:member>
						<sci:member>Additional Value 2</sci:member>
						<sci:member>Additional Parameter 2</sci:member>
						<sci:member>Additional Value 3</sci:member>
						<sci:member>Additional Parameter 3</sci:member>
						<sci:member>Additional Parameter 4</sci:member>
						<sci:member>Additional Value 4</sci:member>
					</sci:arg>
					<sci:arg name="Additional Parameter 1" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Additional Parameter 1</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>&lt;p&gt;The name of the parameter that should be sent to the work protocol.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Additional Value 1" type="ExpressionType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Additional Value 1</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>&lt;p&gt;The value of the additional information that should be sent to the work protocol.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Additional Parameter 2" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Additional Parameter 2</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>&lt;p&gt;The name of the parameter that should be sent to the work protocol.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Additional Value 2" type="ExpressionType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Additional Value 2</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>&lt;p&gt;The value of the additional information that should be sent to the work protocol.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Additional Parameter 3" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Additional Parameter 3</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>&lt;p&gt;The name of the parameter that should be sent to the work protocol.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Additional Value 3" type="ExpressionType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Additional Value 3</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>&lt;p&gt;The value of the additional information that should be sent to the work protocol.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Additional Parameter 4" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Additional Parameter 4</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>&lt;p&gt;The name of the parameter that should be sent to the work protocol.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Additional Value 4" type="ExpressionType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Additional Value 4</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>&lt;p&gt;The value of the additional information that should be sent to the work protocol.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Appearance" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:help>Button appearance</sci:help>
						<sci:member>Size</sci:member>
						<sci:member>Color</sci:member>
						<sci:member>Shape</sci:member>
						<sci:member>Basic</sci:member>
					</sci:arg>
					<sci:arg name="Size" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:legalval/>
						<sci:legalval>mini</sci:legalval>
						<sci:legalval>tiny</sci:legalval>
						<sci:legalval>small</sci:legalval>
						<sci:legalval>medium</sci:legalval>
						<sci:legalval selected="true">large</sci:legalval>
						<sci:legalval>big</sci:legalval>
						<sci:legalval>huge</sci:legalval>
					</sci:arg>
					<sci:arg name="Color" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:legalval/>
						<sci:legalval>black</sci:legalval>
						<sci:legalval>green</sci:legalval>
						<sci:legalval>red</sci:legalval>
						<sci:legalval>blue</sci:legalval>
						<sci:legalval>purple</sci:legalval>
						<sci:legalval>teal</sci:legalval>
						<sci:legalval>orange</sci:legalval>
						<sci:legalval>positive</sci:legalval>
						<sci:legalval>negative</sci:legalval>
					</sci:arg>
					<sci:arg name="Shape" type="StringType" required="false" visibility="visible" multi="false">
						<sci:legalval/>
						<sci:legalval>circular</sci:legalval>
					</sci:arg>
					<sci:arg name="Basic" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>A basic button is less pronounced. Just an outline and text inside it are visible.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Links and Actions" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Links and Actions</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>Links and actions to be applied to the report element produced by this component.</sci:help>
						<sci:member>Link Target</sci:member>
						<sci:member>HTML Attributes</sci:member>
						<sci:member>Tooltip</sci:member>
					</sci:arg>
					<sci:arg name="Link Target" type="ExpressionType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Link Target</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>Sets this element as the destination for links from other elements in the report. The value of &lt;i&gt;Link Target&lt;/i&gt; can be text or a property name, and should match the value of &lt;i&gt;Link&lt;/i&gt; in another report component.  In the resulting report, when the element with &lt;i&gt;Link&lt;/i&gt; is clicked, the element with the matching &lt;i&gt;Link Target&lt;/i&gt; is brought to the top of the report page.</sci:help>
					</sci:arg>
					<sci:arg name="Tooltip" type="ExpressionType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Tooltip</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>An optional tooltip for this reporting element.</sci:help>
					</sci:arg>
					<sci:arg name="HTML Attributes" type="HTMLAttributesType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>HTML Attributes</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>Defines attributes for the reporting element. These attributes can be used by JavaScript code that is &lt;a href=&quot;javascript:DoLink(&apos;{262A8E5D-BB8E-4dc4-A6F5-A61FC6047EC8}&apos;)&quot;&gt;embedded in&lt;/a&gt; or &lt;a href=&quot;javascript:DoLink(&apos;{6DF7D4FA-28BC-453b-8882-DE55C7CFFBF9}&apos;)&quot;&gt;included by&lt;/a&gt; the HTML report. One very common attribute is &quot;id&quot; which allows access to the element using the document.getElementById(id) method. Event handlers such as &quot;onclick&quot; and &quot;onmouseover&quot; are also common attributes.</sci:help>
						<sci:value>100</sci:value>
						<sci:value>class</sci:value>
						<sci:value>&quot;ui $(size) $(color) $(shape) button&quot;</sci:value>
					</sci:arg>
					<sci:arg name="Popup" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
							<sci:propval name="SCI_InitializeUsingOrigType" ishidden="true">GroupType</sci:propval>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup displays additional information in a temporary message.</sci:help>
						<sci:member>Popup Content</sci:member>
						<sci:member>Basic Popup</sci:member>
						<sci:member>Popup Appearance</sci:member>
						<sci:member>Behavior</sci:member>
					</sci:arg>
					<sci:arg name="Popup Content" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup Content</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>Popup content. (HTML is allowed).</sci:help>
					</sci:arg>
					<sci:arg name="Basic Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Basic Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can provide basic or extended formatting.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Popup Appearance" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup Appearance</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:member>Popup Width</sci:member>
						<sci:member>Fluid Popup</sci:member>
						<sci:member>Popup Size</sci:member>
						<sci:member>Flowing Popup</sci:member>
						<sci:member>Inverted Popup</sci:member>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable &apos;.ParameterName().&apos;, set Basic Popup to False&apos;);
not Parameter(&apos;Basic Popup&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Popup Width" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup Width</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can be wide or very wide to allow for longer content.</sci:help>
						<sci:legalval/>
						<sci:legalval>wide</sci:legalval>
						<sci:legalval>very wide</sci:legalval>
					</sci:arg>
					<sci:arg name="Fluid Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Fluid Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A fluid popup will take up the entire width of its  container.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Popup Size" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Popup Size</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can vary in font size.</sci:help>
						<sci:legalval/>
						<sci:legalval>mini</sci:legalval>
						<sci:legalval>tiny</sci:legalval>
						<sci:legalval>small</sci:legalval>
						<sci:legalval>large</sci:legalval>
						<sci:legalval>huge</sci:legalval>
					</sci:arg>
					<sci:arg name="Flowing Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Flowing Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can have no maximum width and continue to flow to fit its content.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Inverted Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Inverted Popup</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>A popup can have its colors inverted.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Behavior" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Behavior</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:member>Show On</sci:member>
					</sci:arg>
					<sci:arg name="Show On" type="StringType" required="true" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Show On</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>When to show the popup. Hover (mouseover), click, focus (when a form element such as a text box is in focus).</sci:help>
						<sci:legalval selected="true">hover</sci:legalval>
						<sci:legalval>click</sci:legalval>
						<sci:legalval>focus</sci:legalval>
					</sci:arg>
					<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
						<sci:member>RunToCompletion Categorize Using</sci:member>
						<sci:legalval selected="true">False</sci:legalval>
						<sci:legalval>True - For Each Data Record</sci:legalval>
						<sci:legalval>True - For Each Category</sci:legalval>
					</sci:arg>
					<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
						<sci:member>Parallel Processing Options Batch Size</sci:member>
						<sci:member>Parallel Processing Options Server</sci:member>
						<sci:member>Parallel Processing Options Preserve Order</sci:member>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
						<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
#rtcForEachCategory := (Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
elsif (#rtcForEachCategory) then
	SetDisabledDetails(&quot;This parameter is not applicable when &apos;RunToCompletion&apos; is set to &apos;True - For Each Category&apos;&quot;);
end if;
#parallel and not #rtcForEachCategory;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="false">
						<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
						<sci:member>Parallel Processing Options Server Processes</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
						<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Run subprotocol on grid engine if available.</sci:help>
						<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid Grid Options</sci:member>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Grid Options" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Use this to specify grid engine specific command line parameters to the job submission command. Leave blank to use defaults.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
						<sci:value>basic_</sci:value>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval>ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Submit Button (Semantic UI)</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>ReportSubProtocolNode</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>790</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{0AAC888A-BB35-43D5-B709-7143085ACB7F}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>1002 -6270</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Form Submit Button (Semantic UI).</sci:value>
						<sci:value>&lt;p&gt;Creates a submit button form element.  The submit button should be used in conjunction with an Input Form (Semantic UI) component.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/report/docs/reporting_basic.pdf&apos;)&quot;&gt;Report Design Essentials&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/reportadv/docs/reportadv_interactive.pdf&apos;)&quot;&gt;Interactive Reporting and Form Design&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
						<sci:value>None</sci:value>
						<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>16.1.0.1140</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval>Owner Access Only</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>bondadx2</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Mon Jul 18 11:59:27 2016</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>112</sci:value>
					</sci:arg>
					<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Processing Order</sci:help>
						<sci:value>DrainTopDown</sci:value>
					</sci:arg>
					<sci:arg name="OriginalPackage" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>OriginalPackage</sci:help>
						<sci:value>scitegic/coreutils</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Semantic UI\Forms\Functional Elements\Form Submit Button (Semantic UI)</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol/>
			</sci:data>
			<sci:connectid from="109" to="100" type="true"/>
			<sci:connectid from="92" to="96" type="true"/>
			<sci:connectid from="96" to="100" type="true"/>
			<sci:connectid from="104" to="96" type="true"/>
			<sci:connectid from="119" to="120" type="true"/>
			<sci:connectid from="120" to="100" type="true"/>
			<sci:connectid from="121" to="120" type="true"/>
			<sci:connectid from="125" to="122" type="true"/>
			<sci:connectid from="122" to="124" type="true"/>
			<sci:connectid from="124" to="100" type="true"/>
			<sci:connectid from="126" to="123" type="true"/>
			<sci:connectid from="123" to="124" type="true"/>
			<sci:connectid from="110" to="100" type="true"/>
			<sci:connectid from="100" to="88" type="true"/>
			<sci:connectid from="50" to="127" type="true"/>
			<sci:connectid from="127" to="130" type="true"/>
			<sci:connectid from="128" to="130" type="true"/>
			<sci:connectid from="130" to="100" type="true"/>
			<sci:connectid from="129" to="130" type="true"/>
			<sci:connectid from="74" to="131" type="true"/>
			<sci:connectid from="131" to="130" type="true"/>
			<sci:connectid from="132" to="130" type="true"/>
			<sci:connectid from="111" to="100" type="true"/>
			<sci:connectid from="78" to="118" type="true"/>
			<sci:connectid from="118" to="100" type="true"/>
			<sci:connectid from="86" to="117" type="true"/>
			<sci:connectid from="117" to="100" type="true"/>
			<sci:connectid from="112" to="100" type="true"/>
			<sci:version iVal="15"/>
		</sci:protocol>
	</sci:dbitem>
<!-- Exported protocol -->
<sci:component name="8.0 Protocol Warning" version="2">
<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
<sci:help>Component Icon</sci:help>
<sci:value>PROTOCOLNODE</sci:value>
</sci:arg>
<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
<sci:help>Protocol Sticky Notes</sci:help>
<sci:value>%VERSION 3%</sci:value>
<sci:value>400 -219 1222 221</sci:value>
<sci:value>250 120 20</sci:value>
<sci:value>WARNING! This is a Pipeline Pilot protocol written in version 8.0 or later. It contains features that are not supported in earlier versions of Pipeline Pilot.</sci:value>
</sci:arg>
</sci:component>
</sci:data>

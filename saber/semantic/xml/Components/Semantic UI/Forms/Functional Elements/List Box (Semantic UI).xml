<?xml version="1.0" encoding="UTF-8"?>
<sci:data xmlns:sci="http://www.SciTegic.com/" object="SciTegic.Protocol.1" format="8.0.0">
	<sci:dbitem>
		<sci:component name="List Box (Semantic UI)" version="2">
			<sci:arg name="Parameter to Map" type="StringType" required="true" visibility="visible" multi="false">
				<sci:help>&lt;p&gt;The name of a parameter on the target protocol that this component&apos;s value should be mapped to.&lt;/p&gt;</sci:help>
			</sci:arg>
			<sci:arg name="Text" type="ExpressionType" required="true" visibility="visible" multi="false">
				<sci:help>&lt;p&gt;The text, or property containing the text, to be shown as an entry in the list box.&lt;/p&gt;</sci:help>
				<sci:member>Allow Multiple Selections</sci:member>
				<sci:member>Selected</sci:member>
				<sci:member>Value</sci:member>
			</sci:arg>
			<sci:arg name="Value" type="ExpressionType" required="false" visibility="visible" multi="false">
				<sci:help>The value that will be submitted for each item in the list. If not specified, the value of &lt;i&gt;Text&lt;/i&gt; will be submitted.

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;

&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
Due to inconsistent input value attribute handling by various browsers, it is recommended that the Value parameter not include leading or trailing whitespace. Depending on the browser, this whitespace may be omitted when the form is submitted. A possible workaround is to flank the entire value with a special character that can then be stripped when the input value is processed in the work protocol.
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
</sci:help>
			</sci:arg>
			<sci:arg name="Allow Multiple Selections" type="BoolType" required="false" visibility="visible" multi="false">
				<sci:help>&lt;p&gt;If true, multiple selections can be made in the list box.  Otherwise, only one entry can be selected.&lt;/p&gt;</sci:help>
				<sci:legalval>True</sci:legalval>
				<sci:legalval selected="true">False</sci:legalval>
			</sci:arg>
			<sci:arg name="Selected" type="ExpressionType" required="false" visibility="visible" multi="false">
				<sci:help>&lt;p&gt;An optional PilotScript expression evaluating to True or False that determines if the current entry is pre-selected in the list box. For example, if the Text parameter is set to a property &apos;MyPet&apos; and you want to have a value &apos;Cat&apos; selected, then do the following:&lt;/p&gt;

&lt;code&gt;MyPet eq &apos;Cat&apos;;&lt;/code&gt;

&lt;p&gt;If you want the last item in a single selection list box to be pre-selected, simply enter True.&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;

&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
</sci:help>
			</sci:arg>
			<sci:arg name="Appearance" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
				<sci:help>Appearance</sci:help>
				<sci:member>Enabled</sci:member>
				<sci:member>Searchable</sci:member>
				<sci:member>Width</sci:member>
				<sci:member>Label</sci:member>
			</sci:arg>
			<sci:arg name="Enabled" type="BoolType" required="true" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
				<sci:help>Enabled?</sci:help>
				<sci:legalval selected="true">True</sci:legalval>
				<sci:legalval>False</sci:legalval>
			</sci:arg>
			<sci:arg name="Searchable" type="BoolType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
				<sci:help>Make the list box searchable?</sci:help>
				<sci:member>Full Text Search</sci:member>
				<sci:enabledscript>SetDisabledDetails(&apos;To enable &apos;.ParameterName().&apos;, set &quot;Allow Multiple Selections&quot; to False&apos;);
not Parameter(&apos;Allow Multiple Selections&apos;);</sci:enabledscript>
				<sci:legalval selected="true">True</sci:legalval>
				<sci:legalval>False</sci:legalval>
			</sci:arg>
			<sci:arg name="Width" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
				<sci:help>Width of the list box including its label (if present), in columns. Full screen is 16 columns. Leave blank to auto-size up to the widest available space.</sci:help>
				<sci:legalval/>
				<sci:legalval>one wide</sci:legalval>
				<sci:legalval>two wide</sci:legalval>
				<sci:legalval>three wide</sci:legalval>
				<sci:legalval>four wide</sci:legalval>
				<sci:legalval>five wide</sci:legalval>
				<sci:legalval>six wide</sci:legalval>
				<sci:legalval>seven wide</sci:legalval>
				<sci:legalval>eight wide</sci:legalval>
				<sci:legalval>nine wide</sci:legalval>
				<sci:legalval>ten wide</sci:legalval>
				<sci:legalval>eleven wide</sci:legalval>
				<sci:legalval>twelve wide</sci:legalval>
				<sci:legalval>thirteen wide</sci:legalval>
				<sci:legalval>fourteen wide</sci:legalval>
				<sci:legalval>fifteen wide</sci:legalval>
				<sci:legalval>sixteen wide</sci:legalval>
			</sci:arg>
			<sci:arg name="Label" type="StringType" required="false" visibility="visible" multi="false">
				<sci:help>Label</sci:help>
				<sci:member>Label Location</sci:member>
			</sci:arg>
			<sci:arg name="Label Location" type="StringType" required="true" visibility="visible" multi="false">
				<sci:help>Location</sci:help>
				<sci:enabledscript>SetDisabledDetails(&apos;To enable &apos;.ParameterName().&apos;, set a Label.&apos;);
Parameter(&apos;Label&apos;) ne &apos;&apos;;</sci:enabledscript>
				<sci:legalval selected="true">Above Field</sci:legalval>
				<sci:legalval>Left of Field</sci:legalval>
			</sci:arg>
			<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
			</sci:arg>
			<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
				<sci:value>_s,  _ss, multiple_, guid</sci:value>
			</sci:arg>
			<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
				<sci:member>RunToCompletion Categorize Using</sci:member>
				<sci:legalval selected="true">False</sci:legalval>
				<sci:legalval>True - For Each Data Record</sci:legalval>
				<sci:legalval>True - For Each Category</sci:legalval>
			</sci:arg>
			<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
				<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
				<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
			</sci:arg>
			<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
				<sci:member>Parallel Processing Options Batch Size</sci:member>
				<sci:member>Parallel Processing Options Server</sci:member>
				<sci:member>Parallel Processing Options Preserve Order</sci:member>
				<sci:legalval>True</sci:legalval>
				<sci:legalval selected="true">False</sci:legalval>
			</sci:arg>
			<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
				<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
#rtcForEachCategory := (Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
elsif (#rtcForEachCategory) then
	SetDisabledDetails(&quot;This parameter is not applicable when &apos;RunToCompletion&apos; is set to &apos;True - For Each Category&apos;&quot;);
end if;
#parallel and not #rtcForEachCategory;</sci:enabledscript>
			</sci:arg>
			<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
				<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
				<sci:member>Parallel Processing Options Server Processes</sci:member>
				<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
				<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
				<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
			</sci:arg>
			<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
				<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
				<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
			</sci:arg>
			<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>Run subprotocol on grid engine if available.</sci:help>
				<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
				<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
				<sci:legalval selected="true">True</sci:legalval>
				<sci:legalval>False</sci:legalval>
			</sci:arg>
			<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
				<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
				<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
			</sci:arg>
			<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
				<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
				<sci:legalval selected="true">True</sci:legalval>
				<sci:legalval>False</sci:legalval>
			</sci:arg>
			<sci:arg name="Constant GUID" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;Override an automatically set GUID inside the component with this value.&lt;/p&gt; &lt;p&gt;If set, HTML element(s) will have their IDs set using this value instead of a randomly generated one.&lt;/p&gt;&lt;p&gt;Spaces or special characters are not allowed, only alphanumeric. The ID is case-sensitive.&lt;/p&gt;
</sci:help>
				<sci:validscript>SetInvalidDetails(ParameterName() . &apos; must be alphanumeric. Spaces or special characters are not allowed.&apos;);
numValues(rMatch(Parameter(), &apos;[^a-zA-Z0-9]+&apos;, &apos;ig&apos;)) == 0;</sci:validscript>
			</sci:arg>
			<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
				<sci:help>Component Attributes</sci:help>
				<sci:value>ComponentReturnsPass</sci:value>
				<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
				<sci:legalval>ComponentReturnsPass</sci:legalval>
				<sci:legalval>ComponentReturnsFail</sci:legalval>
				<sci:legalval>ComponentRunsLocal</sci:legalval>
			</sci:arg>
			<sci:arg name="Popup" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
				<sci:metaproplist>
					<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
					<sci:propval name="SCI_InitializeUsingOrigType" ishidden="true">GroupType</sci:propval>
					<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
						<sci:value>Popup</sci:value>
					</sci:mpropval>
				</sci:metaproplist>
				<sci:help>A popup displays additional information in a temporary message.</sci:help>
				<sci:member>Popup Content</sci:member>
				<sci:member>Basic Popup</sci:member>
				<sci:member>Popup Appearance</sci:member>
				<sci:member>Behavior</sci:member>
			</sci:arg>
			<sci:arg name="Popup Content" type="StringType" required="false" visibility="visible" multi="false">
				<sci:metaproplist>
					<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
						<sci:value>Popup Content</sci:value>
					</sci:mpropval>
				</sci:metaproplist>
				<sci:help>Popup content. (HTML is allowed).</sci:help>
			</sci:arg>
			<sci:arg name="Basic Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
				<sci:metaproplist>
					<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
						<sci:value>Basic Popup</sci:value>
					</sci:mpropval>
				</sci:metaproplist>
				<sci:help>A popup can provide basic or extended formatting.</sci:help>
				<sci:legalval selected="true">True</sci:legalval>
				<sci:legalval>False</sci:legalval>
			</sci:arg>
			<sci:arg name="Popup Appearance" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
				<sci:metaproplist>
					<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
						<sci:value>Popup Appearance</sci:value>
					</sci:mpropval>
				</sci:metaproplist>
				<sci:help>Appearance</sci:help>
				<sci:member>Popup Width</sci:member>
				<sci:member>Fluid Popup</sci:member>
				<sci:member>Popup Size</sci:member>
				<sci:member>Flowing Popup</sci:member>
				<sci:member>Inverted Popup</sci:member>
				<sci:enabledscript>SetDisabledDetails(&apos;To enable &apos;.ParameterName().&apos;, set Basic Popup to False&apos;);
not Parameter(&apos;Basic Popup&apos;);</sci:enabledscript>
			</sci:arg>
			<sci:arg name="Popup Width" type="StringType" required="false" visibility="visible" multi="false">
				<sci:metaproplist>
					<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
						<sci:value>Popup Width</sci:value>
					</sci:mpropval>
				</sci:metaproplist>
				<sci:help>A popup can be wide or very wide to allow for longer content.</sci:help>
				<sci:legalval/>
				<sci:legalval>wide</sci:legalval>
				<sci:legalval>very wide</sci:legalval>
			</sci:arg>
			<sci:arg name="Fluid Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
				<sci:metaproplist>
					<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
						<sci:value>Fluid Popup</sci:value>
					</sci:mpropval>
				</sci:metaproplist>
				<sci:help>A fluid popup will take up the entire width of its  container.</sci:help>
				<sci:legalval>True</sci:legalval>
				<sci:legalval selected="true">False</sci:legalval>
			</sci:arg>
			<sci:arg name="Popup Size" type="StringType" required="false" visibility="visible" multi="false">
				<sci:metaproplist>
					<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
						<sci:value>Popup Size</sci:value>
					</sci:mpropval>
				</sci:metaproplist>
				<sci:help>A popup can vary in font size.</sci:help>
				<sci:legalval/>
				<sci:legalval>mini</sci:legalval>
				<sci:legalval>tiny</sci:legalval>
				<sci:legalval>small</sci:legalval>
				<sci:legalval>large</sci:legalval>
				<sci:legalval>huge</sci:legalval>
			</sci:arg>
			<sci:arg name="Flowing Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
				<sci:metaproplist>
					<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
						<sci:value>Flowing Popup</sci:value>
					</sci:mpropval>
				</sci:metaproplist>
				<sci:help>A popup can have no maximum width and continue to flow to fit its content.</sci:help>
				<sci:legalval>True</sci:legalval>
				<sci:legalval selected="true">False</sci:legalval>
			</sci:arg>
			<sci:arg name="Inverted Popup" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
				<sci:metaproplist>
					<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
						<sci:value>Inverted Popup</sci:value>
					</sci:mpropval>
				</sci:metaproplist>
				<sci:help>A popup can have its colors inverted.</sci:help>
				<sci:legalval>True</sci:legalval>
				<sci:legalval selected="true">False</sci:legalval>
			</sci:arg>
			<sci:arg name="Behavior" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
				<sci:metaproplist>
					<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
						<sci:value>Behavior</sci:value>
					</sci:mpropval>
				</sci:metaproplist>
				<sci:help>Behavior</sci:help>
				<sci:member>Show On</sci:member>
			</sci:arg>
			<sci:arg name="Show On" type="StringType" required="true" visibility="visible" multi="false">
				<sci:metaproplist>
					<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
						<sci:value>Show On</sci:value>
					</sci:mpropval>
				</sci:metaproplist>
				<sci:help>When to show the popup. Hover (mouseover), click, focus (when a form element such as a text box is in focus).</sci:help>
				<sci:legalval selected="true">hover</sci:legalval>
				<sci:legalval>click</sci:legalval>
				<sci:legalval>focus</sci:legalval>
			</sci:arg>
			<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
				<sci:legalval selected="true">Halt</sci:legalval>
				<sci:legalval>Fail</sci:legalval>
				<sci:legalval>Pass</sci:legalval>
			</sci:arg>
			<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
				<sci:legalval selected="true">Halt</sci:legalval>
				<sci:legalval>Fail</sci:legalval>
				<sci:legalval>Pass</sci:legalval>
			</sci:arg>
			<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
			<sci:arg name="Full Text Search" type="StringType" required="true" visibility="visible" multi="false">
				<sci:metaproplist>
					<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
						<sci:value>Full Text Search</sci:value>
					</sci:mpropval>
					<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
				</sci:metaproplist>
				<sci:help>&lt;p&gt;Specifying &quot;exact&quot; will force the exact search to be matched somewhere in the string, even in the middle of the string: e.g. typing &lt;code&gt;bar&lt;/code&gt; will match &lt;code&gt;barge&lt;/code&gt; and &lt;code&gt;mybarge&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Specifying &quot;true&quot; will use a fuzzy full text search anywhere in the string: e.g. typing &lt;code&gt;bar&lt;/code&gt; will match &lt;code&gt;barge&lt;/code&gt; and &lt;code&gt;mybarge&lt;/code&gt; and &lt;code&gt;bear&lt;/code&gt; and &lt;code&gt;mybear&lt;/code&gt; and &lt;code&gt;myboar&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Specifying &quot;false&quot; will force an exact search only starting at the beginning of the string: e.g. typing &lt;code&gt;bar&lt;/code&gt; will match &lt;code&gt;barge&lt;/code&gt; but not &lt;code&gt;mybarge&lt;/code&gt; and not &lt;code&gt;boar&lt;/code&gt;.&lt;/p&gt;</sci:help>
				<sci:enabledscript>SetDisabledDetails(&apos;To enable &apos;.ParameterName().&apos;, set &quot;Searchable&quot; to True&apos;);
Parameter(&apos;Searchable&apos;);</sci:enabledscript>
				<sci:legalval selected="true">exact</sci:legalval>
				<sci:legalval>true</sci:legalval>
				<sci:legalval>false</sci:legalval>
			</sci:arg>
			<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:value>List Box (Semantic UI)</sci:value>
			</sci:arg>
			<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
				<sci:help>Protocol AutoLayout</sci:help>
				<sci:value>0</sci:value>
			</sci:arg>
			<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
				<sci:value>0</sci:value>
			</sci:arg>
			<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
				<sci:value>ReportTextNode</sci:value>
			</sci:arg>
			<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
				<sci:help>Component Revision</sci:help>
				<sci:value>790</sci:value>
			</sci:arg>
			<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:value>{63F39E52-E567-45F4-84C9-E412817F26EF}</sci:value>
			</sci:arg>
			<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:value>402 -895</sci:value>
			</sci:arg>
			<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
				<sci:value>100</sci:value>
				<sci:value>List Box (Semantic UI).</sci:value>
				<sci:value>Used to select one or more items from a list, to be passed to the work protocol. Single or multi-select can be set. If multiple values are selected, they are passed as an array.

This component accepts both regular data records and array data. If multiple records with array data are received, a list box for each data record will be created.

You can set the number of rows to be displayed. If the number of rows is less than the number of values to be displayed, then a vertical scroll bar is automatically added. To create a drop-down list, set the number of rows to be displayed to 1.

</sci:value>
				<sci:value>Generic</sci:value>
				<sci:value/>
				<sci:value>Generic</sci:value>
				<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
				<sci:value>None</sci:value>
				<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
			</sci:arg>
			<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>The server version when this component was registered</sci:help>
				<sci:value>16.1.0.1140</sci:value>
			</sci:arg>
			<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
			<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>Protocol Sticky Notes</sci:help>
			</sci:arg>
			<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
				<sci:help>Protocol Scale</sci:help>
				<sci:value>100</sci:value>
			</sci:arg>
			<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>Protocol Options</sci:help>
				<sci:legalval>Owner Access Only</sci:legalval>
			</sci:arg>
			<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>The user who registered this component.</sci:help>
				<sci:value>bondadx2</sci:value>
			</sci:arg>
			<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>The date this component was registered.</sci:help>
				<sci:value>Sun Dec 17 13:41:30 2017</sci:value>
			</sci:arg>
			<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
				<sci:help>Local Component Identifier</sci:help>
				<sci:value>8</sci:value>
			</sci:arg>
			<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>Processing Order</sci:help>
				<sci:value>DrainTopDown</sci:value>
			</sci:arg>
			<sci:arg name="OriginalPackage" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>OriginalPackage</sci:help>
				<sci:value>scitegic/coreutils</sci:value>
			</sci:arg>
			<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
				<sci:help>By Ref</sci:help>
				<sci:value>0</sci:value>
			</sci:arg>
			<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>The original path within the database of this component.</sci:help>
				<sci:value>Components\Semantic UI\Forms\Functional Elements\List Box (Semantic UI)</sci:value>
			</sci:arg>
		</sci:component>
		<sci:protocol>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="GUID" version="2">
					<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
						<sci:member>RunToCompletion Categorize Using</sci:member>
						<sci:legalval selected="true">False</sci:legalval>
						<sci:legalval>True - For Each Data Record</sci:legalval>
						<sci:legalval>True - For Each Category</sci:legalval>
					</sci:arg>
					<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
						<sci:member>Parallel Processing Options Batch Size</sci:member>
						<sci:member>Parallel Processing Options Server</sci:member>
						<sci:member>Parallel Processing Options Preserve Order</sci:member>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
						<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
#rtcForEachCategory := (Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
elsif (#rtcForEachCategory) then
	SetDisabledDetails(&quot;This parameter is not applicable when &apos;RunToCompletion&apos; is set to &apos;True - For Each Category&apos;&quot;);
end if;
#parallel and not #rtcForEachCategory;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="false">
						<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
						<sci:member>Parallel Processing Options Server Processes</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
						<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Run subprotocol on grid engine if available.</sci:help>
						<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid Grid Options</sci:member>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Grid Options" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Use this to specify grid engine specific command line parameters to the job submission command. Leave blank to use defaults.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval>ComponentTakesInput</sci:legalval>
						<sci:legalval>ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>GUID</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>SUBPROTOCOLNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>790</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{98A8357E-0756-4CF4-8A6C-429F0C92DEA1}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>90 -95</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Set an internal component ID.</sci:value>
						<sci:value>Set an internal component ID.</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
						<sci:value>None</sci:value>
						<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>16.1.0.1140</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval>Owner Access Only</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>bondadx2</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Mon Jul 18 11:59:53 2016</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>98</sci:value>
					</sci:arg>
					<sci:arg name="OriginalPackage" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>OriginalPackage</sci:help>
						<sci:value>scitegic/coreutils</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Semantic UI\Utilities\Internals\GUID</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol/>
			</sci:data>
			<sci:data object="SciTegic.ComponentJavaPlugin.1">
				<sci:component name="List Box" version="2">
					<sci:arg name="Text" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;The text, or property containing the text, to be shown as an entry in the list box.&lt;/p&gt;</sci:help>
						<sci:member>Number of Displayed Rows</sci:member>
						<sci:member>Allow Multiple Selections</sci:member>
						<sci:member>Selected</sci:member>
						<sci:member>Value</sci:member>
						<sci:value>$(Text)</sci:value>
					</sci:arg>
					<sci:arg name="Value" type="ExpressionType" required="false" visibility="visible" multi="false">
						<sci:help>The value that will be submitted for each item in the list. If not specified, the value of &lt;i&gt;Text&lt;/i&gt; will be submitted.

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;

&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
Due to inconsistent input value attribute handling by various browsers, it is recommended that the Value parameter not include leading or trailing whitespace. Depending on the browser, this whitespace may be omitted when the form is submitted. A possible workaround is to flank the entire value with a special character that can then be stripped when the input value is processed in the work protocol.
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
</sci:help>
						<sci:value>$(Value)</sci:value>
					</sci:arg>
					<sci:arg name="Number of Displayed Rows" type="LongType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;The number of rows to show in the list box.  If the number of items exceeds the number of rows, then the list box will contain a scroll bar.&lt;/p&gt;

&lt;p&gt;To create a drop-down list, set the number of rows to 1.&lt;/p&gt;</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="Allow Multiple Selections" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;If true, multiple selections can be made in the list box.  Otherwise, only one entry can be selected.&lt;/p&gt;</sci:help>
						<sci:value>$(Allow Multiple Selections)</sci:value>
					</sci:arg>
					<sci:arg name="Selected" type="ExpressionType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;An optional PilotScript expression evaluating to True or False that determines if the current entry is pre-selected in the list box. For example, if the Text parameter is set to a property &apos;MyPet&apos; and you want to have a value &apos;Cat&apos; selected, then do the following:&lt;/p&gt;

&lt;code&gt;MyPet eq &apos;Cat&apos;;&lt;/code&gt;

&lt;p&gt;If you want the last item in a single selection list box to be pre-selected, simply enter True.&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;

&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
</sci:help>
						<sci:value>$(Selected)</sci:value>
					</sci:arg>
					<sci:arg name="Parameter to Map" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;The name of a parameter on the target protocol that this component&apos;s value should be mapped to.&lt;/p&gt;</sci:help>
						<sci:value>$(Parameter to Map)</sci:value>
					</sci:arg>
					<sci:arg name="Format" type="FormatType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;Specifies formatting to be applied to this element. Editing this parameter opens the Format Dialog.&lt;/p&gt;

&lt;p&gt;Depending on what this Format is being applied to, options may include:
&lt;ul&gt;&lt;li&gt;Font settings (e.g., Color, Size, Bold, Italic, Underline)&lt;/li&gt;
&lt;li&gt;Border settings (e.g., Color, Style, Width)&lt;/li&gt;
&lt;li&gt;Background settings (Color, Image)&lt;/li&gt;
&lt;li&gt;Alignment settings&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Only options that are relevant for this specific Format parameter will be displayed.&lt;/li&gt;
&lt;li&gt;Background Image: Allows you to select a background image for the reporting element. 
This image must be accessible to the Pipeline Pilot server. For example, 
you can copy images to the apps\scitegic\generic\dataroot\data\Images folder in your 
Pipeline Pilot installation to make them available. Supported image types include 
.gif, .jpg, .png, and .bmp.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
					</sci:arg>
					<sci:arg name="Position" type="PositionType" required="false" visibility="visible" multi="false">
						<sci:help>Specifies how this element is positioned. Editing this parameter opens the Position dialog, which enables you to change margins, paddings, width, and height.</sci:help>
					</sci:arg>
					<sci:arg name="Links and Actions" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>Links and actions to be applied to the report element produced by this component.</sci:help>
						<sci:member>Link Target</sci:member>
						<sci:member>HTML Attributes</sci:member>
						<sci:member>Tooltip</sci:member>
					</sci:arg>
					<sci:arg name="Link Target" type="ExpressionType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Sets this element as the destination for links from other elements in the report. The value of &lt;i&gt;Link Target&lt;/i&gt; can be text or a property name, and should match the value of &lt;i&gt;Link&lt;/i&gt; in another report component.  In the resulting report, when the element with &lt;i&gt;Link&lt;/i&gt; is clicked, the element with the matching &lt;i&gt;Link Target&lt;/i&gt; is brought to the top of the report page.</sci:help>
					</sci:arg>
					<sci:arg name="Tooltip" type="ExpressionType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>An optional tooltip for this reporting element.</sci:help>
					</sci:arg>
					<sci:arg name="HTML Attributes" type="HTMLAttributesType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Defines attributes for the reporting element. These attributes can be used by JavaScript code that is &lt;a href=&quot;javascript:DoLink(&apos;{262A8E5D-BB8E-4dc4-A6F5-A61FC6047EC8}&apos;)&quot;&gt;embedded in&lt;/a&gt; or &lt;a href=&quot;javascript:DoLink(&apos;{6DF7D4FA-28BC-453b-8882-DE55C7CFFBF9}&apos;)&quot;&gt;included by&lt;/a&gt; the HTML report. One very common attribute is &quot;id&quot; which allows access to the element using the document.getElementById(id) method. Event handlers such as &quot;onclick&quot; and &quot;onmouseover&quot; are also common attributes.</sci:help>
						<sci:value>100</sci:value>
						<sci:value>class</sci:value>
						<sci:value>&apos;ui dropdown&apos;</sci:value>
						<sci:value>multiple</sci:value>
						<sci:value>&apos;&apos;</sci:value>
						<sci:value>id</sci:value>
						<sci:value>&apos;$(guid)&apos;</sci:value>
					</sci:arg>
					<sci:arg name="Column Settings" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Column settings control how the element appears when it is used inside a table.</sci:help>
						<sci:member>Column Settings Header Text</sci:member>
						<sci:member>Column Settings Header Format</sci:member>
						<sci:member>Column Settings Header Position</sci:member>
						<sci:member>Column Settings Cell Format</sci:member>
						<sci:member>Column Settings Cell Position</sci:member>
					</sci:arg>
					<sci:arg name="Column Settings Header Text" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>When the element is used within a Table component, this parameter sets the text displayed at the top of its column.</sci:help>
					</sci:arg>
					<sci:arg name="Column Settings Header Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>&lt;p&gt;When used in a table, this parameter sets the format of the text displayed 
at the top of its column.
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Font Size: Sets font size&lt;/li&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:value>600</sci:value>
					</sci:arg>
					<sci:arg name="Column Settings Header Position" type="PositionType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>When the element is used within a Table component, this parameter sets the position of the text displayed at the top of its column.</sci:help>
						<sci:value>500</sci:value>
						<sci:value>100.0</sci:value>
						<sci:value>Percent</sci:value>
						<sci:value>100.0</sci:value>
						<sci:value>Percent</sci:value>
						<sci:value>0.0</sci:value>
						<sci:value>Pixels</sci:value>
						<sci:value>0.0</sci:value>
						<sci:value>Pixels</sci:value>
						<sci:value>0.0</sci:value>
						<sci:value>Pixels</sci:value>
						<sci:value>0.0</sci:value>
						<sci:value>Pixels</sci:value>
						<sci:value>0.0</sci:value>
						<sci:value>Pixels</sci:value>
						<sci:value>0.0</sci:value>
						<sci:value>Pixels</sci:value>
						<sci:value>0.0</sci:value>
						<sci:value>Pixels</sci:value>
						<sci:value>0.0</sci:value>
						<sci:value>Pixels</sci:value>
					</sci:arg>
					<sci:arg name="Column Settings Cell Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>When used in a table, this parameter sets the format of the cells in the column.
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Font Size: Sets font size&lt;/li&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:value>600</sci:value>
					</sci:arg>
					<sci:arg name="Column Settings Cell Position" type="PositionType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>When the element is used within a Table component, this parameter sets the position of the cells in the column.</sci:help>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>REPORTTEXTNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{5D697158-1CFF-49B3-89F8-E2409B4CBFD3}</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Plug In</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Adds a list box form element to a report</sci:value>
						<sci:value>&lt;p&gt;Used to select one or more items from a list, to be passed to the work protocol.  Single or multi-select can be set.  If multiple values are selected, they are passed as an array.&lt;/p&gt;

&lt;p&gt;This component accepts both regular data records and array data.  If multiple records with array data are received, a list box for each data record will be created.&lt;/p&gt;

&lt;p&gt;You can set the number of rows to be displayed.  If the number of rows is less than the number of values to be displayed, then a vertical scroll bar is automatically added.  To create a drop-down list, set the number of rows to be displayed to 1.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/report/docs/reporting_basic.pdf&apos;)&quot;&gt;Report Design Essentials&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/reportadv/docs/reportadv_interactive.pdf&apos;)&quot;&gt;Interactive Reporting and Form Design&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>Data records containing entries to be shown in a List Box.</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>A data record representing the List Box and its associated data.</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>8.0.0.14</sci:value>
					</sci:arg>
					<sci:arg name="Link Options Mapping" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Mapping of the Format parameter name to the Link Options parameter name.</sci:help>
					</sci:arg>
					<sci:arg name="Use Package" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>scitegic/report</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>99</sci:value>
					</sci:arg>
					<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>DrainTopDown</sci:value>
					</sci:arg>
					<sci:arg name="JavaClass" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>com.scitegic.report.component.forms.ListBoxComponent</sci:value>
					</sci:arg>
					<sci:arg name="CaptureStdoutStderr" type="BoolType" required="true" visibility="nevershow" multi="false">
						<sci:help>CaptureStdoutStderr</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>List Box</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>1242 -95</sci:value>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/reportadv</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Fri Feb 12 10:00:00 2010</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Reporting and Visualization\Web Application Development\Forms\List Box</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.PropertyFunctions.1">
				<sci:component name="No-op" version="2">
					<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
						<sci:legalval selected="true">LeaveData</sci:legalval>
						<sci:legalval>ClearData</sci:legalval>
						<sci:legalval>DeleteData</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:help>the action to perform</sci:help>
						<sci:value>PassDataToPort</sci:value>
					</sci:arg>
					<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>the port to pass data to</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>COMPONENTNODE</sci:value>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Thu Sep 28 16:34:08 2006</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>No-op</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Evaluate Expression</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{6E468A38-A6F7-4371-B65B-501A3ED4C0D9}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>1818 -95</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Sends all incoming records out the Pass port unchanged</sci:value>
						<sci:value>&lt;p&gt;Useful in subprotocols to capture the point of input. For example, if you wish to perform two different sequences of operations on the same input data, use No-op as the first component of the subprotocol and connect both pipes to the No-op output port.&lt;/p&gt;

&lt;p&gt;You can also use this component to simplify the layout for complex protocols. For example, if you have three Reader components that need to be connected to three Viewer components, placing a No-op in the middle reduces the number of required connections and clarifies the logic.&lt;/p&gt;
</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>6.0.1.1</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\No-op</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="Subprotocol" version="2">
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
						<sci:value>boxmode</sci:value>
					</sci:arg>
					<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
						<sci:member>RunToCompletion Categorize Using</sci:member>
						<sci:legalval selected="true">False</sci:legalval>
						<sci:legalval>True - For Each Data Record</sci:legalval>
						<sci:legalval>True - For Each Category</sci:legalval>
					</sci:arg>
					<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
						<sci:member>Parallel Processing Options Batch Size</sci:member>
						<sci:member>Parallel Processing Options Server</sci:member>
						<sci:member>Parallel Processing Options Preserve Order</sci:member>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
						<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
#rtcForEachCategory := (Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
elsif (#rtcForEachCategory) then
	SetDisabledDetails(&quot;This parameter is not applicable when &apos;RunToCompletion&apos; is set to &apos;True - For Each Category&apos;&quot;);
end if;
#parallel and not #rtcForEachCategory;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="false">
						<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
						<sci:member>Parallel Processing Options Server Processes</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
						<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Run subprotocol on grid engine if available.</sci:help>
						<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid Grid Options</sci:member>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Grid Options" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Use this to specify grid engine specific command line parameters to the job submission command. Leave blank to use defaults.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>dropdown details</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>ReportSubProtocolNode</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>790</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>1818 -370</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
						<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>7.9.0.30</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval>Owner Access Only</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/coreutils</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Tue Jan 26 10:02:05 2010</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>101</sci:value>
					</sci:arg>
					<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Processing Order</sci:help>
						<sci:value>DrainTopDown</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol>
					<sci:data object="SciTegic.EvaluateExpression.1">
						<sci:component name="Custom Manipulator (PilotScript)" version="2">
							<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
								<sci:member>Initial Expression</sci:member>
								<sci:member>Final Expression</sci:member>
								<sci:member>Keep Calculated Properties</sci:member>
								<sci:value>if @&apos;Full Text Search&apos; eq &apos;exact&apos; then
	@boxmode := &apos;8601698D9EF14E6AB5C861BA6E5D461D&apos;;
elsif @&apos;Full Text Search&apos; eq &apos;true&apos; then
	@boxmode := &apos;&apos;;
elsif @&apos;Full Text Search&apos; eq &apos;false&apos; then
	@boxmode := &apos;9D584C588569435EA193BFA2DCFCEAC4&apos;;
else
	@boxmode := &apos;&apos;;
end if;</sci:value>
							</sci:arg>
							<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval>ComponentTakesInput</sci:legalval>
								<sci:legalval>ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Custom Error Message</sci:help>
							</sci:arg>
							<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Version of expression parser to use.</sci:help>
								<sci:value>2</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
								<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
								<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>EXPRESSIONNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>90 -95</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Applies a PilotScript expression to each data record
</sci:value>
								<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>7.0.0.35</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>4</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Manipulators\Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.Protocol.1">
						<sci:component name="Raw HTML (Semantic UI)" version="2">
							<sci:arg name="HTML" type="TextType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
								<sci:value> &lt;div class=&quot;ui fluid search dropdown selection $(boxmode)&quot;&gt; </sci:value>
							</sci:arg>
							<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
								<sci:member>RunToCompletion Categorize Using</sci:member>
								<sci:legalval selected="true">False</sci:legalval>
								<sci:legalval>True - For Each Data Record</sci:legalval>
								<sci:legalval>True - For Each Category</sci:legalval>
							</sci:arg>
							<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
								<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
								<sci:member>Parallel Processing Options Batch Size</sci:member>
								<sci:member>Parallel Processing Options Server</sci:member>
								<sci:member>Parallel Processing Options Preserve Order</sci:member>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
								<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
#rtcForEachCategory := (Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
elsif (#rtcForEachCategory) then
	SetDisabledDetails(&quot;This parameter is not applicable when &apos;RunToCompletion&apos; is set to &apos;True - For Each Category&apos;&quot;);
end if;
#parallel and not #rtcForEachCategory;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
								<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
								<sci:member>Parallel Processing Options Server Processes</sci:member>
								<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
								<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
								<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>Run subprotocol on grid engine if available.</sci:help>
								<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
								<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
								<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
								<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval>ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Raw HTML (Semantic UI)</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol AutoLayout</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>ReportSubProtocolNode</sci:value>
							</sci:arg>
							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>Component Revision</sci:help>
								<sci:value>790</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{D257B36C-6670-4D92-8489-8A5E09C04D4D}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>90 -395</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Raw HTML (Semantic UI).</sci:value>
								<sci:value>Type raw HTML code into this component. It will be inserted unchanged and unwrapped into the final Semantic UI HTML report. Any tags are allowed. Pipeline Pilot global variables in the $() notation are allowed.</sci:value>
								<sci:value>None</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
								<sci:value>None</sci:value>
								<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>16.1.0.1140</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Sticky Notes</sci:help>
							</sci:arg>
							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Options</sci:help>
								<sci:legalval>Owner Access Only</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>bondadx2</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Tue Jun 14 10:59:21 2016</sci:value>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Processing Order</sci:help>
								<sci:value>DrainTopDown</sci:value>
							</sci:arg>
							<sci:arg name="OriginalPackage" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>OriginalPackage</sci:help>
								<sci:value>scitegic/coreutils</sci:value>
							</sci:arg>
							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>By Ref</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Subprotocol Modified</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Subprotocol Made Link Into Copy</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Semantic UI\Utilities\Raw HTML (Semantic UI)</sci:value>
							</sci:arg>
						</sci:component>
						<sci:protocol/>
					</sci:data>
					<sci:data object="SciTegic.PropertyFunctions.1">
						<sci:component name="No-op" version="2">
							<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
								<sci:legalval selected="true">LeaveData</sci:legalval>
								<sci:legalval>ClearData</sci:legalval>
								<sci:legalval>DeleteData</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:help>the action to perform</sci:help>
								<sci:value>PassDataToPort</sci:value>
							</sci:arg>
							<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>the port to pass data to</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>COMPONENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Thu Sep 28 16:34:08 2006</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>No-op</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Evaluate Expression</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{6E468A38-A6F7-4371-B65B-501A3ED4C0D9}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>90 -720</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Sends all incoming records out the Pass port unchanged</sci:value>
								<sci:value>&lt;p&gt;Useful in subprotocols to capture the point of input. For example, if you wish to perform two different sequences of operations on the same input data, use No-op as the first component of the subprotocol and connect both pipes to the No-op output port.&lt;/p&gt;

&lt;p&gt;You can also use this component to simplify the layout for complex protocols. For example, if you have three Reader components that need to be connected to three Viewer components, placing a No-op in the middle reduces the number of required connections and clarifies the logic.&lt;/p&gt;
</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>6.0.1.1</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\No-op</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.Protocol.1">
						<sci:component name="Raw HTML (Semantic UI)" version="2">
							<sci:arg name="HTML" type="TextType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
								<sci:value>&lt;i class=&quot;dropdown icon&quot;&gt;&lt;/i&gt;
&lt;input class=&quot;search&quot; autocomplete=&quot;off&quot; tabindex=&quot;0&quot;&gt;
&lt;div class=&quot;default text&quot;&gt;$(Text)&lt;/div&gt;

&lt;div class=&quot;menu transition hidden&quot; tabindex=&quot;-1&quot;&gt;
$(_ss)
&lt;/div&gt;

&lt;/div&gt;
</sci:value>
							</sci:arg>
							<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
								<sci:member>RunToCompletion Categorize Using</sci:member>
								<sci:legalval selected="true">False</sci:legalval>
								<sci:legalval>True - For Each Data Record</sci:legalval>
								<sci:legalval>True - For Each Category</sci:legalval>
							</sci:arg>
							<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
								<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
								<sci:member>Parallel Processing Options Batch Size</sci:member>
								<sci:member>Parallel Processing Options Server</sci:member>
								<sci:member>Parallel Processing Options Preserve Order</sci:member>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
								<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
#rtcForEachCategory := (Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
elsif (#rtcForEachCategory) then
	SetDisabledDetails(&quot;This parameter is not applicable when &apos;RunToCompletion&apos; is set to &apos;True - For Each Category&apos;&quot;);
end if;
#parallel and not #rtcForEachCategory;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
								<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
								<sci:member>Parallel Processing Options Server Processes</sci:member>
								<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
								<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
								<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>Run subprotocol on grid engine if available.</sci:help>
								<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
								<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
								<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
								<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval>ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Raw HTML (Semantic UI)</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol AutoLayout</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>ReportSubProtocolNode</sci:value>
							</sci:arg>
							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>Component Revision</sci:help>
								<sci:value>790</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{D257B36C-6670-4D92-8489-8A5E09C04D4D}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>90 -1020</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Raw HTML (Semantic UI).</sci:value>
								<sci:value>Type raw HTML code into this component. It will be inserted unchanged and unwrapped into the final Semantic UI HTML report. Any tags are allowed. Pipeline Pilot global variables in the $() notation are allowed.</sci:value>
								<sci:value>None</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
								<sci:value>None</sci:value>
								<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>16.1.0.1140</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Sticky Notes</sci:help>
							</sci:arg>
							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Options</sci:help>
								<sci:legalval>Owner Access Only</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>bondadx2</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Tue Jun 14 10:59:21 2016</sci:value>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>2</sci:value>
							</sci:arg>
							<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Processing Order</sci:help>
								<sci:value>DrainTopDown</sci:value>
							</sci:arg>
							<sci:arg name="OriginalPackage" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>OriginalPackage</sci:help>
								<sci:value>scitegic/coreutils</sci:value>
							</sci:arg>
							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>By Ref</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Subprotocol Modified</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Subprotocol Made Link Into Copy</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Semantic UI\Utilities\Raw HTML (Semantic UI)</sci:value>
							</sci:arg>
						</sci:component>
						<sci:protocol/>
					</sci:data>
				</sci:protocol>
			</sci:data>
			<sci:data object="SciTegic.EvaluateExpression.1">
				<sci:component name="Custom Filter (PilotScript)" version="2">
					<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
						<sci:help>The PilotScript expression used to filter the data.</sci:help>
						<sci:member>Initial Expression</sci:member>
						<sci:member>Final Expression</sci:member>
						<sci:member>Keep Calculated Properties</sci:member>
						<sci:value>@&apos;Allow Multiple Selections&apos; is defined and @&apos;Allow Multiple Selections&apos;</sci:value>
					</sci:arg>
					<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
						<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
						<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
						<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:value>ComponentReturnsPass</sci:value>
						<sci:value>ComponentReturnsFail</sci:value>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval>ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
						<sci:help>Version of expression parser to use.</sci:help>
						<sci:value>2</sci:value>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Multiple?</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>FILTERNODE</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Custom Filter (PilotScript)</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>954 -520</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
						<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>102</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Data Access and Manipulation\Filters\Custom Filter (PilotScript)</sci:value>
					</sci:arg>
				</sci:component>
				<sci:proplist>
					<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
				</sci:proplist>
			</sci:data>
			<sci:data object="SciTegic.EvaluateExpression.1">
				<sci:component name="Custom Filter (PilotScript)" version="2">
					<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
						<sci:help>The PilotScript expression used to filter the data.</sci:help>
						<sci:member>Initial Expression</sci:member>
						<sci:member>Final Expression</sci:member>
						<sci:member>Keep Calculated Properties</sci:member>
						<sci:value>@Searchable is defined and @Searchable</sci:value>
					</sci:arg>
					<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
						<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
						<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
						<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:value>ComponentReturnsPass</sci:value>
						<sci:value>ComponentReturnsFail</sci:value>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval>ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
						<sci:help>Version of expression parser to use.</sci:help>
						<sci:value>2</sci:value>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Searchable?</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>FILTERNODE</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Custom Filter (PilotScript)</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>1530 -520</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
						<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>103</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Data Access and Manipulation\Filters\Custom Filter (PilotScript)</sci:value>
					</sci:arg>
				</sci:component>
				<sci:proplist>
					<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
				</sci:proplist>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="Subprotocol" version="2">
					<sci:arg name="Label" type="StringType" required="false" visibility="visible" multi="false">
						<sci:value>$(Label)</sci:value>
					</sci:arg>
					<sci:arg name="Label Location" type="StringType" required="false" visibility="visible" multi="false">
						<sci:value>$(Label Location)</sci:value>
					</sci:arg>
					<sci:arg name="Enabled" type="StringType" required="true" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:value>$(Enabled)</sci:value>
					</sci:arg>
					<sci:arg name="Width" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Width</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:value>$(Width)</sci:value>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
						<sci:value>disabled, inline</sci:value>
					</sci:arg>
					<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
						<sci:member>RunToCompletion Categorize Using</sci:member>
						<sci:legalval selected="true">False</sci:legalval>
						<sci:legalval>True - For Each Data Record</sci:legalval>
						<sci:legalval>True - For Each Category</sci:legalval>
					</sci:arg>
					<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
						<sci:member>Parallel Processing Options Batch Size</sci:member>
						<sci:member>Parallel Processing Options Server</sci:member>
						<sci:member>Parallel Processing Options Preserve Order</sci:member>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
						<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
#rtcForEachCategory := (Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
elsif (#rtcForEachCategory) then
	SetDisabledDetails(&quot;This parameter is not applicable when &apos;RunToCompletion&apos; is set to &apos;True - For Each Category&apos;&quot;);
end if;
#parallel and not #rtcForEachCategory;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
						<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
						<sci:member>Parallel Processing Options Server Processes</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
						<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Run subprotocol on grid engine if available.</sci:help>
						<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid Grid Options</sci:member>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
						<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Grid Options" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Use this to specify grid engine specific command line parameters to the job submission command. Leave blank to use defaults.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Field (raw) (Semantic UI)</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>ReportSubProtocolNode</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>790</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>2226 -520</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
						<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
						<sci:value>None</sci:value>
						<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>7.9.0.30</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval>Owner Access Only</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/coreutils</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Tue Jan 26 10:02:05 2010</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>104</sci:value>
					</sci:arg>
					<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Processing Order</sci:help>
						<sci:value>DrainTopDown</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol>
					<sci:data object="SciTegic.EvaluateExpression.1">
						<sci:component name="Custom Manipulator (PilotScript)" version="2">
							<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
								<sci:member>Initial Expression</sci:member>
								<sci:member>Final Expression</sci:member>
								<sci:member>Keep Calculated Properties</sci:member>
								<sci:value>if @Enabled is defined and @Enabled then
	@disabled := &apos;&apos;;
else
	@disabled := &apos;disabled&apos;;
end if;
</sci:value>
							</sci:arg>
							<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval>ComponentTakesInput</sci:legalval>
								<sci:legalval>ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Version of expression parser to use.</sci:help>
								<sci:value>2</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>State</sci:value>
							</sci:arg>
							<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
								<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
								<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>EXPRESSIONNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>90 -95</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Applies a PilotScript expression to each data record
</sci:value>
								<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>7.0.0.35</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>5</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Manipulators\Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.EvaluateExpression.1">
						<sci:component name="Custom Manipulator (PilotScript)" version="2">
							<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
								<sci:member>Initial Expression</sci:member>
								<sci:member>Final Expression</sci:member>
								<sci:member>Keep Calculated Properties</sci:member>
								<sci:value>if @&apos;Label Location&apos; is defined and @&apos;Label Location&apos; eq &apos;Left of Field&apos; then
	@inline := &apos;inline&apos;;
else
	@inline := &apos;&apos;;
end if;</sci:value>
							</sci:arg>
							<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval>ComponentTakesInput</sci:legalval>
								<sci:legalval>ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Version of expression parser to use.</sci:help>
								<sci:value>2</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Label Location</sci:value>
							</sci:arg>
							<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
								<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
								<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>EXPRESSIONNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>354 -95</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Applies a PilotScript expression to each data record
</sci:value>
								<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>7.0.0.35</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>6</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Manipulators\Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.Protocol.1">
						<sci:component name="Raw HTML (Semantic UI)" version="2">
							<sci:arg name="HTML" type="TextType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
								<sci:value>&lt;label&gt;$(label)&lt;/label&gt;</sci:value>
							</sci:arg>
							<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
								<sci:member>RunToCompletion Categorize Using</sci:member>
								<sci:legalval selected="true">False</sci:legalval>
								<sci:legalval>True - For Each Data Record</sci:legalval>
								<sci:legalval>True - For Each Category</sci:legalval>
							</sci:arg>
							<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
								<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
								<sci:member>Parallel Processing Options Batch Size</sci:member>
								<sci:member>Parallel Processing Options Server</sci:member>
								<sci:member>Parallel Processing Options Preserve Order</sci:member>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
								<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
#rtcForEachCategory := (Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
elsif (#rtcForEachCategory) then
	SetDisabledDetails(&quot;This parameter is not applicable when &apos;RunToCompletion&apos; is set to &apos;True - For Each Category&apos;&quot;);
end if;
#parallel and not #rtcForEachCategory;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
								<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
								<sci:member>Parallel Processing Options Server Processes</sci:member>
								<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
								<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
								<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>Run subprotocol on grid engine if available.</sci:help>
								<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
								<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
								<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
								<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval>ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Raw HTML (Semantic UI)</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol AutoLayout</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>ReportSubProtocolNode</sci:value>
							</sci:arg>
							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>Component Revision</sci:help>
								<sci:value>790</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{D257B36C-6670-4D92-8489-8A5E09C04D4D}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>90 -470</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Raw HTML (Semantic UI).</sci:value>
								<sci:value>Type raw HTML code into this component. It will be inserted unchanged and unwrapped into the final Semantic UI HTML report. Any tags are allowed. Pipeline Pilot global variables in the $() notation are allowed.</sci:value>
								<sci:value>None</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
								<sci:value>None</sci:value>
								<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>9.2.0.484</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Sticky Notes</sci:help>
							</sci:arg>
							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Options</sci:help>
								<sci:legalval>Owner Access Only</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>bondadx2</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Thu Mar 17 14:32:50 2016</sci:value>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>7</sci:value>
							</sci:arg>
							<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Processing Order</sci:help>
								<sci:value>DrainTopDown</sci:value>
							</sci:arg>
							<sci:arg name="OriginalPackage" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>OriginalPackage</sci:help>
								<sci:value>scitegic/coreutils</sci:value>
							</sci:arg>
							<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Subprotocol Modified</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>By Ref</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Subprotocol Made Link Into Copy</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Protocols\Quick Hits\semantic\Components\Semantic UI\Utilities\Raw HTML (Semantic UI)</sci:value>
							</sci:arg>
						</sci:component>
						<sci:protocol/>
					</sci:data>
					<sci:data object="SciTegic.EvaluateExpression.1">
						<sci:component name="Custom Filter (PilotScript)" version="2">
							<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
								<sci:help>The PilotScript expression used to filter the data.</sci:help>
								<sci:member>Initial Expression</sci:member>
								<sci:member>Final Expression</sci:member>
								<sci:member>Keep Calculated Properties</sci:member>
								<sci:value>@label is defined and @Label ne &apos;&apos;</sci:value>
							</sci:arg>
							<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
								<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
								<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
								<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
								<sci:help>Version of expression parser to use.</sci:help>
								<sci:value>2</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
								<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
								<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>FILTERNODE</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Custom Filter (PilotScript)</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>378 -470</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
								<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>4</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Filters\Custom Filter (PilotScript)</sci:value>
							</sci:arg>
						</sci:component>
						<sci:proplist>
							<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
						</sci:proplist>
					</sci:data>
					<sci:data object="SciTegic.PropertyFunctions.1">
						<sci:component name="No-op" version="2">
							<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
								<sci:legalval selected="true">LeaveData</sci:legalval>
								<sci:legalval>ClearData</sci:legalval>
								<sci:legalval>DeleteData</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:help>the action to perform</sci:help>
								<sci:value>PassDataToPort</sci:value>
							</sci:arg>
							<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>the port to pass data to</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>COMPONENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Thu Sep 28 16:34:08 2006</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>No-op</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Evaluate Expression</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{6E468A38-A6F7-4371-B65B-501A3ED4C0D9}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>90 -845</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Sends all incoming records out the Pass port unchanged</sci:value>
								<sci:value>&lt;p&gt;Useful in subprotocols to capture the point of input. For example, if you wish to perform two different sequences of operations on the same input data, use No-op as the first component of the subprotocol and connect both pipes to the No-op output port.&lt;/p&gt;

&lt;p&gt;You can also use this component to simplify the layout for complex protocols. For example, if you have three Reader components that need to be connected to three Viewer components, placing a No-op in the middle reduces the number of required connections and clarifies the logic.&lt;/p&gt;
</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>6.0.1.1</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>2</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\No-op</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.ComponentJavaPlugin.1">
						<sci:component name="Paragraph" version="2">
							<sci:arg name="Format" type="FormatType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;Specifies formatting to be applied to this element. Editing this parameter opens the Format Dialog.&lt;/p&gt;

&lt;p&gt;Depending on what this Format is being applied to, options may include:
&lt;ul&gt;&lt;li&gt;Font settings (e.g., Color, Size, Bold, Italic, Underline)&lt;/li&gt;
&lt;li&gt;Border settings (e.g., Color, Style, Width)&lt;/li&gt;
&lt;li&gt;Background settings (Color, Image)&lt;/li&gt;
&lt;li&gt;Alignment settings&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Only options that are relevant for this specific Format parameter will be displayed.&lt;/li&gt;
&lt;li&gt;Background Image: Allows you to select a background image for the reporting element. This image must be accessible to the Pipeline Pilot server. For example, there are some example images in the apps\scitegic\generic\dataroot\data\Images folder in your Pipeline Pilot installation (shortcut is &quot;generic\Images&quot; folder). To use your own images, you need to upload them to a location such as your userdir or jobdir. An easy way to do this is to use the Binary Reader component to read the file, and the Binary Writer component to save it to the chosen location. Supported image types include .gif, .jpg, .png, and .bmp.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
							</sci:arg>
							<sci:arg name="Position" type="PositionType" required="false" visibility="visible" multi="false">
								<sci:help>Specifies how this element is positioned. Editing this parameter opens the Position dialog, which enables you to change margins, paddings, width, and height.</sci:help>
							</sci:arg>
							<sci:arg name="Aggregate Data" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>If True, all incoming data records are aggregated into a single output record. 

If False, each incoming data record results in an output record. This behavior is similar to using the component in a RunToCompletion subprotocol.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Links and Actions" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
								<sci:help>Links and actions to be applied to the report element produced by this component.</sci:help>
								<sci:member>Link</sci:member>
								<sci:member>Link Target</sci:member>
								<sci:member>HTML Attributes</sci:member>
								<sci:member>Tooltip</sci:member>
								<sci:member>Protocol Link</sci:member>
								<sci:member>Link Options</sci:member>
							</sci:arg>
							<sci:arg name="Link" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>&lt;p&gt;An optional parameter specifying a link for the reporting element produced by this component. The &lt;i&gt;Link&lt;/i&gt; value can be an internal report link or an external URL.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Internal: A string that points to a &lt;i&gt;Link Target&lt;/i&gt; in the report. Both the &lt;i&gt;Link&lt;/i&gt; and &lt;i&gt;Link Target&lt;/i&gt; values need to match for an internal link to work.&lt;/li&gt;
&lt;li&gt;External: A string that points to an external URL such as &apos;http://www.sitename.com&apos;, &apos;ftp://www.sitename.com&apos;, or a file URL. A file URL can be in one of these forms:
&lt;ul&gt;
&lt;li&gt;&apos;file:///C:/.../scitegic root/.../document.pdf&apos; - when using an absolute path within the Pipeline Pilot installation folder&lt;/li&gt;
&lt;li&gt;&apos;file://///machine_name/C/.../document.pdf&apos; - when using a Windows UNC path visible to the Pipeline Pilot server&lt;/li&gt;
&lt;li&gt;&apos;file:///relative_path/document.pdf&apos; - when using a path, relative to &lt;i&gt;@SciTegicRoot&lt;/i&gt;&lt;/li&gt;
&lt;li&gt;&apos;file://machine_name.domain_name.com/C/.../document.pdf&apos; - when using a path with a fully qualified machine name&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
&lt;b&gt;Example:&lt;/b&gt;
To create a link from a combination of a property and static text, create a valid PilotScript expression. For example, if you have internal web pages linking to research projects that have addresses of the form: &lt;i&gt;http://mydomain.com/ProjectID&lt;/i&gt;, where &lt;i&gt;ProjectID&lt;/i&gt; is the actual project ID, and also a local property on the datastream, you would use:
&lt;p&gt;&lt;code&gt;&apos;http://mydomain.com&apos; . ProjectID&lt;/code&gt;
&lt;p&gt;as the value for &lt;i&gt;Link&lt;/i&gt;.</sci:help>
								<sci:enabledscript>prefixLength := StringLen(&apos;Link&apos;);
fullLength := StringLen(ParameterName());
prefix := SubString(ParameterName(), 1, fullLength - prefixLength); 
protocolLinkParameterName := prefix.&apos;Protocol Link&apos;;
enabled := true;
if (parameter(protocolLinkParameterName) is Defined ) then 
	enabled := Parameter(protocolLinkParameterName) eq &apos;&apos;;
	if (not enabled) then
		 SetDisabledDetails(&apos;This parameter is enabled only when Protocol Link is not set&apos;);
	End if;
end if;	
enabled;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Protocol Link" type="ProtocolLinkType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>&lt;p&gt;Specifies a link that runs a protocol.  Editing this parameter opens up the Protocol Link Dialog.&lt;/p&gt;</sci:help>
								<sci:enabledscript>prefixLength := StringLen(&apos;Protocol Link&apos;);
fullLength := StringLen(ParameterName());
prefix := SubString(ParameterName(), 1, fullLength - prefixLength); 
linkParameterName := prefix.&apos;Link&apos;;
enabled := true;
if (parameter(linkParameterName) is Defined ) then 
	enabled := Parameter(linkParameterName) eq &apos;&apos;;
	if (not enabled) then
		 SetDisabledDetails(&apos;This parameter is enabled only when Link is not set&apos;);
	End if;
End if;
enabled;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Link Options" type="LinkOptionsType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Specifies how to display pages linked to the reporting element. 
Applies only if &lt;i&gt;Link&lt;/i&gt; or &lt;i&gt;Protocol Link&lt;/i&gt; are set for the component.</sci:help>
							</sci:arg>
							<sci:arg name="Link Target" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Sets this element as the destination for links from other elements in the report. The value of &lt;i&gt;Link Target&lt;/i&gt; can be text or a property name, and should match the value of &lt;i&gt;Link&lt;/i&gt; in another report component.  In the resulting report, when the element with &lt;i&gt;Link&lt;/i&gt; is clicked, the element with the matching &lt;i&gt;Link Target&lt;/i&gt; is brought to the top of the report page.</sci:help>
							</sci:arg>
							<sci:arg name="Tooltip" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>An optional tooltip for this reporting element.</sci:help>
							</sci:arg>
							<sci:arg name="HTML Attributes" type="HTMLAttributesType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Defines attributes for the reporting element. These attributes can be used by JavaScript code that is &lt;a href=&quot;javascript:DoLink(&apos;{262A8E5D-BB8E-4dc4-A6F5-A61FC6047EC8}&apos;)&quot;&gt;embedded in&lt;/a&gt; or &lt;a href=&quot;javascript:DoLink(&apos;{6DF7D4FA-28BC-453b-8882-DE55C7CFFBF9}&apos;)&quot;&gt;included by&lt;/a&gt; the HTML report. One very common attribute is &quot;id&quot; which allows access to the element using the document.getElementById(id) method. Event handlers such as &quot;onclick&quot; and &quot;onmouseover&quot; are also common attributes.</sci:help>
								<sci:value>100</sci:value>
								<sci:value>class</sci:value>
								<sci:value>&apos;$(disabled) $(Width) $(inline) field&apos;</sci:value>
							</sci:arg>
							<sci:arg name="Column Settings" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Column settings control how the element appears when it is used inside a table.</sci:help>
								<sci:member>Column Settings Header Text</sci:member>
								<sci:member>Column Settings Header Format</sci:member>
								<sci:member>Column Settings Header Position</sci:member>
								<sci:member>Column Settings Cell Format</sci:member>
								<sci:member>Column Settings Cell Position</sci:member>
							</sci:arg>
							<sci:arg name="Column Settings Header Text" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
								<sci:help>When the element is used within a Table component, this parameter sets the text displayed at the top of its column.</sci:help>
							</sci:arg>
							<sci:arg name="Column Settings Header Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
								<sci:help>&lt;p&gt;When used in a table, this parameter sets the format of the text displayed 
at the top of its column.
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Font Size: Sets font size&lt;/li&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;/ul&gt;</sci:help>
								<sci:value>600</sci:value>
							</sci:arg>
							<sci:arg name="Column Settings Header Position" type="PositionType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
								<sci:help>When the element is used within a Table component, this parameter sets the position of the text displayed at the top of its column.</sci:help>
								<sci:value>500</sci:value>
								<sci:value>100.0</sci:value>
								<sci:value>Percent</sci:value>
								<sci:value>100.0</sci:value>
								<sci:value>Percent</sci:value>
								<sci:value>0.0</sci:value>
								<sci:value>Pixels</sci:value>
								<sci:value>0.0</sci:value>
								<sci:value>Pixels</sci:value>
								<sci:value>0.0</sci:value>
								<sci:value>Pixels</sci:value>
								<sci:value>0.0</sci:value>
								<sci:value>Pixels</sci:value>
								<sci:value>0.0</sci:value>
								<sci:value>Pixels</sci:value>
								<sci:value>0.0</sci:value>
								<sci:value>Pixels</sci:value>
								<sci:value>0.0</sci:value>
								<sci:value>Pixels</sci:value>
								<sci:value>0.0</sci:value>
								<sci:value>Pixels</sci:value>
							</sci:arg>
							<sci:arg name="Column Settings Cell Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
								<sci:help>When used in a table, this parameter sets the format of the cells in the column.
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Font Size: Sets font size&lt;/li&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;/ul&gt;</sci:help>
								<sci:value>600</sci:value>
							</sci:arg>
							<sci:arg name="Column Settings Cell Position" type="PositionType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
								<sci:help>When the element is used within a Table component, this parameter sets the position of the cells in the column.</sci:help>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>8</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>738 -845</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>REPORTTEXTNODE</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Plug In</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Groups text objects into a paragraph</sci:value>
								<sci:value>&lt;p&gt;A paragraph can be used to display a collection of Text objects.  This component provides placement and word-wrapping capabilities that don&apos;t occur when using a Tile component.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/report/docs/reporting_basic.pdf&apos;)&quot;&gt;Report Design Essentials&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>One or more data records representing Text reporting objects</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>A data record representing the paragraph is sent to the pass port.</sci:value>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>8.0.0.14</sci:value>
							</sci:arg>
							<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>DrainTopDown</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{07BA2ACE-48B1-4be0-BAD8-F840F8AD7D1E}</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/report</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Fri Feb 12 10:00:00 2010</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Paragraph</sci:value>
							</sci:arg>
							<sci:arg name="Link Options Mapping" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Mapping of the Format parameter name to the Link Options parameter name.</sci:help>
								<sci:value>Format</sci:value>
								<sci:value>Link Options</sci:value>
							</sci:arg>
							<sci:arg name="Use Package" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>scitegic/report</sci:value>
							</sci:arg>
							<sci:arg name="JavaClass" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>com.scitegic.report.component.ParagraphComponent</sci:value>
							</sci:arg>
							<sci:arg name="CaptureStdoutStderr" type="BoolType" required="true" visibility="nevershow" multi="false">
								<sci:help>CaptureStdoutStderr</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Reporting and Visualization\Basic Reporting\Elements\Paragraph</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:connectid from="7" to="4" type="true"/>
					<sci:connectid from="4" to="8" type="true"/>
					<sci:connectid from="2" to="8" type="true"/>
				</sci:protocol>
			</sci:data>
			<sci:data object="SciTegic.SeparateValues.1">
				<sci:component name="Unmerge Data" version="2">
					<sci:arg name="PropertyNames" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;The names of the one or more properties to separate and return as separate data records.  If no property names are given, then all properties with
multiple values will be unmerged. If multiple properties are unmerged, the number of unmerged records is the number of values of a property with the maximum number of values.</sci:help>
					</sci:arg>
					<sci:arg name="Additional Options" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>Contains less commonly used parameters</sci:help>
						<sci:member>Large Data Records</sci:member>
					</sci:arg>
					<sci:arg name="Large Data Records" type="BoolType" required="false" visibility="visible" multi="false">
						<sci:help>When individual data records are very large as may be the case with Images, Sequence Analysis or Gene Expression Data, or Text Analytics annotations, this component can easily run out of memory on 32-bit systems.  If each of your records are particularly large, setting this parameter to true will significantly reduce the memory usage of the component but with the tradeoff of slower performance.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Fri Feb 27 15:13:59 2009</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Unmerge Data</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Unmerge Data</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>GENERATORNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{5E28C170-2FEC-4A3C-90A6-2DCEAA330E9D}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>90 -670</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Separates data records containing array properties into individual records with one array value per record</sci:value>
						<sci:value>&lt;p&gt;Each incoming data record with more than one value for the property or properties specified by &lt;i&gt;PropertyNames&lt;/i&gt; is duplicated for each of the values.  For example, an input data record with three values will generate three output data records.  Each output record will contain one of the values for the &lt;i&gt;PropertyNames&lt;/i&gt; property, and all other properties will be identical.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;Large Data Records&lt;/i&gt;: When individual data records are very large as may be the case with Images, Sequence Analysis or Gene Expression Data, or Text Analytics annotations, this component can easily run out of memory on 32-bit systems.  If each data record is particularly large, setting &lt;i&gt;Large Data Records&lt;/i&gt; to true will significantly reduce the memory usage of the component but with the tradeoff of slower performance.&lt;/p&gt;


&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If no property names are given, then all properties with multiple values are unmerged.  In this case, unexpected occurrences of arrays in a property will cause unintentional unmerge operations.  Try to specify a value for &lt;i&gt;PropertyNames&lt;/i&gt; if possible.&lt;/li&gt;
&lt;li&gt;If multiple unmerge properties are specified, the number of data records that result from unmerging a given incoming data record is equal to the number of values of the unmerge property that has the most values.  That is, if two unmerge properties, &quot;A&quot; and &quot;B&quot; are specified where A has 5 values and B has 7 values, then 7 data records will result.  The first 5 records will contain, in order, the 5 values of A.  For the last two records, A will be undefined.  All other properties will be duplicated on each record.&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Data records containing the separated values for the property or properties specified.</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>105</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Data Access and Manipulation\Manipulators\Unmerge Data</sci:value>
					</sci:arg>
				</sci:component>
				<sci:proplist>
					<sci:propval name="RegistrationVersion">6.0.0.44</sci:propval>
				</sci:proplist>
			</sci:data>
			<sci:data object="SciTegic.EvaluateExpression.1">
				<sci:component name="Custom Manipulator (PilotScript)" version="2">
					<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
						<sci:member>Initial Expression</sci:member>
						<sci:member>Final Expression</sci:member>
						<sci:member>Keep Calculated Properties</sci:member>
						<sci:value>if @Value is defined and @Value ne &apos;&apos; then
	@_s .= &apos;&lt;div class=&quot;item&quot; data-value=&quot;&apos;.property(@Value).&apos;&quot;&gt;&apos;.property(@Text).&apos;&lt;/div&gt;&apos;.&quot;\n&quot;;
else
	@_s .= &apos;&lt;div class=&quot;item&quot; data-value=&quot;&apos;.property(@Text).&apos;&quot;&gt;&apos;.property(@Text).&apos;&lt;/div&gt;&apos;.&quot;\n&quot;;
end if;</sci:value>
					</sci:arg>
					<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
						<sci:value>@_s := &apos;&apos;;</sci:value>
					</sci:arg>
					<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
						<sci:value>@_ss := @_s;</sci:value>
					</sci:arg>
					<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>Version of expression parser to use.</sci:help>
						<sci:value>2</sci:value>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>search choices</sci:value>
					</sci:arg>
					<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
						<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
						<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Custom Manipulator (PilotScript)</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>EXPRESSIONNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>378 -670</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Applies a PilotScript expression to each data record
</sci:value>
						<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>7.0.0.35</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>106</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Data Access and Manipulation\Manipulators\Custom Manipulator (PilotScript)</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.EvaluateExpression.1">
				<sci:component name="Custom Filter (PilotScript)" version="2">
					<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
						<sci:help>The PilotScript expression used to filter the data.</sci:help>
						<sci:member>Initial Expression</sci:member>
						<sci:member>Final Expression</sci:member>
						<sci:member>Keep Calculated Properties</sci:member>
						<sci:value>@Enabled</sci:value>
					</sci:arg>
					<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
						<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
						<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
						<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:value>ComponentReturnsPass</sci:value>
						<sci:value>ComponentReturnsFail</sci:value>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval>ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
						<sci:help>Version of expression parser to use.</sci:help>
						<sci:value>2</sci:value>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Enabled?</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>FILTERNODE</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Custom Filter (PilotScript)</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>666 -670</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
						<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>107</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Data Access and Manipulation\Filters\Custom Filter (PilotScript)</sci:value>
					</sci:arg>
				</sci:component>
				<sci:proplist>
					<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
				</sci:proplist>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="Subprotocol" version="2">
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
						<sci:member>RunToCompletion Categorize Using</sci:member>
						<sci:legalval selected="true">False</sci:legalval>
						<sci:legalval>True - For Each Data Record</sci:legalval>
						<sci:legalval>True - For Each Category</sci:legalval>
					</sci:arg>
					<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
						<sci:member>Parallel Processing Options Batch Size</sci:member>
						<sci:member>Parallel Processing Options Server</sci:member>
						<sci:member>Parallel Processing Options Preserve Order</sci:member>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
						<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
#rtcForEachCategory := (Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
elsif (#rtcForEachCategory) then
	SetDisabledDetails(&quot;This parameter is not applicable when &apos;RunToCompletion&apos; is set to &apos;True - For Each Category&apos;&quot;);
end if;
#parallel and not #rtcForEachCategory;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="false">
						<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
						<sci:member>Parallel Processing Options Server Processes</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
						<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Run subprotocol on grid engine if available.</sci:help>
						<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid Grid Options</sci:member>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Grid Options" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Use this to specify grid engine specific command line parameters to the job submission command. Leave blank to use defaults.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>dropdown details</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>ReportSubProtocolNode</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>790</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>1818 -670</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
						<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>7.9.0.30</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval>Owner Access Only</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/coreutils</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Tue Jan 26 10:02:05 2010</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>108</sci:value>
					</sci:arg>
					<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Processing Order</sci:help>
						<sci:value>DrainTopDown</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol>
					<sci:data object="SciTegic.Protocol.1">
						<sci:component name="Raw HTML (Semantic UI)" version="2">
							<sci:arg name="HTML" type="TextType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
								<sci:value>
&lt;div class=&quot;ui fluid dropdown selection&quot;&gt;
</sci:value>
							</sci:arg>
							<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
								<sci:member>RunToCompletion Categorize Using</sci:member>
								<sci:legalval selected="true">False</sci:legalval>
								<sci:legalval>True - For Each Data Record</sci:legalval>
								<sci:legalval>True - For Each Category</sci:legalval>
							</sci:arg>
							<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
								<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
								<sci:member>Parallel Processing Options Batch Size</sci:member>
								<sci:member>Parallel Processing Options Server</sci:member>
								<sci:member>Parallel Processing Options Preserve Order</sci:member>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
								<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
#rtcForEachCategory := (Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
elsif (#rtcForEachCategory) then
	SetDisabledDetails(&quot;This parameter is not applicable when &apos;RunToCompletion&apos; is set to &apos;True - For Each Category&apos;&quot;);
end if;
#parallel and not #rtcForEachCategory;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
								<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
								<sci:member>Parallel Processing Options Server Processes</sci:member>
								<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
								<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
								<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>Run subprotocol on grid engine if available.</sci:help>
								<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
								<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
								<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
								<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval>ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Raw HTML (Semantic UI)</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol AutoLayout</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>ReportSubProtocolNode</sci:value>
							</sci:arg>
							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>Component Revision</sci:help>
								<sci:value>790</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{D257B36C-6670-4D92-8489-8A5E09C04D4D}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>90 -95</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Raw HTML.</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
								<sci:value>None</sci:value>
								<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>9.2.0.484</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Sticky Notes</sci:help>
							</sci:arg>
							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Options</sci:help>
								<sci:legalval>Owner Access Only</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>bondadx2</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Fri Feb 26 21:37:38 2016</sci:value>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>3</sci:value>
							</sci:arg>
							<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Processing Order</sci:help>
								<sci:value>DrainTopDown</sci:value>
							</sci:arg>
							<sci:arg name="OriginalPackage" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>OriginalPackage</sci:help>
								<sci:value>scitegic/coreutils</sci:value>
							</sci:arg>
							<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Subprotocol Modified</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>By Ref</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Subprotocol Made Link Into Copy</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Protocols\Quick Hits\semantic\Components\Semantic UI\Utilities\Raw HTML (Semantic UI)</sci:value>
							</sci:arg>
						</sci:component>
						<sci:protocol/>
					</sci:data>
					<sci:data object="SciTegic.PropertyFunctions.1">
						<sci:component name="No-op" version="2">
							<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
								<sci:legalval selected="true">LeaveData</sci:legalval>
								<sci:legalval>ClearData</sci:legalval>
								<sci:legalval>DeleteData</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:help>the action to perform</sci:help>
								<sci:value>PassDataToPort</sci:value>
							</sci:arg>
							<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>the port to pass data to</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>COMPONENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Thu Sep 28 16:34:08 2006</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>No-op</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Evaluate Expression</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{6E468A38-A6F7-4371-B65B-501A3ED4C0D9}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>90 -395</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Sends all incoming records out the Pass port unchanged</sci:value>
								<sci:value>&lt;p&gt;Useful in subprotocols to capture the point of input. For example, if you wish to perform two different sequences of operations on the same input data, use No-op as the first component of the subprotocol and connect both pipes to the No-op output port.&lt;/p&gt;

&lt;p&gt;You can also use this component to simplify the layout for complex protocols. For example, if you have three Reader components that need to be connected to three Viewer components, placing a No-op in the middle reduces the number of required connections and clarifies the logic.&lt;/p&gt;
</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>6.0.1.1</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\No-op</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.Protocol.1">
						<sci:component name="Raw HTML (Semantic UI)" version="2">
							<sci:arg name="HTML" type="TextType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
								<sci:value>&lt;i class=&quot;dropdown icon&quot;&gt;&lt;/i&gt;
&lt;div class=&quot;default text&quot;&gt;$(Text)&lt;/div&gt;

&lt;div class=&quot;menu transition hidden&quot; tabindex=&quot;-1&quot;&gt;
$(_ss)
&lt;/div&gt;

&lt;/div&gt;
</sci:value>
							</sci:arg>
							<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
								<sci:member>RunToCompletion Categorize Using</sci:member>
								<sci:legalval selected="true">False</sci:legalval>
								<sci:legalval>True - For Each Data Record</sci:legalval>
								<sci:legalval>True - For Each Category</sci:legalval>
							</sci:arg>
							<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
								<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
								<sci:member>Parallel Processing Options Batch Size</sci:member>
								<sci:member>Parallel Processing Options Server</sci:member>
								<sci:member>Parallel Processing Options Preserve Order</sci:member>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
								<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
#rtcForEachCategory := (Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
elsif (#rtcForEachCategory) then
	SetDisabledDetails(&quot;This parameter is not applicable when &apos;RunToCompletion&apos; is set to &apos;True - For Each Category&apos;&quot;);
end if;
#parallel and not #rtcForEachCategory;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
								<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
								<sci:member>Parallel Processing Options Server Processes</sci:member>
								<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
								<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
								<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>Run subprotocol on grid engine if available.</sci:help>
								<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
								<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
								<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
								<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval>ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Raw HTML (Semantic UI)</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol AutoLayout</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>ReportSubProtocolNode</sci:value>
							</sci:arg>
							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>Component Revision</sci:help>
								<sci:value>790</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{D257B36C-6670-4D92-8489-8A5E09C04D4D}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>90 -720</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Raw HTML.</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
								<sci:value>None</sci:value>
								<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>9.2.0.484</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Sticky Notes</sci:help>
							</sci:arg>
							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Options</sci:help>
								<sci:legalval>Owner Access Only</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>bondadx2</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Fri Feb 26 21:37:38 2016</sci:value>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>4</sci:value>
							</sci:arg>
							<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Processing Order</sci:help>
								<sci:value>DrainTopDown</sci:value>
							</sci:arg>
							<sci:arg name="OriginalPackage" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>OriginalPackage</sci:help>
								<sci:value>scitegic/coreutils</sci:value>
							</sci:arg>
							<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Subprotocol Modified</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>By Ref</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Subprotocol Made Link Into Copy</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Protocols\Quick Hits\semantic\Components\Semantic UI\Utilities\Raw HTML (Semantic UI)</sci:value>
							</sci:arg>
						</sci:component>
						<sci:protocol/>
					</sci:data>
				</sci:protocol>
			</sci:data>
			<sci:data object="SciTegic.ComponentJavaPlugin.1">
				<sci:component name="List Box" version="2">
					<sci:arg name="Text" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;The text, or property containing the text, to be shown as an entry in the list box.&lt;/p&gt;</sci:help>
						<sci:member>Number of Displayed Rows</sci:member>
						<sci:member>Allow Multiple Selections</sci:member>
						<sci:member>Selected</sci:member>
						<sci:member>Value</sci:member>
						<sci:value>$(Text)</sci:value>
					</sci:arg>
					<sci:arg name="Value" type="ExpressionType" required="false" visibility="visible" multi="false">
						<sci:help>The value that will be submitted for each item in the list. If not specified, the value of &lt;i&gt;Text&lt;/i&gt; will be submitted.

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;

&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
Due to inconsistent input value attribute handling by various browsers, it is recommended that the Value parameter not include leading or trailing whitespace. Depending on the browser, this whitespace may be omitted when the form is submitted. A possible workaround is to flank the entire value with a special character that can then be stripped when the input value is processed in the work protocol.
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
</sci:help>
						<sci:value>$(Value)</sci:value>
					</sci:arg>
					<sci:arg name="Number of Displayed Rows" type="LongType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;The number of rows to show in the list box.  If the number of items exceeds the number of rows, then the list box will contain a scroll bar.&lt;/p&gt;

&lt;p&gt;To create a drop-down list, set the number of rows to 1.&lt;/p&gt;</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="Allow Multiple Selections" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;If true, multiple selections can be made in the list box.  Otherwise, only one entry can be selected.&lt;/p&gt;</sci:help>
						<sci:value>$(Allow Multiple Selections)</sci:value>
					</sci:arg>
					<sci:arg name="Selected" type="ExpressionType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;An optional PilotScript expression evaluating to True or False that determines if the current entry is pre-selected in the list box. For example, if the Text parameter is set to a property &apos;MyPet&apos; and you want to have a value &apos;Cat&apos; selected, then do the following:&lt;/p&gt;

&lt;code&gt;MyPet eq &apos;Cat&apos;;&lt;/code&gt;

&lt;p&gt;If you want the last item in a single selection list box to be pre-selected, simply enter True.&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;

&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
</sci:help>
						<sci:value>$(Selected)</sci:value>
					</sci:arg>
					<sci:arg name="Parameter to Map" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;The name of a parameter on the target protocol that this component&apos;s value should be mapped to.&lt;/p&gt;</sci:help>
						<sci:value>$(Parameter to Map)</sci:value>
					</sci:arg>
					<sci:arg name="Format" type="FormatType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;Specifies formatting to be applied to this element. Editing this parameter opens the Format Dialog.&lt;/p&gt;

&lt;p&gt;Depending on what this Format is being applied to, options may include:
&lt;ul&gt;&lt;li&gt;Font settings (e.g., Color, Size, Bold, Italic, Underline)&lt;/li&gt;
&lt;li&gt;Border settings (e.g., Color, Style, Width)&lt;/li&gt;
&lt;li&gt;Background settings (Color, Image)&lt;/li&gt;
&lt;li&gt;Alignment settings&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Only options that are relevant for this specific Format parameter will be displayed.&lt;/li&gt;
&lt;li&gt;Background Image: Allows you to select a background image for the reporting element. 
This image must be accessible to the Pipeline Pilot server. For example, 
you can copy images to the apps\scitegic\generic\dataroot\data\Images folder in your 
Pipeline Pilot installation to make them available. Supported image types include 
.gif, .jpg, .png, and .bmp.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
					</sci:arg>
					<sci:arg name="Position" type="PositionType" required="false" visibility="visible" multi="false">
						<sci:help>Specifies how this element is positioned. Editing this parameter opens the Position dialog, which enables you to change margins, paddings, width, and height.</sci:help>
					</sci:arg>
					<sci:arg name="Links and Actions" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>Links and actions to be applied to the report element produced by this component.</sci:help>
						<sci:member>Link Target</sci:member>
						<sci:member>HTML Attributes</sci:member>
						<sci:member>Tooltip</sci:member>
					</sci:arg>
					<sci:arg name="Link Target" type="ExpressionType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Sets this element as the destination for links from other elements in the report. The value of &lt;i&gt;Link Target&lt;/i&gt; can be text or a property name, and should match the value of &lt;i&gt;Link&lt;/i&gt; in another report component.  In the resulting report, when the element with &lt;i&gt;Link&lt;/i&gt; is clicked, the element with the matching &lt;i&gt;Link Target&lt;/i&gt; is brought to the top of the report page.</sci:help>
					</sci:arg>
					<sci:arg name="Tooltip" type="ExpressionType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>An optional tooltip for this reporting element.</sci:help>
					</sci:arg>
					<sci:arg name="HTML Attributes" type="HTMLAttributesType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Defines attributes for the reporting element. These attributes can be used by JavaScript code that is &lt;a href=&quot;javascript:DoLink(&apos;{262A8E5D-BB8E-4dc4-A6F5-A61FC6047EC8}&apos;)&quot;&gt;embedded in&lt;/a&gt; or &lt;a href=&quot;javascript:DoLink(&apos;{6DF7D4FA-28BC-453b-8882-DE55C7CFFBF9}&apos;)&quot;&gt;included by&lt;/a&gt; the HTML report. One very common attribute is &quot;id&quot; which allows access to the element using the document.getElementById(id) method. Event handlers such as &quot;onclick&quot; and &quot;onmouseover&quot; are also common attributes.</sci:help>
						<sci:value>100</sci:value>
						<sci:value>class</sci:value>
						<sci:value>&apos;ui dropdown&apos;</sci:value>
						<sci:value>id</sci:value>
						<sci:value>&apos;$(guid)&apos;</sci:value>
					</sci:arg>
					<sci:arg name="Column Settings" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Column settings control how the element appears when it is used inside a table.</sci:help>
						<sci:member>Column Settings Header Text</sci:member>
						<sci:member>Column Settings Header Format</sci:member>
						<sci:member>Column Settings Header Position</sci:member>
						<sci:member>Column Settings Cell Format</sci:member>
						<sci:member>Column Settings Cell Position</sci:member>
					</sci:arg>
					<sci:arg name="Column Settings Header Text" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>When the element is used within a Table component, this parameter sets the text displayed at the top of its column.</sci:help>
					</sci:arg>
					<sci:arg name="Column Settings Header Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>&lt;p&gt;When used in a table, this parameter sets the format of the text displayed 
at the top of its column.
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Font Size: Sets font size&lt;/li&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:value>600</sci:value>
					</sci:arg>
					<sci:arg name="Column Settings Header Position" type="PositionType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>When the element is used within a Table component, this parameter sets the position of the text displayed at the top of its column.</sci:help>
						<sci:value>500</sci:value>
						<sci:value>100.0</sci:value>
						<sci:value>Percent</sci:value>
						<sci:value>100.0</sci:value>
						<sci:value>Percent</sci:value>
						<sci:value>0.0</sci:value>
						<sci:value>Pixels</sci:value>
						<sci:value>0.0</sci:value>
						<sci:value>Pixels</sci:value>
						<sci:value>0.0</sci:value>
						<sci:value>Pixels</sci:value>
						<sci:value>0.0</sci:value>
						<sci:value>Pixels</sci:value>
						<sci:value>0.0</sci:value>
						<sci:value>Pixels</sci:value>
						<sci:value>0.0</sci:value>
						<sci:value>Pixels</sci:value>
						<sci:value>0.0</sci:value>
						<sci:value>Pixels</sci:value>
						<sci:value>0.0</sci:value>
						<sci:value>Pixels</sci:value>
					</sci:arg>
					<sci:arg name="Column Settings Cell Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>When used in a table, this parameter sets the format of the cells in the column.
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Font Size: Sets font size&lt;/li&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:value>600</sci:value>
					</sci:arg>
					<sci:arg name="Column Settings Cell Position" type="PositionType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>When the element is used within a Table component, this parameter sets the position of the cells in the column.</sci:help>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>REPORTTEXTNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{5D697158-1CFF-49B3-89F8-E2409B4CBFD3}</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Plug In</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Adds a list box form element to a report</sci:value>
						<sci:value>&lt;p&gt;Used to select one or more items from a list, to be passed to the work protocol.  Single or multi-select can be set.  If multiple values are selected, they are passed as an array.&lt;/p&gt;

&lt;p&gt;This component accepts both regular data records and array data.  If multiple records with array data are received, a list box for each data record will be created.&lt;/p&gt;

&lt;p&gt;You can set the number of rows to be displayed.  If the number of rows is less than the number of values to be displayed, then a vertical scroll bar is automatically added.  To create a drop-down list, set the number of rows to be displayed to 1.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/report/docs/reporting_basic.pdf&apos;)&quot;&gt;Report Design Essentials&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/reportadv/docs/reportadv_interactive.pdf&apos;)&quot;&gt;Interactive Reporting and Form Design&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>Data records containing entries to be shown in a List Box.</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>A data record representing the List Box and its associated data.</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>8.0.0.14</sci:value>
					</sci:arg>
					<sci:arg name="Link Options Mapping" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Mapping of the Format parameter name to the Link Options parameter name.</sci:help>
					</sci:arg>
					<sci:arg name="Use Package" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>scitegic/report</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>109</sci:value>
					</sci:arg>
					<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>DrainTopDown</sci:value>
					</sci:arg>
					<sci:arg name="JavaClass" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>com.scitegic.report.component.forms.ListBoxComponent</sci:value>
					</sci:arg>
					<sci:arg name="CaptureStdoutStderr" type="BoolType" required="true" visibility="nevershow" multi="false">
						<sci:help>CaptureStdoutStderr</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>List Box</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>1218 -720</sci:value>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/reportadv</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Fri Feb 12 10:00:00 2010</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Reporting and Visualization\Web Application Development\Forms\List Box</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.ComponentJavaPlugin.1">
				<sci:component name="List Box" version="2">
					<sci:arg name="Text" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;The text, or property containing the text, to be shown as an entry in the list box.&lt;/p&gt;</sci:help>
						<sci:member>Number of Displayed Rows</sci:member>
						<sci:member>Allow Multiple Selections</sci:member>
						<sci:member>Selected</sci:member>
						<sci:member>Value</sci:member>
						<sci:value>$(Text)</sci:value>
					</sci:arg>
					<sci:arg name="Value" type="ExpressionType" required="false" visibility="visible" multi="false">
						<sci:help>The value that will be submitted for each item in the list. If not specified, the value of &lt;i&gt;Text&lt;/i&gt; will be submitted.

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;

&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
Due to inconsistent input value attribute handling by various browsers, it is recommended that the Value parameter not include leading or trailing whitespace. Depending on the browser, this whitespace may be omitted when the form is submitted. A possible workaround is to flank the entire value with a special character that can then be stripped when the input value is processed in the work protocol.
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
</sci:help>
						<sci:value>$(Value)</sci:value>
					</sci:arg>
					<sci:arg name="Number of Displayed Rows" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;The number of rows to show in the list box.  If the number of items exceeds the number of rows, then the list box will contain a scroll bar.&lt;/p&gt;

&lt;p&gt;To create a drop-down list, set the number of rows to 1.&lt;/p&gt;</sci:help>
						<sci:value>$(Number of Displayed Rows)</sci:value>
					</sci:arg>
					<sci:arg name="Allow Multiple Selections" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;If true, multiple selections can be made in the list box.  Otherwise, only one entry can be selected.&lt;/p&gt;</sci:help>
						<sci:value>$(Allow Multiple Selections)</sci:value>
					</sci:arg>
					<sci:arg name="Selected" type="ExpressionType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;An optional PilotScript expression evaluating to True or False that determines if the current entry is pre-selected in the list box. For example, if the Text parameter is set to a property &apos;MyPet&apos; and you want to have a value &apos;Cat&apos; selected, then do the following:&lt;/p&gt;

&lt;code&gt;MyPet eq &apos;Cat&apos;;&lt;/code&gt;

&lt;p&gt;If you want the last item in a single selection list box to be pre-selected, simply enter True.&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;

&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
</sci:help>
						<sci:value>$(Selected)</sci:value>
					</sci:arg>
					<sci:arg name="Parameter to Map" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;The name of a parameter on the target protocol that this component&apos;s value should be mapped to.&lt;/p&gt;</sci:help>
						<sci:value>$(Parameter to Map)</sci:value>
					</sci:arg>
					<sci:arg name="Format" type="FormatType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;Specifies formatting to be applied to this element. Editing this parameter opens the Format Dialog.&lt;/p&gt;

&lt;p&gt;Depending on what this Format is being applied to, options may include:
&lt;ul&gt;&lt;li&gt;Font settings (e.g., Color, Size, Bold, Italic, Underline)&lt;/li&gt;
&lt;li&gt;Border settings (e.g., Color, Style, Width)&lt;/li&gt;
&lt;li&gt;Background settings (Color, Image)&lt;/li&gt;
&lt;li&gt;Alignment settings&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Only options that are relevant for this specific Format parameter will be displayed.&lt;/li&gt;
&lt;li&gt;Background Image: Allows you to select a background image for the reporting element. 
This image must be accessible to the Pipeline Pilot server. For example, 
you can copy images to the apps\scitegic\generic\dataroot\data\Images folder in your 
Pipeline Pilot installation to make them available. Supported image types include 
.gif, .jpg, .png, and .bmp.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
					</sci:arg>
					<sci:arg name="Position" type="PositionType" required="false" visibility="visible" multi="false">
						<sci:help>Specifies how this element is positioned. Editing this parameter opens the Position dialog, which enables you to change margins, paddings, width, and height.</sci:help>
					</sci:arg>
					<sci:arg name="Links and Actions" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>Links and actions to be applied to the report element produced by this component.</sci:help>
						<sci:member>Link Target</sci:member>
						<sci:member>HTML Attributes</sci:member>
						<sci:member>Tooltip</sci:member>
					</sci:arg>
					<sci:arg name="Link Target" type="ExpressionType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Sets this element as the destination for links from other elements in the report. The value of &lt;i&gt;Link Target&lt;/i&gt; can be text or a property name, and should match the value of &lt;i&gt;Link&lt;/i&gt; in another report component.  In the resulting report, when the element with &lt;i&gt;Link&lt;/i&gt; is clicked, the element with the matching &lt;i&gt;Link Target&lt;/i&gt; is brought to the top of the report page.</sci:help>
					</sci:arg>
					<sci:arg name="Tooltip" type="ExpressionType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>An optional tooltip for this reporting element.</sci:help>
					</sci:arg>
					<sci:arg name="HTML Attributes" type="HTMLAttributesType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Defines attributes for the reporting element. These attributes can be used by JavaScript code that is &lt;a href=&quot;javascript:DoLink(&apos;{262A8E5D-BB8E-4dc4-A6F5-A61FC6047EC8}&apos;)&quot;&gt;embedded in&lt;/a&gt; or &lt;a href=&quot;javascript:DoLink(&apos;{6DF7D4FA-28BC-453b-8882-DE55C7CFFBF9}&apos;)&quot;&gt;included by&lt;/a&gt; the HTML report. One very common attribute is &quot;id&quot; which allows access to the element using the document.getElementById(id) method. Event handlers such as &quot;onclick&quot; and &quot;onmouseover&quot; are also common attributes.</sci:help>
						<sci:value>100</sci:value>
						<sci:value>disabled</sci:value>
						<sci:value>&apos;&apos;</sci:value>
						<sci:value>id</sci:value>
						<sci:value>&apos;$(guid)&apos;</sci:value>
					</sci:arg>
					<sci:arg name="Column Settings" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Column settings control how the element appears when it is used inside a table.</sci:help>
						<sci:member>Column Settings Header Text</sci:member>
						<sci:member>Column Settings Header Format</sci:member>
						<sci:member>Column Settings Header Position</sci:member>
						<sci:member>Column Settings Cell Format</sci:member>
						<sci:member>Column Settings Cell Position</sci:member>
					</sci:arg>
					<sci:arg name="Column Settings Header Text" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>When the element is used within a Table component, this parameter sets the text displayed at the top of its column.</sci:help>
					</sci:arg>
					<sci:arg name="Column Settings Header Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>&lt;p&gt;When used in a table, this parameter sets the format of the text displayed 
at the top of its column.
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Font Size: Sets font size&lt;/li&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:value>600</sci:value>
					</sci:arg>
					<sci:arg name="Column Settings Header Position" type="PositionType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>When the element is used within a Table component, this parameter sets the position of the text displayed at the top of its column.</sci:help>
						<sci:value>500</sci:value>
						<sci:value>100.0</sci:value>
						<sci:value>Percent</sci:value>
						<sci:value>100.0</sci:value>
						<sci:value>Percent</sci:value>
						<sci:value>0.0</sci:value>
						<sci:value>Pixels</sci:value>
						<sci:value>0.0</sci:value>
						<sci:value>Pixels</sci:value>
						<sci:value>0.0</sci:value>
						<sci:value>Pixels</sci:value>
						<sci:value>0.0</sci:value>
						<sci:value>Pixels</sci:value>
						<sci:value>0.0</sci:value>
						<sci:value>Pixels</sci:value>
						<sci:value>0.0</sci:value>
						<sci:value>Pixels</sci:value>
						<sci:value>0.0</sci:value>
						<sci:value>Pixels</sci:value>
						<sci:value>0.0</sci:value>
						<sci:value>Pixels</sci:value>
					</sci:arg>
					<sci:arg name="Column Settings Cell Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>When used in a table, this parameter sets the format of the cells in the column.
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Font Size: Sets font size&lt;/li&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:value>600</sci:value>
					</sci:arg>
					<sci:arg name="Column Settings Cell Position" type="PositionType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>When the element is used within a Table component, this parameter sets the position of the cells in the column.</sci:help>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>REPORTTEXTNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{5D697158-1CFF-49B3-89F8-E2409B4CBFD3}</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Plug In</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Adds a list box form element to a report</sci:value>
						<sci:value>&lt;p&gt;Used to select one or more items from a list, to be passed to the work protocol.  Single or multi-select can be set.  If multiple values are selected, they are passed as an array.&lt;/p&gt;

&lt;p&gt;This component accepts both regular data records and array data.  If multiple records with array data are received, a list box for each data record will be created.&lt;/p&gt;

&lt;p&gt;You can set the number of rows to be displayed.  If the number of rows is less than the number of values to be displayed, then a vertical scroll bar is automatically added.  To create a drop-down list, set the number of rows to be displayed to 1.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/report/docs/reporting_basic.pdf&apos;)&quot;&gt;Report Design Essentials&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/reportadv/docs/reportadv_interactive.pdf&apos;)&quot;&gt;Interactive Reporting and Form Design&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>Data records containing entries to be shown in a List Box.</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>A data record representing the List Box and its associated data.</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>8.0.0.14</sci:value>
					</sci:arg>
					<sci:arg name="Link Options Mapping" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Mapping of the Format parameter name to the Link Options parameter name.</sci:help>
					</sci:arg>
					<sci:arg name="Use Package" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>scitegic/report</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>110</sci:value>
					</sci:arg>
					<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>DrainTopDown</sci:value>
					</sci:arg>
					<sci:arg name="JavaClass" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>com.scitegic.report.component.forms.ListBoxComponent</sci:value>
					</sci:arg>
					<sci:arg name="CaptureStdoutStderr" type="BoolType" required="true" visibility="nevershow" multi="false">
						<sci:help>CaptureStdoutStderr</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>List Box</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>1218 -1020</sci:value>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/reportadv</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Fri Feb 12 10:00:00 2010</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Reporting and Visualization\Web Application Development\Forms\List Box</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="Subprotocol" version="2">
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
						<sci:member>RunToCompletion Categorize Using</sci:member>
						<sci:legalval selected="true">False</sci:legalval>
						<sci:legalval>True - For Each Data Record</sci:legalval>
						<sci:legalval>True - For Each Category</sci:legalval>
					</sci:arg>
					<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
						<sci:member>Parallel Processing Options Batch Size</sci:member>
						<sci:member>Parallel Processing Options Server</sci:member>
						<sci:member>Parallel Processing Options Preserve Order</sci:member>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
						<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
#rtcForEachCategory := (Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
elsif (#rtcForEachCategory) then
	SetDisabledDetails(&quot;This parameter is not applicable when &apos;RunToCompletion&apos; is set to &apos;True - For Each Category&apos;&quot;);
end if;
#parallel and not #rtcForEachCategory;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="false">
						<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
						<sci:member>Parallel Processing Options Server Processes</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
						<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Run subprotocol on grid engine if available.</sci:help>
						<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid Grid Options</sci:member>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Grid Options" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Use this to specify grid engine specific command line parameters to the job submission command. Leave blank to use defaults.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>dropdown details</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>ReportSubProtocolNode</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>790</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>1818 -1020</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
						<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>7.9.0.30</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval>Owner Access Only</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/coreutils</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Tue Jan 26 10:02:05 2010</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>111</sci:value>
					</sci:arg>
					<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Processing Order</sci:help>
						<sci:value>DrainTopDown</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol>
					<sci:data object="SciTegic.Protocol.1">
						<sci:component name="Raw HTML (Semantic UI)" version="2">
							<sci:arg name="HTML" type="TextType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
								<sci:value>
&lt;div class=&quot;ui fluid dropdown selection disabled&quot;&gt;
</sci:value>
							</sci:arg>
							<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
								<sci:member>RunToCompletion Categorize Using</sci:member>
								<sci:legalval selected="true">False</sci:legalval>
								<sci:legalval>True - For Each Data Record</sci:legalval>
								<sci:legalval>True - For Each Category</sci:legalval>
							</sci:arg>
							<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
								<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
								<sci:member>Parallel Processing Options Batch Size</sci:member>
								<sci:member>Parallel Processing Options Server</sci:member>
								<sci:member>Parallel Processing Options Preserve Order</sci:member>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
								<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
#rtcForEachCategory := (Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
elsif (#rtcForEachCategory) then
	SetDisabledDetails(&quot;This parameter is not applicable when &apos;RunToCompletion&apos; is set to &apos;True - For Each Category&apos;&quot;);
end if;
#parallel and not #rtcForEachCategory;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
								<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
								<sci:member>Parallel Processing Options Server Processes</sci:member>
								<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
								<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
								<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>Run subprotocol on grid engine if available.</sci:help>
								<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
								<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
								<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
								<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval>ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Raw HTML (Semantic UI)</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol AutoLayout</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>ReportSubProtocolNode</sci:value>
							</sci:arg>
							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>Component Revision</sci:help>
								<sci:value>790</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{D257B36C-6670-4D92-8489-8A5E09C04D4D}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>90 -95</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Raw HTML.</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
								<sci:value>None</sci:value>
								<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>9.2.0.484</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Sticky Notes</sci:help>
							</sci:arg>
							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Options</sci:help>
								<sci:legalval>Owner Access Only</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>bondadx2</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Fri Feb 26 21:37:38 2016</sci:value>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>3</sci:value>
							</sci:arg>
							<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Processing Order</sci:help>
								<sci:value>DrainTopDown</sci:value>
							</sci:arg>
							<sci:arg name="OriginalPackage" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>OriginalPackage</sci:help>
								<sci:value>scitegic/coreutils</sci:value>
							</sci:arg>
							<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Subprotocol Modified</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>By Ref</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Subprotocol Made Link Into Copy</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Protocols\Quick Hits\semantic\Components\Semantic UI\Utilities\Raw HTML (Semantic UI)</sci:value>
							</sci:arg>
						</sci:component>
						<sci:protocol/>
					</sci:data>
					<sci:data object="SciTegic.PropertyFunctions.1">
						<sci:component name="No-op" version="2">
							<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
								<sci:legalval selected="true">LeaveData</sci:legalval>
								<sci:legalval>ClearData</sci:legalval>
								<sci:legalval>DeleteData</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:help>the action to perform</sci:help>
								<sci:value>PassDataToPort</sci:value>
							</sci:arg>
							<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>the port to pass data to</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>COMPONENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Thu Sep 28 16:34:08 2006</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>No-op</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Evaluate Expression</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{6E468A38-A6F7-4371-B65B-501A3ED4C0D9}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>90 -395</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Sends all incoming records out the Pass port unchanged</sci:value>
								<sci:value>&lt;p&gt;Useful in subprotocols to capture the point of input. For example, if you wish to perform two different sequences of operations on the same input data, use No-op as the first component of the subprotocol and connect both pipes to the No-op output port.&lt;/p&gt;

&lt;p&gt;You can also use this component to simplify the layout for complex protocols. For example, if you have three Reader components that need to be connected to three Viewer components, placing a No-op in the middle reduces the number of required connections and clarifies the logic.&lt;/p&gt;
</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>6.0.1.1</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\No-op</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.Protocol.1">
						<sci:component name="Raw HTML (Semantic UI)" version="2">
							<sci:arg name="HTML" type="TextType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
								<sci:value>&lt;i class=&quot;dropdown icon&quot;&gt;&lt;/i&gt;
&lt;div class=&quot;default text&quot;&gt;$(Text)&lt;/div&gt;

&lt;div class=&quot;menu transition hidden&quot; tabindex=&quot;-1&quot;&gt;
$(_ss)
&lt;/div&gt;

&lt;/div&gt;
</sci:value>
							</sci:arg>
							<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
								<sci:member>RunToCompletion Categorize Using</sci:member>
								<sci:legalval selected="true">False</sci:legalval>
								<sci:legalval>True - For Each Data Record</sci:legalval>
								<sci:legalval>True - For Each Category</sci:legalval>
							</sci:arg>
							<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
								<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
								<sci:member>Parallel Processing Options Batch Size</sci:member>
								<sci:member>Parallel Processing Options Server</sci:member>
								<sci:member>Parallel Processing Options Preserve Order</sci:member>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
								<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
#rtcForEachCategory := (Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
elsif (#rtcForEachCategory) then
	SetDisabledDetails(&quot;This parameter is not applicable when &apos;RunToCompletion&apos; is set to &apos;True - For Each Category&apos;&quot;);
end if;
#parallel and not #rtcForEachCategory;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
								<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
								<sci:member>Parallel Processing Options Server Processes</sci:member>
								<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
								<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
								<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>Run subprotocol on grid engine if available.</sci:help>
								<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
								<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
								<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
								<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval>ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Raw HTML (Semantic UI)</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol AutoLayout</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>ReportSubProtocolNode</sci:value>
							</sci:arg>
							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>Component Revision</sci:help>
								<sci:value>790</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{D257B36C-6670-4D92-8489-8A5E09C04D4D}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>90 -720</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Raw HTML.</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
								<sci:value>None</sci:value>
								<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>9.2.0.484</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Sticky Notes</sci:help>
							</sci:arg>
							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Options</sci:help>
								<sci:legalval>Owner Access Only</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>bondadx2</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Fri Feb 26 21:37:38 2016</sci:value>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>4</sci:value>
							</sci:arg>
							<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Processing Order</sci:help>
								<sci:value>DrainTopDown</sci:value>
							</sci:arg>
							<sci:arg name="OriginalPackage" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>OriginalPackage</sci:help>
								<sci:value>scitegic/coreutils</sci:value>
							</sci:arg>
							<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Subprotocol Modified</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>By Ref</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Subprotocol Made Link Into Copy</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Protocols\Quick Hits\semantic\Components\Semantic UI\Utilities\Raw HTML (Semantic UI)</sci:value>
							</sci:arg>
						</sci:component>
						<sci:protocol/>
					</sci:data>
				</sci:protocol>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="Pop-up (Semantic UI)" version="2">
					<sci:arg name="Popup" type="LinkParentParameterType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:help>A popup displays additional information in a temporary message.</sci:help>
						<sci:member>Popup Content</sci:member>
						<sci:member>Basic Popup</sci:member>
						<sci:member>Popup Appearance</sci:member>
						<sci:member>Behavior</sci:member>
						<sci:value>Popup</sci:value>
					</sci:arg>
					<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
						<sci:member>RunToCompletion Categorize Using</sci:member>
						<sci:legalval selected="true">False</sci:legalval>
						<sci:legalval>True - For Each Data Record</sci:legalval>
						<sci:legalval>True - For Each Category</sci:legalval>
					</sci:arg>
					<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;
When set to True, this set of options allows the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running locally or remotely.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option with care, since it will not increase throughput in all circumstances. Generally speaking, it yields improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
						<sci:member>Parallel Processing Options Batch Size</sci:member>
						<sci:member>Parallel Processing Options Server</sci:member>
						<sci:member>Parallel Processing Options Preserve Order</sci:member>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
						<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
end if;
#parallel;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="false">
						<sci:help>&lt;p&gt;
A comma-separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (that is, server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be useful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
						<sci:member>Parallel Processing Options Server Processes</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>A comma-separated list of the maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
						<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Run subprotocol on grid engine if available.</sci:help>
						<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid Grid Options</sci:member>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Grid Options" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Use this to specify grid engine specific command line parameters to the job submission command. Leave blank to use defaults.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;A comma-delimited list of global properties, each of which is automatically populated with the name of a file in the job&apos;s temporary folder, which always has a unique name.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold only the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;

&lt;p&gt;Any global property not declared in this way is created on the top-level global property list and is accessible from all subprotocols, but breaks the encapsulation of the subprotocol and may collide with another property of the same name.&lt;/p&gt;

&lt;p&gt;Therefore, you should always declare a new global property in the &lt;i&gt;DeclareLocal&lt;/i&gt; parameter, to scope the global property to the subprotocol where it is used.&lt;/p&gt;</sci:help>
						<sci:value>Constant GUID, guid, title_, fluid_, inverted_, flowing_</sci:value>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval>ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Popup Content" type="PromotedGroupMemberType" required="false" visibility="nevershow" multi="false">
						<sci:help>Popup content. (HTML is allowed).</sci:help>
						<sci:value>Popup Content</sci:value>
					</sci:arg>
					<sci:arg name="Basic Popup" type="PromotedGroupMemberType" required="true" visibility="nevershow" multi="false" legalvalsenforced="false">
						<sci:help>A popup can provide basic or extended formatting.</sci:help>
						<sci:value>Basic Popup</sci:value>
					</sci:arg>
					<sci:arg name="Popup Appearance" type="PromotedGroupMemberType" required="false" visibility="nevershow" multi="false" legalvalsenforced="false">
						<sci:help>Appearance</sci:help>
						<sci:member>Popup Width</sci:member>
						<sci:member>Fluid Popup</sci:member>
						<sci:member>Popup Size</sci:member>
						<sci:member>Flowing Popup</sci:member>
						<sci:member>Inverted Popup</sci:member>
						<sci:value>Popup Appearance</sci:value>
					</sci:arg>
					<sci:arg name="Popup Width" type="PromotedGroupMemberType" required="false" visibility="nevershow" multi="false">
						<sci:help>A popup can be wide or very wide to allow for longer content.</sci:help>
						<sci:value>Popup Width</sci:value>
					</sci:arg>
					<sci:arg name="Fluid Popup" type="PromotedGroupMemberType" required="true" visibility="nevershow" multi="false" legalvalsenforced="false">
						<sci:help>A fluid popup will take up the entire width of its  container.</sci:help>
						<sci:value>Fluid Popup</sci:value>
					</sci:arg>
					<sci:arg name="Popup Size" type="PromotedGroupMemberType" required="false" visibility="nevershow" multi="false">
						<sci:help>A popup can vary in font size.</sci:help>
						<sci:value>Popup Size</sci:value>
					</sci:arg>
					<sci:arg name="Flowing Popup" type="PromotedGroupMemberType" required="true" visibility="nevershow" multi="false" legalvalsenforced="false">
						<sci:help>A popup can have no maximum width and continue to flow to fit its content.</sci:help>
						<sci:value>Flowing Popup</sci:value>
					</sci:arg>
					<sci:arg name="Inverted Popup" type="PromotedGroupMemberType" required="true" visibility="nevershow" multi="false" legalvalsenforced="false">
						<sci:help>A popup can have its colors inverted.</sci:help>
						<sci:value>Inverted Popup</sci:value>
					</sci:arg>
					<sci:arg name="Behavior" type="PromotedGroupMemberType" required="false" visibility="nevershow" multi="false" legalvalsenforced="false">
						<sci:help>Behavior</sci:help>
						<sci:member>Show On</sci:member>
						<sci:value>Behavior</sci:value>
					</sci:arg>
					<sci:arg name="Show On" type="PromotedGroupMemberType" required="true" visibility="nevershow" multi="false">
						<sci:help>When to show the popup. Hover (mouseover), click, focus (when a form element such as a text box is in focus).</sci:help>
						<sci:value>Show On</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Pop-up (Semantic UI)</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>ReportSubProtocolNode</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>790</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{A4CABFCD-4D3E-4C94-98A6-36D3F83912B4}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>1818 -1370</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Pop-up (Semantic UI).</sci:value>
						<sci:value>&lt;p&gt;A popup displays additional information on top of a page element.&lt;/p&gt;
&lt;p&gt;This component will attach a pop-up to the page element that appears immediately before it in final page HTML. For example, a button or a label or a text box.&lt;/p&gt;
&lt;p&gt;This component will not interfere with page layout because it is contained inside a &amp;lt;script&amp;gt; HTML tag.&lt;/p&gt;</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
						<sci:value>None</sci:value>
						<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>16.1.0.1140</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>%VERSION 3%</sci:value>
						<sci:value>2113 -1370 378 177</sci:value>
						<sci:value>255 255 0</sci:value>
						<sci:value>prev().parent() special for listboxes</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval>Owner Access Only</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>bondadx2</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Tue Jun 14 14:53:07 2016</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>112</sci:value>
					</sci:arg>
					<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Processing Order</sci:help>
						<sci:value>DrainTopDown</sci:value>
					</sci:arg>
					<sci:arg name="OriginalPackage" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>OriginalPackage</sci:help>
						<sci:value>scitegic/coreutils</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Modified</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Semantic UI\Utilities\Internals\Pop-up (Semantic UI)</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol>
					<sci:data object="SciTegic.Protocol.1">
						<sci:component name="GUID" version="2">
							<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
								<sci:member>RunToCompletion Categorize Using</sci:member>
								<sci:legalval selected="true">False</sci:legalval>
								<sci:legalval>True - For Each Data Record</sci:legalval>
								<sci:legalval>True - For Each Category</sci:legalval>
							</sci:arg>
							<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
								<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
								<sci:member>Parallel Processing Options Batch Size</sci:member>
								<sci:member>Parallel Processing Options Server</sci:member>
								<sci:member>Parallel Processing Options Preserve Order</sci:member>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="false">
								<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
								<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
#rtcForEachCategory := (Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
elsif (#rtcForEachCategory) then
	SetDisabledDetails(&quot;This parameter is not applicable when &apos;RunToCompletion&apos; is set to &apos;True - For Each Category&apos;&quot;);
end if;
#parallel and not #rtcForEachCategory;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="false">
								<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
								<sci:member>Parallel Processing Options Server Processes</sci:member>
								<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
								<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
								<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Run subprotocol on grid engine if available.</sci:help>
								<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
								<sci:member>Parallel Processing Options Server Run On Grid Grid Options</sci:member>
								<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
								<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
								<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Run On Grid Grid Options" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Use this to specify grid engine specific command line parameters to the job submission command. Leave blank to use defaults.</sci:help>
								<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval>ComponentTakesInput</sci:legalval>
								<sci:legalval>ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>GUID</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol AutoLayout</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>SUBPROTOCOLNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>Component Revision</sci:help>
								<sci:value>790</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{98A8357E-0756-4CF4-8A6C-429F0C92DEA1}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>90 -95</sci:value>
							</sci:arg>
							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>By Ref</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Set an internal component ID.</sci:value>
								<sci:value>Set an internal component ID.</sci:value>
								<sci:value>None</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
								<sci:value>None</sci:value>
								<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>16.1.0.1140</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Sticky Notes</sci:help>
							</sci:arg>
							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Options</sci:help>
								<sci:legalval>Owner Access Only</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>bondadx2</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Jul 18 11:59:53 2016</sci:value>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="OriginalPackage" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>OriginalPackage</sci:help>
								<sci:value>scitegic/coreutils</sci:value>
							</sci:arg>
							<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Subprotocol Made Link Into Copy</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Subprotocol Modified</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Semantic UI\Utilities\Internals\GUID</sci:value>
							</sci:arg>
						</sci:component>
						<sci:protocol/>
					</sci:data>
					<sci:data object="SciTegic.EvaluateExpression.1">
						<sci:component name="Custom Filter (PilotScript)" version="2">
							<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
								<sci:help>The PilotScript expression used to filter the data.</sci:help>
								<sci:member>Initial Expression</sci:member>
								<sci:member>Final Expression</sci:member>
								<sci:member>Keep Calculated Properties</sci:member>
								<sci:value>@&apos;Popup Content&apos; is defined and trim(@&apos;Popup Content&apos;) ne &apos;&apos;</sci:value>
							</sci:arg>
							<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
								<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
								<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
								<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval>ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Custom Error Message</sci:help>
							</sci:arg>
							<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
								<sci:help>Version of expression parser to use.</sci:help>
								<sci:value>2</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
								<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
								<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>FILTERNODE</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Custom Filter (PilotScript)</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>90 -470</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
								<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>3</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Filters\Custom Filter (PilotScript)</sci:value>
							</sci:arg>
						</sci:component>
						<sci:proplist>
							<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
						</sci:proplist>
					</sci:data>
					<sci:data object="SciTegic.EvaluateExpression.1">
						<sci:component name="Custom Manipulator (PilotScript)" version="2">
							<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
								<sci:member>Initial Expression</sci:member>
								<sci:member>Final Expression</sci:member>
								<sci:member>Keep Calculated Properties</sci:member>
								<sci:value>if @&apos;Fluid Popup&apos; is defined and @&apos;Fluid Popup&apos; then
	@fluid_ := &apos;fluid&apos;;
else
	@fluid_ := &apos;&apos;;
end if;

if @&apos;Flowing Popup&apos; is defined and @&apos;Flowing Popup&apos; then
	@flowing_ := &apos;flowing&apos;;
else
	@flowing_ := &apos;&apos;;
end if;

if @&apos;Inverted Popup&apos; is defined and @&apos;Inverted Popup&apos; then
	@inverted_ := &apos;inverted&apos;;
else
	@inverted_ := &apos;&apos;;
end if;
</sci:value>
							</sci:arg>
							<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Custom Error Message</sci:help>
							</sci:arg>
							<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Version of expression parser to use.</sci:help>
								<sci:value>2</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Set variables</sci:value>
							</sci:arg>
							<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
								<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
								<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>EXPRESSIONNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>378 -470</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Applies a PilotScript expression to each data record
</sci:value>
								<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>7.0.0.35</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>4</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Manipulators\Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.Protocol.1">
						<sci:component name="Raw HTML (Semantic UI)" version="2">
							<sci:arg name="HTML" type="TextType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
								<sci:value>
&lt;script id=&quot;$(guid)&quot;&gt;
$(&apos;#$(guid)&apos;).prev().parent() // the element before me
  .popup({
    html : &apos;$(Popup Content)&apos;,
	variation : &apos;$(Popup Width) $(Popup Size) $(fluid_) $(flowing_) $(inverted_)&apos;,
	on : &apos;$(Show On)&apos;
  })
;
&lt;/script&gt;</sci:value>
							</sci:arg>
							<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
								<sci:member>RunToCompletion Categorize Using</sci:member>
								<sci:legalval selected="true">False</sci:legalval>
								<sci:legalval>True - For Each Data Record</sci:legalval>
								<sci:legalval>True - For Each Category</sci:legalval>
							</sci:arg>
							<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
								<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
								<sci:member>Parallel Processing Options Batch Size</sci:member>
								<sci:member>Parallel Processing Options Server</sci:member>
								<sci:member>Parallel Processing Options Preserve Order</sci:member>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
								<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
#rtcForEachCategory := (Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
elsif (#rtcForEachCategory) then
	SetDisabledDetails(&quot;This parameter is not applicable when &apos;RunToCompletion&apos; is set to &apos;True - For Each Category&apos;&quot;);
end if;
#parallel and not #rtcForEachCategory;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
								<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
								<sci:member>Parallel Processing Options Server Processes</sci:member>
								<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
								<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
								<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>Run subprotocol on grid engine if available.</sci:help>
								<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
								<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
								<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
								<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:value>ComponentReturnsPass</sci:value>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval>ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Raw HTML (Semantic UI)</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol AutoLayout</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>ReportTextNode</sci:value>
							</sci:arg>
							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>Component Revision</sci:help>
								<sci:value>790</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{D257B36C-6670-4D92-8489-8A5E09C04D4D}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>666 -470</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Raw HTML (Semantic UI).</sci:value>
								<sci:value>Type raw HTML code into this component. It will be inserted unchanged and unwrapped into the final Semantic UI HTML report. Any tags are allowed. Pipeline Pilot global variables in the $() notation are allowed.</sci:value>
								<sci:value>None</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
								<sci:value>None</sci:value>
								<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>16.1.0.1140</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Sticky Notes</sci:help>
							</sci:arg>
							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Options</sci:help>
								<sci:legalval>Owner Access Only</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>bondadx2</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Tue Jun 14 10:59:21 2016</sci:value>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>5</sci:value>
							</sci:arg>
							<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Processing Order</sci:help>
								<sci:value>DrainTopDown</sci:value>
							</sci:arg>
							<sci:arg name="OriginalPackage" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>OriginalPackage</sci:help>
								<sci:value>scitegic/coreutils</sci:value>
							</sci:arg>
							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>By Ref</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Subprotocol Made Link Into Copy</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Subprotocol Modified</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Semantic UI\Utilities\Raw HTML (Semantic UI)</sci:value>
							</sci:arg>
						</sci:component>
						<sci:protocol/>
					</sci:data>
					<sci:connectid from="3" to="4" type="true"/>
					<sci:connectid from="4" to="5" type="true"/>
					<sci:version iVal="1"/>
				</sci:protocol>
			</sci:data>
			<sci:connectid from="99" to="100" type="true"/>
			<sci:connectid from="100" to="104" type="true"/>
			<sci:connectid from="101" to="104" type="true"/>
			<sci:connectid from="102" to="99" type="true"/>
			<sci:connectid from="102" to="109" type="false"/>
			<sci:connectid from="103" to="101" type="true"/>
			<sci:connectid from="103" to="108" type="false"/>
			<sci:connectid from="105" to="106" type="true"/>
			<sci:connectid from="106" to="107" type="true"/>
			<sci:connectid from="107" to="102" type="true"/>
			<sci:connectid from="107" to="110" type="false"/>
			<sci:connectid from="108" to="104" type="true"/>
			<sci:connectid from="109" to="103" type="true"/>
			<sci:connectid from="110" to="111" type="true"/>
			<sci:connectid from="111" to="104" type="true"/>
			<sci:connectid from="112" to="104" type="true"/>
			<sci:version iVal="9"/>
		</sci:protocol>
	</sci:dbitem>
<!-- Exported protocol -->
<sci:component name="8.0 Protocol Warning" version="2">
<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
<sci:help>Component Icon</sci:help>
<sci:value>PROTOCOLNODE</sci:value>
</sci:arg>
<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
<sci:help>Protocol Sticky Notes</sci:help>
<sci:value>%VERSION 3%</sci:value>
<sci:value>400 -219 1222 221</sci:value>
<sci:value>250 120 20</sci:value>
<sci:value>WARNING! This is a Pipeline Pilot protocol written in version 8.0 or later. It contains features that are not supported in earlier versions of Pipeline Pilot.</sci:value>
</sci:arg>
</sci:component>
</sci:data>

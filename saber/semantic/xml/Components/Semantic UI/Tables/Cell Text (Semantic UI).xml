<?xml version="1.0" encoding="UTF-8"?>
<sci:data xmlns:sci="http://www.SciTegic.com/" object="SciTegic.Protocol.1" format="8.0.0">
	<sci:dbitem>
		<sci:component name="Cell Text (Semantic UI)" version="2">
			<sci:arg name="Text" type="TextExpressionType" required="true" visibility="visible" multi="false" expanded="true">
				<sci:metaproplist>
					<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
					<sci:mpropval name="SCI_PromotedFrom" type="StringType">
						<sci:value>Text</sci:value>
					</sci:mpropval>
				</sci:metaproplist>
				<sci:help>&lt;p&gt;A PilotScript expression that evaluates to the text to render in this object.  This expression has access to global data and any properties (or calculable properties) on the incoming data record.  Also, you can provide text as static (quoted) strings.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;To specify a property name that includes whitespace characters, use the &lt;code&gt;property()&lt;/code&gt; PilotScript function, e.g., if the property name is &quot;Profit Margin&quot; use:&lt;p&gt;&lt;code&gt;property(&apos;Profit Margin&apos;)&lt;/code&gt;&lt;/li&gt;
	&lt;li&gt;When specifying columns for an in-line table, the expression you enter here (often simply a property name), will be the default column header.  To explicitly set the column header, use &lt;i&gt;Column Settings&lt;/i&gt; &amp;gt; &lt;i&gt;Header Text&lt;/i&gt;.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
				<sci:member>Non-breaking Spaces</sci:member>
				<sci:member>Allow HTML Tags</sci:member>
				<sci:member>Array Value Display</sci:member>
			</sci:arg>
			<sci:arg name="Non-breaking Spaces" type="BoolType" required="false" visibility="visible" multi="false" expanded="true">
				<sci:metaproplist>
					<sci:mpropval name="SCI_PromotedFrom" type="StringType">
						<sci:value>Non-breaking Spaces</sci:value>
					</sci:mpropval>
				</sci:metaproplist>
				<sci:help>&lt;p&gt;If true, spaces will be output as non-breaking spaces in HTML and Word reports.&lt;/p&gt;</sci:help>
				<sci:legalval>True</sci:legalval>
				<sci:legalval selected="true">False</sci:legalval>
			</sci:arg>
			<sci:arg name="Allow HTML Tags" type="BoolType" required="false" visibility="visible" multi="false">
				<sci:metaproplist>
					<sci:mpropval name="SCI_PromotedFrom" type="StringType">
						<sci:value>Allow HTML Tags</sci:value>
					</sci:mpropval>
				</sci:metaproplist>
				<sci:help>&lt;p&gt;If true, HTML tags are interpreted as HTML. In HTML reports, all tags are supported. PDF and Word reports support the following tags:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&amp;lt;BR&amp;gt;&lt;/li&gt;
  &lt;li&gt;&amp;lt;B&amp;gt;&lt;/li&gt;
  &lt;li&gt;&amp;lt;I&amp;gt;&lt;/li&gt;
  &lt;li&gt;&amp;lt;U&amp;gt;&lt;/li&gt;
  &lt;li&gt;&amp;lt;A HREF=&quot;xxx&quot; TITLE=&quot;yyy&quot; NAME=&quot;zzz&quot;&amp;gt;&lt;/li&gt;
  &lt;li&gt;&amp;lt;FONT STYLE=&quot;BACKGROUND-COLOR: xxx; COLOR: yyy; SIZE: zzz; FACE: vvv&quot;&amp;gt;&lt;/li&gt;
&lt;/ul&gt;</sci:help>
				<sci:legalval selected="true">True</sci:legalval>
				<sci:legalval>False</sci:legalval>
			</sci:arg>
			<sci:arg name="Array Value Display" type="StringType" required="false" visibility="visible" multi="false">
				<sci:metaproplist>
					<sci:mpropval name="SCI_PromotedFrom" type="StringType">
						<sci:value>Array Value Display</sci:value>
					</sci:mpropval>
				</sci:metaproplist>
				<sci:help>&lt;p&gt;Determines how array values are separated when they are displayed.&lt;/p&gt;</sci:help>
				<sci:legalval selected="true">Separate by Newlines</sci:legalval>
				<sci:legalval>Separate by Commas</sci:legalval>
				<sci:legalval>First Value Only</sci:legalval>
			</sci:arg>
			<sci:arg name="Appearance" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
				<sci:help>Appearance</sci:help>
				<sci:member>Background Color when in a Semantic Table</sci:member>
			</sci:arg>
			<sci:arg name="Background Color when in a Semantic Table" type="ExpressionType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
				<sci:metaproplist>
					<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
					<sci:mpropval name="SCI_PromotedFrom" type="StringType">
						<sci:value>Background Color when in a Semantic Table</sci:value>
					</sci:mpropval>
				</sci:metaproplist>
				<sci:help>&lt;p&gt;This is an expression type parameter: when using constant values put them in quotes.&lt;/p&gt;
&lt;p&gt;To define dynamic cell color, write PilotScript that ends in a color value or an empty string. The script must output a string even if empty.&lt;/p&gt;

&lt;p&gt;For example&lt;/p&gt;
&lt;code&gt;if mycol &gt; 15 then&lt;br&gt;
	&apos;negative&apos;;&lt;br&gt;
else&lt;br&gt;
	&apos;&apos;;&lt;br&gt;
end if;&lt;br&gt;
&lt;/code&gt;

&lt;p&gt;Allowed cell colors in addition to a blank color:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Neutral&lt;/li&gt;
&lt;li&gt;Positive&lt;/li&gt;
&lt;li&gt;Warning&lt;/li&gt;
&lt;li&gt;Negative&lt;/li&gt;
&lt;/ul&gt;</sci:help>
				<sci:value>&apos;&apos;; // This is an expression type parameter: the script here must output a string even if empty.</sci:value>
			</sci:arg>
			<sci:arg name="Links and Actions" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false" ref="{42CAEC5D-EF4C-4B14-8ECF-4E002FE60B9C}!Base">
				<sci:metaproplist>
					<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
					<sci:mpropval name="SCI_PromotedFrom" type="StringType">
						<sci:value>Links and Actions</sci:value>
					</sci:mpropval>
				</sci:metaproplist>
				<sci:member>Link</sci:member>
				<sci:member>Link Target</sci:member>
				<sci:member>HTML Attributes</sci:member>
				<sci:member>Tooltip</sci:member>
				<sci:member>Protocol Link</sci:member>
				<sci:member>Link Options</sci:member>
			</sci:arg>
			<sci:arg name="Link" type="ExpressionType" required="false" visibility="visible" multi="false" uimpl="false" ref="{42CAEC5D-EF4C-4B14-8ECF-4E002FE60B9C}!Base">
				<sci:metaproplist>
					<sci:mpropval name="SCI_PromotedFrom" type="StringType">
						<sci:value>Link</sci:value>
					</sci:mpropval>
				</sci:metaproplist>
			</sci:arg>
			<sci:arg name="Protocol Link" type="ProtocolLinkType" required="false" visibility="visible" multi="false" uimpl="false" ref="{42CAEC5D-EF4C-4B14-8ECF-4E002FE60B9C}!Base">
				<sci:metaproplist>
					<sci:mpropval name="SCI_PromotedFrom" type="StringType">
						<sci:value>Protocol Link</sci:value>
					</sci:mpropval>
				</sci:metaproplist>
			</sci:arg>
			<sci:arg name="Link Options" type="LinkOptionsType" required="false" visibility="visible" multi="false" ref="{42CAEC5D-EF4C-4B14-8ECF-4E002FE60B9C}!Base">
				<sci:metaproplist>
					<sci:mpropval name="SCI_PromotedFrom" type="StringType">
						<sci:value>Link Options</sci:value>
					</sci:mpropval>
				</sci:metaproplist>
			</sci:arg>
			<sci:arg name="Link Target" type="ExpressionType" required="false" visibility="visible" multi="false" uimpl="false" ref="{42CAEC5D-EF4C-4B14-8ECF-4E002FE60B9C}!Base">
				<sci:metaproplist>
					<sci:mpropval name="SCI_PromotedFrom" type="StringType">
						<sci:value>Link Target</sci:value>
					</sci:mpropval>
				</sci:metaproplist>
			</sci:arg>
			<sci:arg name="Tooltip" type="ExpressionType" required="false" visibility="visible" multi="false" uimpl="false" ref="{42CAEC5D-EF4C-4B14-8ECF-4E002FE60B9C}!Base">
				<sci:metaproplist>
					<sci:mpropval name="SCI_PromotedFrom" type="StringType">
						<sci:value>Tooltip</sci:value>
					</sci:mpropval>
				</sci:metaproplist>
			</sci:arg>
			<sci:arg name="HTML Attributes" type="HTMLAttributesType" required="false" visibility="visible" multi="false" uimpl="false" ref="{42CAEC5D-EF4C-4B14-8ECF-4E002FE60B9C}!Base">
				<sci:metaproplist>
					<sci:mpropval name="SCI_PromotedFrom" type="StringType">
						<sci:value>HTML Attributes</sci:value>
					</sci:mpropval>
				</sci:metaproplist>
				<sci:value>100</sci:value>
				<sci:value>tdclass</sci:value>
				<sci:value>toLower(Parameter(&apos;Background Color when in a Semantic Table&apos;));</sci:value>
			</sci:arg>
			<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
				<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
				<sci:member>RunToCompletion Categorize Using</sci:member>
				<sci:legalval selected="true">False</sci:legalval>
				<sci:legalval>True - For Each Data Record</sci:legalval>
				<sci:legalval>True - For Each Category</sci:legalval>
			</sci:arg>
			<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
				<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
				<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
				<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
			</sci:arg>
			<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
				<sci:help>&lt;p&gt;
When set to True, this set of options allows the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running locally or remotely.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option with care, since it will not increase throughput in all circumstances. Generally speaking, it yields improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
				<sci:member>Parallel Processing Options Batch Size</sci:member>
				<sci:member>Parallel Processing Options Server</sci:member>
				<sci:member>Parallel Processing Options Preserve Order</sci:member>
				<sci:legalval>True</sci:legalval>
				<sci:legalval selected="true">False</sci:legalval>
			</sci:arg>
			<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="false">
				<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
				<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
end if;
#parallel;</sci:enabledscript>
			</sci:arg>
			<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="false">
				<sci:help>&lt;p&gt;
A comma-separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (that is, server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be useful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
				<sci:member>Parallel Processing Options Server Processes</sci:member>
				<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
				<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
				<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
			</sci:arg>
			<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
				<sci:help>A comma-separated list of the maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
				<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
				<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
			</sci:arg>
			<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
				<sci:help>Run subprotocol on grid engine if available.</sci:help>
				<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
				<sci:member>Parallel Processing Options Server Run On Grid Grid Options</sci:member>
				<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
				<sci:legalval selected="true">True</sci:legalval>
				<sci:legalval>False</sci:legalval>
			</sci:arg>
			<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
				<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
				<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
			</sci:arg>
			<sci:arg name="Parallel Processing Options Server Run On Grid Grid Options" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
				<sci:help>Use this to specify grid engine specific command line parameters to the job submission command. Leave blank to use defaults.</sci:help>
				<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
			</sci:arg>
			<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
				<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
				<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
				<sci:legalval selected="true">True</sci:legalval>
				<sci:legalval>False</sci:legalval>
			</sci:arg>
			<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;A comma-delimited list of global properties, each of which is automatically populated with the name of a file in the job&apos;s temporary folder, which always has a unique name.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold only the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
			</sci:arg>
			<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;

&lt;p&gt;Any global property not declared in this way is created on the top-level global property list and is accessible from all subprotocols, but breaks the encapsulation of the subprotocol and may collide with another property of the same name.&lt;/p&gt;

&lt;p&gt;Therefore, you should always declare a new global property in the &lt;i&gt;DeclareLocal&lt;/i&gt; parameter, to scope the global property to the subprotocol where it is used.&lt;/p&gt;</sci:help>
			</sci:arg>
			<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
				<sci:help>Component Attributes</sci:help>
				<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
				<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
				<sci:legalval>ComponentReturnsFail</sci:legalval>
				<sci:legalval>ComponentRunsLocal</sci:legalval>
			</sci:arg>
			<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
				<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
				<sci:legalval selected="true">Halt</sci:legalval>
				<sci:legalval>Fail</sci:legalval>
				<sci:legalval>Pass</sci:legalval>
			</sci:arg>
			<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
				<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
				<sci:legalval selected="true">Halt</sci:legalval>
				<sci:legalval>Fail</sci:legalval>
				<sci:legalval>Pass</sci:legalval>
			</sci:arg>
			<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>Custom Error Message</sci:help>
			</sci:arg>
			<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:value>Cell Text (Semantic UI)</sci:value>
			</sci:arg>
			<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
				<sci:help>Protocol AutoLayout</sci:help>
				<sci:value>1</sci:value>
			</sci:arg>
			<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
				<sci:value>0</sci:value>
			</sci:arg>
			<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
				<sci:value>ReportSubProtocolNode</sci:value>
			</sci:arg>
			<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
				<sci:help>Component Revision</sci:help>
				<sci:value>790</sci:value>
			</sci:arg>
			<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:value>{B54B820F-C67D-4F31-831C-721708D9999A}</sci:value>
			</sci:arg>
			<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:value>810 -945</sci:value>
			</sci:arg>
			<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
				<sci:help>By Ref</sci:help>
				<sci:value>0</sci:value>
			</sci:arg>
			<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
				<sci:value>100</sci:value>
				<sci:value>Cell Text (Semantic UI).</sci:value>
				<sci:value>&lt;p&gt;Adds text (HTML is allowed) to a cell in a Semantic UI table.&lt;/p&gt;

&lt;p&gt;This component is identical to a Text component except it can set a cell background color dynamically when connected into a Semantic UI table.&lt;/p&gt;
</sci:value>
				<sci:value>Generic</sci:value>
				<sci:value/>
				<sci:value>Generic</sci:value>
				<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
				<sci:value>None</sci:value>
				<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
			</sci:arg>
			<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>The server version when this component was registered</sci:help>
				<sci:value>16.1.0.1140</sci:value>
			</sci:arg>
			<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
			<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>Protocol Sticky Notes</sci:help>
			</sci:arg>
			<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
				<sci:help>Protocol Scale</sci:help>
				<sci:value>100</sci:value>
			</sci:arg>
			<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>Protocol Options</sci:help>
				<sci:legalval>Owner Access Only</sci:legalval>
			</sci:arg>
			<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>The user who registered this component.</sci:help>
				<sci:value>dbondarev</sci:value>
			</sci:arg>
			<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>The date this component was registered.</sci:help>
				<sci:value>Sat Sep 30 17:50:58 2017</sci:value>
			</sci:arg>
			<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
				<sci:help>Local Component Identifier</sci:help>
				<sci:value>17</sci:value>
			</sci:arg>
			<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>Processing Order</sci:help>
				<sci:value>DrainTopDown</sci:value>
			</sci:arg>
			<sci:arg name="OriginalPackage" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>OriginalPackage</sci:help>
				<sci:value>scitegic/coreutils</sci:value>
			</sci:arg>
			<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>The original path within the database of this component.</sci:help>
				<sci:value>Components\Semantic UI\Tables\Cell Text (Semantic UI)</sci:value>
			</sci:arg>
		</sci:component>
		<sci:protocol>
			<sci:data object="SciTegic.ComponentJavaPlugin.1">
				<sci:component name="Cell Text (Semantic UI)" version="2">
					<sci:arg name="Text" type="LinkParentParameterType" required="true" visibility="visible" multi="false" expanded="true">
						<sci:metaproplist>
							<sci:propval name="SCI_InitializeUsingOrigType">TextExpressionType</sci:propval>
						</sci:metaproplist>
						<sci:help>&lt;p&gt;A PilotScript expression that evaluates to the text to render in this object.  This expression has access to global data and any properties (or calculable properties) on the incoming data record.  Also, you can provide text as static (quoted) strings.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;To specify a property name that includes whitespace characters, use the &lt;code&gt;property()&lt;/code&gt; PilotScript function, e.g., if the property name is &quot;Profit Margin&quot; use:&lt;p&gt;&lt;code&gt;property(&apos;Profit Margin&apos;)&lt;/code&gt;&lt;/li&gt;
	&lt;li&gt;When specifying columns for an in-line table, the expression you enter here (often simply a property name), will be the default column header.  To explicitly set the column header, use &lt;i&gt;Column Settings&lt;/i&gt; &amp;gt; &lt;i&gt;Header Text&lt;/i&gt;.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
						<sci:member>Non-breaking Spaces</sci:member>
						<sci:member>Allow HTML Tags</sci:member>
						<sci:member>Array Value Display</sci:member>
						<sci:value>Text</sci:value>
					</sci:arg>
					<sci:arg name="Background Color when in a Semantic Table" type="LinkSingleParentParameterType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:propval name="SCI_InitializeUsingOrigType">ExpressionType</sci:propval>
						</sci:metaproplist>
						<sci:value>Background Color when in a Semantic Table</sci:value>
					</sci:arg>
					<sci:arg name="Links and Actions" type="LinkParentParameterType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:metaproplist>
							<sci:propval name="SCI_InitializeUsingOrigType">GroupType</sci:propval>
						</sci:metaproplist>
						<sci:help>Links and actions to be applied to the report element produced by this component.</sci:help>
						<sci:member>Link</sci:member>
						<sci:member>Link Target</sci:member>
						<sci:member>HTML Attributes</sci:member>
						<sci:member>Tooltip</sci:member>
						<sci:member>Protocol Link</sci:member>
						<sci:member>Link Options</sci:member>
						<sci:value>Links and Actions</sci:value>
					</sci:arg>
					<sci:arg name="Format" type="FormatType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Specifies formatting to be applied to this element. Editing this parameter opens the Format Dialog.&lt;/p&gt;

&lt;p&gt;Depending on what this Format is being applied to, options may include:
&lt;ul&gt;&lt;li&gt;Font settings (e.g., Color, Size, Bold, Italic, Underline)&lt;/li&gt;
&lt;li&gt;Border settings (e.g., Color, Style, Width)&lt;/li&gt;
&lt;li&gt;Background settings (Color, Image)&lt;/li&gt;
&lt;li&gt;Alignment settings&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Only options that are relevant for this specific Format parameter will be displayed.&lt;/li&gt;
&lt;li&gt;Background Image: Allows you to select a background image for the reporting element. This image must be accessible to the Pipeline Pilot server. For example, there are some example images in the apps\scitegic\generic\dataroot\data\Images folder in your Pipeline Pilot installation (shortcut is &quot;generic\Images&quot; folder). To use your own images, you need to upload them to a location such as your userdir or jobdir. An easy way to do this is to use the Binary Reader component to read the file, and the Binary Writer component to save it to the chosen location. Supported image types include .gif, .jpg, .png, and .bmp.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
						<sci:value>600</sci:value>
					</sci:arg>
					<sci:arg name="Position" type="PositionType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Specifies how this element is positioned. Editing this parameter opens the Position dialog, which enables you to change margins, paddings, width, and height.</sci:help>
					</sci:arg>
					<sci:arg name="Column Settings" type="GroupType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Column settings control how the element appears when it is used inside a table.</sci:help>
						<sci:member>Column Settings Header Format</sci:member>
						<sci:member>Column Settings Cell Format</sci:member>
						<sci:member>Column Settings Cell Position</sci:member>
						<sci:member>Column Settings Header Text</sci:member>
						<sci:member>Column Settings Header Position</sci:member>
					</sci:arg>
					<sci:arg name="Column Settings Header Text" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
						<sci:help>When the element is used within a Table component, this parameter sets the text displayed at the top of its column.</sci:help>
					</sci:arg>
					<sci:arg name="Column Settings Header Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
						<sci:help>&lt;p&gt;When used in a table, this parameter sets the format of the text displayed 
at the top of its column.
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Font Size: Sets font size&lt;/li&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:value>600</sci:value>
					</sci:arg>
					<sci:arg name="Column Settings Header Position" type="PositionType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
						<sci:help>When the element is used within a Table component, this parameter sets the position of the text displayed at the top of its column.</sci:help>
					</sci:arg>
					<sci:arg name="Column Settings Cell Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
						<sci:help>When used in a table, this parameter sets the format of the cells in the column.
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Font Size: Sets font size&lt;/li&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:value>600</sci:value>
					</sci:arg>
					<sci:arg name="Column Settings Cell Position" type="PositionType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
						<sci:help>When the element is used within a Table component, this parameter sets the position of the cells in the column.</sci:help>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Non-breaking Spaces" type="PromotedGroupMemberType" required="false" visibility="nevershow" multi="false" expanded="true">
						<sci:help>&lt;p&gt;If true, spaces will be output as non-breaking spaces in HTML and Word reports.&lt;/p&gt;</sci:help>
						<sci:value>Non-breaking Spaces</sci:value>
					</sci:arg>
					<sci:arg name="Allow HTML Tags" type="PromotedGroupMemberType" required="false" visibility="nevershow" multi="false">
						<sci:help>&lt;p&gt;If true, HTML tags are interpreted as HTML. In HTML reports, all tags are supported. PDF and Word reports support the following tags:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&amp;lt;BR&amp;gt;&lt;/li&gt;
  &lt;li&gt;&amp;lt;B&amp;gt;&lt;/li&gt;
  &lt;li&gt;&amp;lt;I&amp;gt;&lt;/li&gt;
  &lt;li&gt;&amp;lt;U&amp;gt;&lt;/li&gt;
  &lt;li&gt;&amp;lt;A HREF=&quot;xxx&quot; TITLE=&quot;yyy&quot; NAME=&quot;zzz&quot;&amp;gt;&lt;/li&gt;
  &lt;li&gt;&amp;lt;FONT STYLE=&quot;BACKGROUND-COLOR: xxx; COLOR: yyy; SIZE: zzz; FACE: vvv&quot;&amp;gt;&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:value>Allow HTML Tags</sci:value>
					</sci:arg>
					<sci:arg name="Array Value Display" type="PromotedGroupMemberType" required="false" visibility="nevershow" multi="false">
						<sci:help>&lt;p&gt;Determines how array values are separated when they are displayed.&lt;/p&gt;</sci:help>
						<sci:value>Array Value Display</sci:value>
					</sci:arg>
					<sci:arg name="Link" type="PromotedGroupMemberType" required="false" visibility="nevershow" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;An optional parameter specifying a link for the reporting element produced by this component. The &lt;i&gt;Link&lt;/i&gt; value can be an internal report link or an external URL.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Internal: A string that points to a &lt;i&gt;Link Target&lt;/i&gt; in the report. Both the &lt;i&gt;Link&lt;/i&gt; and &lt;i&gt;Link Target&lt;/i&gt; values need to match for an internal link to work.&lt;/li&gt;
&lt;li&gt;External: A string that points to an external URL such as &apos;http://www.sitename.com&apos;, &apos;ftp://www.sitename.com&apos;, or a file URL. A file URL can be in one of these forms:
&lt;ul&gt;
&lt;li&gt;&apos;file:///C:/.../scitegic root/.../document.pdf&apos; - when using an absolute path within the Pipeline Pilot installation folder&lt;/li&gt;
&lt;li&gt;&apos;file://///machine_name/C/.../document.pdf&apos; - when using a Windows UNC path visible to the Pipeline Pilot server&lt;/li&gt;
&lt;li&gt;&apos;file:///relative_path/document.pdf&apos; - when using a path, relative to &lt;i&gt;@SciTegicRoot&lt;/i&gt;&lt;/li&gt;
&lt;li&gt;&apos;file://machine_name.domain_name.com/C/.../document.pdf&apos; - when using a path with a fully qualified machine name&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
&lt;b&gt;Example:&lt;/b&gt;
To create a link from a combination of a property and static text, create a valid PilotScript expression. For example, if you have internal web pages linking to research projects that have addresses of the form: &lt;i&gt;http://mydomain.com/ProjectID&lt;/i&gt;, where &lt;i&gt;ProjectID&lt;/i&gt; is the actual project ID, and also a local property on the datastream, you would use:
&lt;p&gt;&lt;code&gt;&apos;http://mydomain.com&apos; . ProjectID&lt;/code&gt;
&lt;p&gt;as the value for &lt;i&gt;Link&lt;/i&gt;.</sci:help>
						<sci:value>Link</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Link" type="PromotedGroupMemberType" required="false" visibility="nevershow" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;Specifies a link that runs a protocol.  Editing this parameter opens up the Protocol Link Dialog.&lt;/p&gt;</sci:help>
						<sci:value>Protocol Link</sci:value>
					</sci:arg>
					<sci:arg name="Link Options" type="PromotedGroupMemberType" required="false" visibility="nevershow" multi="false">
						<sci:help>Specifies how to display pages linked to the reporting element. 
Applies only if &lt;i&gt;Link&lt;/i&gt; or &lt;i&gt;Protocol Link&lt;/i&gt; are set for the component.</sci:help>
						<sci:value>Link Options</sci:value>
					</sci:arg>
					<sci:arg name="Link Target" type="PromotedGroupMemberType" required="false" visibility="nevershow" multi="false" uimpl="false">
						<sci:help>Sets this element as the destination for links from other elements in the report. The value of &lt;i&gt;Link Target&lt;/i&gt; can be text or a property name, and should match the value of &lt;i&gt;Link&lt;/i&gt; in another report component.  In the resulting report, when the element with &lt;i&gt;Link&lt;/i&gt; is clicked, the element with the matching &lt;i&gt;Link Target&lt;/i&gt; is brought to the top of the report page.</sci:help>
						<sci:value>Link Target</sci:value>
					</sci:arg>
					<sci:arg name="Tooltip" type="PromotedGroupMemberType" required="false" visibility="nevershow" multi="false" uimpl="false">
						<sci:help>An optional tooltip for this reporting element.</sci:help>
						<sci:value>Tooltip</sci:value>
					</sci:arg>
					<sci:arg name="HTML Attributes" type="PromotedGroupMemberType" required="false" visibility="nevershow" multi="false" uimpl="false">
						<sci:help>Defines attributes for the reporting element. These attributes can be used by JavaScript code that is &lt;a href=&quot;javascript:DoLink(&apos;{262A8E5D-BB8E-4dc4-A6F5-A61FC6047EC8}&apos;)&quot;&gt;embedded in&lt;/a&gt; or &lt;a href=&quot;javascript:DoLink(&apos;{6DF7D4FA-28BC-453b-8882-DE55C7CFFBF9}&apos;)&quot;&gt;included by&lt;/a&gt; the HTML report. One very common attribute is &quot;id&quot; which allows access to the element using the document.getElementById(id) method. Event handlers such as &quot;onclick&quot; and &quot;onmouseover&quot; are also common attributes.</sci:help>
						<sci:value>HTML Attributes</sci:value>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>dbondarev</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Sat Sep 30 17:22:58 2017</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Text</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>90 -95</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>REPORTTEXTNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{6AFA03FA-F6C1-4AB7-A312-F043FD3E0226}</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Plug In</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Adds text to a report</sci:value>
						<sci:value>&lt;p&gt;The text can be supplied from any expression, or as a quoted string, and formatted with the &lt;i&gt;Format&lt;/i&gt; and &lt;i&gt;Position&lt;/i&gt; parameters.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;Text&lt;/i&gt; is a PilotScript expression that evaluates to the text to display.  This expression has access to global data and any properties (or calculable properties) on the incoming data record.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/report/docs/reporting_basic.pdf&apos;)&quot;&gt;Report Design Essentials&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>8.0.0.14</sci:value>
					</sci:arg>
					<sci:arg name="Keep Properties" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>A comma-separated list of properties that are transferred from the input data record to the text object.  These properties can then be used to apply conditional formats in downstream components such as Columns.</sci:help>
					</sci:arg>
					<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>DrainTopDown</sci:value>
					</sci:arg>
					<sci:arg name="JavaClass" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>com.scitegic.report.component.TextComponent</sci:value>
					</sci:arg>
					<sci:arg name="CaptureStdoutStderr" type="BoolType" required="true" visibility="nevershow" multi="false">
						<sci:help>CaptureStdoutStderr</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Link Options Mapping" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Mapping of the Format parameter name to the Link Options parameter name.</sci:help>
						<sci:value>Format</sci:value>
						<sci:value>Link Options</sci:value>
					</sci:arg>
					<sci:arg name="Use Package" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>scitegic/report</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="OriginalPackage" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>OriginalPackage</sci:help>
						<sci:value>scitegic/report</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Unknown</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:version iVal="3"/>
		</sci:protocol>
	</sci:dbitem>
<!-- Exported protocol -->
<sci:component name="8.0 Protocol Warning" version="2">
<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
<sci:help>Component Icon</sci:help>
<sci:value>PROTOCOLNODE</sci:value>
</sci:arg>
<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
<sci:help>Protocol Sticky Notes</sci:help>
<sci:value>%VERSION 3%</sci:value>
<sci:value>400 -219 1222 221</sci:value>
<sci:value>250 120 20</sci:value>
<sci:value>WARNING! This is a Pipeline Pilot protocol written in version 8.0 or later. It contains features that are not supported in earlier versions of Pipeline Pilot.</sci:value>
</sci:arg>
</sci:component>
</sci:data>
